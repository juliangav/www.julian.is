{
  "nodes": {
    "SitePage /dev-404-page/": {
      "jsonName": "dev-404-page-5f9",
      "internalComponentName": "ComponentDev404Page",
      "path": "/dev-404-page/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/.cache/dev-404-page.js",
      "componentChunkName": "component---cache-dev-404-page-js",
      "context": {},
      "pluginCreator___NODE": "d48d1c52-fe48-53cb-8f08-aa4b47dde5a5",
      "pluginCreatorId": "d48d1c52-fe48-53cb-8f08-aa4b47dde5a5",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/.cache/dev-404-page.js",
      "id": "SitePage /dev-404-page/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "b7aad0ea387c80e7ce08c3b73634bd09",
        "description": "d48d1c52-fe48-53cb-8f08-aa4b47dde5a5",
        "owner": "internal-data-bridge"
      }
    },
    "d48d1c52-fe48-53cb-8f08-aa4b47dde5a5": {
      "resolve": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby/dist/internal-plugins/dev-404-page",
      "id": "d48d1c52-fe48-53cb-8f08-aa4b47dde5a5",
      "name": "dev-404-page",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "createPagesStatefully"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby/dist/internal-plugins/dev-404-page",
      "packageJson": {
        "name": "dev-404-page",
        "description": "Internal plugin to add a 404 page in development with helpful information",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "e67607a5770ae1f301bddce9a325ca75",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "1fc32581-893a-55e8-8927-bcd667e2b700": {
      "resolve": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby/dist/internal-plugins/load-babel-config",
      "id": "1fc32581-893a-55e8-8927-bcd667e2b700",
      "name": "load-babel-config",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onPreBootstrap"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby/dist/internal-plugins/load-babel-config",
      "packageJson": {
        "name": "load-babel-config",
        "description": "Internal plugin that handles loading Babel configs",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "7155e07174e8b465e1b78ed2399762ef",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "a5079d69-ba80-53dc-82f9-0f440bd5448c": {
      "resolve": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby/dist/internal-plugins/internal-data-bridge",
      "id": "a5079d69-ba80-53dc-82f9-0f440bd5448c",
      "name": "internal-data-bridge",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "sourceNodes",
        "onCreatePage"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby/dist/internal-plugins/internal-data-bridge",
      "packageJson": {
        "name": "internal-data-bridge",
        "description": "An internal Gatsby plugin which creates data nodes from internal data",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "2e829d5e8f7890fdf87d8192f4192aa2",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "f795702c-a3b8-5a88-88ee-5d06019d44fa": {
      "resolve": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby/dist/internal-plugins/prod-404",
      "id": "f795702c-a3b8-5a88-88ee-5d06019d44fa",
      "name": "prod-404",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreatePage"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby/dist/internal-plugins/prod-404",
      "packageJson": {
        "name": "prod-404",
        "description": "Internal plugin to detect various flavors of 404 pages and ensure there's a 404.html path created as well to ensure compatability with static hosts",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "8e4a98af6caa45ec1416c02af27984ec",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "84dad27f-1d44-51fc-ac56-4db2e5222995": {
      "resolve": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby/dist/internal-plugins/query-runner",
      "id": "84dad27f-1d44-51fc-ac56-4db2e5222995",
      "name": "query-runner",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreatePage"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby/dist/internal-plugins/query-runner",
      "packageJson": {
        "name": "query-runner",
        "description": "Internal plugin for running queries",
        "version": "1.0.0",
        "main": "index.js",
        "author": "",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "a625ce0d83ff27dc25d8a8fedd466ba8",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "1943ff2f-9c0c-558d-8d0c-006603e8106a": {
      "resolve": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-plugin-react-helmet",
      "id": "1943ff2f-9c0c-558d-8d0c-006603e8106a",
      "name": "gatsby-plugin-react-helmet",
      "version": "3.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-plugin-react-helmet",
      "packageJson": {
        "name": "gatsby-plugin-react-helmet",
        "description": "Manage document head data with react-helmet. Provides drop-in server rendering support for Gatsby.",
        "version": "3.0.0",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "favicon",
          "react-helmet",
          "seo",
          "document",
          "head",
          "title",
          "meta",
          "link",
          "script",
          "base",
          "noscript",
          "style"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "matthews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          },
          {
            "name": "react-helmet",
            "version": ">=5.1.3"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "1f81ac05d8d35d1d77a753dd4cee8239",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "d8f4bf2b-73c7-5c69-93d1-79ac2ac7c2e8": {
      "resolve": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-plugin-sass",
      "id": "d8f4bf2b-73c7-5c69-93d1-79ac2ac7c2e8",
      "name": "gatsby-plugin-sass",
      "version": "2.0.10",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreateWebpackConfig"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-plugin-sass",
      "packageJson": {
        "name": "gatsby-plugin-sass",
        "description": "Gatsby plugin to handle scss/sass files",
        "version": "2.0.10",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "sass",
          "scss"
        ],
        "author": {
          "name": "Daniel Farrell",
          "email": "daniel@mobelux.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "sass-loader",
            "version": "^7.0.1"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "babel-preset-gatsby-package",
            "version": "^0.1.3"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^2.0.0"
          },
          {
            "name": "node-sass",
            "version": "^4.9.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "ae0a3e25592a206b51d8326fcf916df1",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "ca2c6d45-3cbb-5520-81b0-744c9701d15c": {
      "resolve": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-plugin-catch-links",
      "id": "ca2c6d45-3cbb-5520-81b0-744c9701d15c",
      "name": "gatsby-plugin-catch-links",
      "version": "2.0.8",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [
        "onClientEntry"
      ],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-plugin-catch-links",
      "packageJson": {
        "name": "gatsby-plugin-catch-links",
        "description": "Intercepts local links from markdown and other non-react pages and does a client-side pushState to avoid the browser having to refresh the page.",
        "version": "2.0.8",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "escape-string-regexp",
            "version": "^1.0.5"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "babel-preset-gatsby-package",
            "version": "^0.1.2"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-beta"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "7018510a3ead2635a7a056b45d6fcd97",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "90603d77-fd58-5226-b763-db288c6a29a6": {
      "resolve": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-source-filesystem",
      "id": "90603d77-fd58-5226-b763-db288c6a29a6",
      "name": "gatsby-source-filesystem",
      "version": "2.0.4",
      "pluginOptions": {
        "plugins": [],
        "name": "images",
        "path": "/Users/jgaviria/Documents/Development/www.julian.is/src/images"
      },
      "nodeAPIs": [
        "sourceNodes",
        "setFieldsOnGraphQLNodeType"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-source-filesystem",
      "packageJson": {
        "name": "gatsby-source-filesystem",
        "description": "Gatsby plugin which parses files within a directory for further parsing by other plugins",
        "version": "2.0.4",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "better-queue",
            "version": "^3.8.7"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "chokidar",
            "version": "^1.7.0"
          },
          {
            "name": "fs-extra",
            "version": "^5.0.0"
          },
          {
            "name": "got",
            "version": "^7.1.0"
          },
          {
            "name": "md5-file",
            "version": "^3.1.1"
          },
          {
            "name": "mime",
            "version": "^2.2.0"
          },
          {
            "name": "pretty-bytes",
            "version": "^4.0.2"
          },
          {
            "name": "slash",
            "version": "^1.0.0"
          },
          {
            "name": "valid-url",
            "version": "^1.0.9"
          },
          {
            "name": "xstate",
            "version": "^3.1.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "704b8a443864cbc1305800f960e31393",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "2a44dde4-1cac-5ae0-9e43-87a3105b0b14": {
      "resolve": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-source-filesystem",
      "id": "2a44dde4-1cac-5ae0-9e43-87a3105b0b14",
      "name": "gatsby-source-filesystem",
      "version": "2.0.4",
      "pluginOptions": {
        "plugins": [],
        "path": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles",
        "name": "markdown-pages"
      },
      "nodeAPIs": [
        "sourceNodes",
        "setFieldsOnGraphQLNodeType"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-source-filesystem",
      "packageJson": {
        "name": "gatsby-source-filesystem",
        "description": "Gatsby plugin which parses files within a directory for further parsing by other plugins",
        "version": "2.0.4",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "better-queue",
            "version": "^3.8.7"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "chokidar",
            "version": "^1.7.0"
          },
          {
            "name": "fs-extra",
            "version": "^5.0.0"
          },
          {
            "name": "got",
            "version": "^7.1.0"
          },
          {
            "name": "md5-file",
            "version": "^3.1.1"
          },
          {
            "name": "mime",
            "version": "^2.2.0"
          },
          {
            "name": "pretty-bytes",
            "version": "^4.0.2"
          },
          {
            "name": "slash",
            "version": "^1.0.0"
          },
          {
            "name": "valid-url",
            "version": "^1.0.9"
          },
          {
            "name": "xstate",
            "version": "^3.1.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "e88252189a5358df01668d116142e6ea",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "9f28d07a-37b6-51d1-b2d0-5071b57d6dd2": {
      "resolve": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-transformer-remark",
      "id": "9f28d07a-37b6-51d1-b2d0-5071b57d6dd2",
      "name": "gatsby-transformer-remark",
      "version": "2.1.12",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreateNode",
        "setFieldsOnGraphQLNodeType"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-transformer-remark",
      "packageJson": {
        "name": "gatsby-transformer-remark",
        "description": "Gatsby transformer plugin for Markdown using the Remark library and ecosystem",
        "version": "2.1.12",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "markdown",
          "remark"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "gray-matter",
            "version": "^4.0.0"
          },
          {
            "name": "hast-util-raw",
            "version": "^4.0.0"
          },
          {
            "name": "hast-util-to-html",
            "version": "^4.0.0"
          },
          {
            "name": "lodash",
            "version": "^4.17.10"
          },
          {
            "name": "mdast-util-to-hast",
            "version": "^3.0.0"
          },
          {
            "name": "mdast-util-toc",
            "version": "^2.0.1"
          },
          {
            "name": "remark",
            "version": "^9.0.0"
          },
          {
            "name": "remark-parse",
            "version": "^5.0.0"
          },
          {
            "name": "remark-retext",
            "version": "^3.1.0"
          },
          {
            "name": "remark-stringify",
            "version": "^5.0.0"
          },
          {
            "name": "retext-english",
            "version": "^3.0.0"
          },
          {
            "name": "sanitize-html",
            "version": "^1.18.2"
          },
          {
            "name": "underscore.string",
            "version": "^3.3.4"
          },
          {
            "name": "unified",
            "version": "^6.1.5"
          },
          {
            "name": "unist-util-remove-position",
            "version": "^1.1.2"
          },
          {
            "name": "unist-util-select",
            "version": "^1.5.0"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.3.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "babel-preset-gatsby-package",
            "version": "^0.1.2"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^2.0.33"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "eb112d1b30055bdb256af2176c46e2d7",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "da3d06eb-685e-5c77-ae1d-750eb6a2e4a9": {
      "resolve": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-transformer-sharp",
      "id": "da3d06eb-685e-5c77-ae1d-750eb6a2e4a9",
      "name": "gatsby-transformer-sharp",
      "version": "2.1.4",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreateNode",
        "setFieldsOnGraphQLNodeType",
        "onPreExtractQueries"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-transformer-sharp",
      "packageJson": {
        "name": "gatsby-transformer-sharp",
        "description": "Gatsby transformer plugin for images using Sharp",
        "version": "2.1.4",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "image",
          "sharp"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "fs-extra",
            "version": "^4.0.2"
          },
          {
            "name": "potrace",
            "version": "^2.1.1"
          },
          {
            "name": "probe-image-size",
            "version": "^4.0.0"
          },
          {
            "name": "sharp",
            "version": "^0.20.2"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          },
          {
            "name": "gatsby-plugin-sharp",
            "version": "^2.0.0-beta.3"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "7813302003d4d16348bb5f52cd3fa8f4",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "84d6154d-4241-556c-a679-cc8339cac100": {
      "resolve": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-plugin-sharp",
      "id": "84d6154d-4241-556c-a679-cc8339cac100",
      "name": "gatsby-plugin-sharp",
      "version": "2.0.7",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-plugin-sharp",
      "packageJson": {
        "name": "gatsby-plugin-sharp",
        "description": "Wrapper of the Sharp image manipulation library for Gatsby plugins",
        "version": "2.0.7",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "image",
          "sharp"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "async",
            "version": "^2.1.2"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "fs-exists-cached",
            "version": "^1.0.0"
          },
          {
            "name": "imagemin",
            "version": "^6.0.0"
          },
          {
            "name": "imagemin-mozjpeg",
            "version": "^7.0.0"
          },
          {
            "name": "imagemin-pngquant",
            "version": "^6.0.0"
          },
          {
            "name": "imagemin-webp",
            "version": "^4.1.0"
          },
          {
            "name": "lodash",
            "version": "^4.17.10"
          },
          {
            "name": "mini-svg-data-uri",
            "version": "^1.0.0"
          },
          {
            "name": "potrace",
            "version": "^2.1.1"
          },
          {
            "name": "probe-image-size",
            "version": "^4.0.0"
          },
          {
            "name": "progress",
            "version": "^1.1.8"
          },
          {
            "name": "sharp",
            "version": "^0.20.2"
          },
          {
            "name": "svgo",
            "version": "^0.7.2"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "a1a23c2b4fb587737451b844b24ba483",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "112c12f8-b222-509b-abe0-dfe93a905df9": {
      "resolve": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-plugin-manifest",
      "id": "112c12f8-b222-509b-abe0-dfe93a905df9",
      "name": "gatsby-plugin-manifest",
      "version": "2.0.5",
      "pluginOptions": {
        "plugins": [],
        "name": "gatsby-starter-default",
        "short_name": "starter",
        "start_url": "/",
        "background_color": "#663399",
        "theme_color": "#663399",
        "display": "minimal-ui",
        "icon": "src/images/gatsby-icon.png"
      },
      "nodeAPIs": [
        "onPostBootstrap"
      ],
      "browserAPIs": [],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-plugin-manifest",
      "packageJson": {
        "name": "gatsby-plugin-manifest",
        "description": "Gatsby plugin which adds a manifest.webmanifest to make sites progressive web apps",
        "version": "2.0.5",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "favicon",
          "icons",
          "manifest.webmanifest",
          "progressive-web-app",
          "pwa"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "sharp",
            "version": "^0.20.2"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "8fa8a5275b0a817715ed45b21d7c5dd8",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "7374ebf2-d961-52ee-92a2-c25e7cb387a9": {
      "resolve": "/Users/jgaviria/Documents/Development/www.julian.is",
      "id": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "name": "default-site-plugin",
      "version": "f65c82c9cc102c9e77d7b3d24747ee2a",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "createPages"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/jgaviria/Documents/Development/www.julian.is",
      "packageJson": {
        "name": "gatsby-starter-default",
        "description": "Gatsby default starter",
        "version": "1.0.0",
        "keywords": [
          "gatsby"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "gatsby",
            "version": "^2.0.33"
          },
          {
            "name": "gatsby-image",
            "version": "^2.0.15"
          },
          {
            "name": "gatsby-plugin-catch-links",
            "version": "^2.0.8"
          },
          {
            "name": "gatsby-plugin-manifest",
            "version": "^2.0.5"
          },
          {
            "name": "gatsby-plugin-offline",
            "version": "^2.0.11"
          },
          {
            "name": "gatsby-plugin-react-helmet",
            "version": "^3.0.0"
          },
          {
            "name": "gatsby-plugin-sass",
            "version": "^2.0.10"
          },
          {
            "name": "gatsby-plugin-sharp",
            "version": "^2.0.7"
          },
          {
            "name": "gatsby-source-filesystem",
            "version": "^2.0.4"
          },
          {
            "name": "gatsby-transformer-remark",
            "version": "^2.1.12"
          },
          {
            "name": "gatsby-transformer-sharp",
            "version": "^2.1.4"
          },
          {
            "name": "node-sass",
            "version": "^4.11.0"
          },
          {
            "name": "react",
            "version": "^16.5.1"
          },
          {
            "name": "react-dom",
            "version": "^16.5.1"
          },
          {
            "name": "react-helmet",
            "version": "^5.2.0"
          }
        ],
        "devDependencies": [
          {
            "name": "prettier",
            "version": "^1.14.2"
          },
          {
            "name": "sass",
            "version": "^1.17.0"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "97f409a76f4f68317544d922d062ab02",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "7c89b2f8-3f2f-584e-841e-d31bcc86ef78": {
      "resolve": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-plugin-page-creator",
      "id": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
      "name": "gatsby-plugin-page-creator",
      "version": "2.0.4",
      "pluginOptions": {
        "plugins": [],
        "path": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages",
        "pathCheck": false
      },
      "nodeAPIs": [
        "createPagesStatefully"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/jgaviria/Documents/Development/www.julian.is/node_modules/gatsby-plugin-page-creator",
      "packageJson": {
        "name": "gatsby-plugin-page-creator",
        "description": "Gatsby plugin that automatically creates pages from React components in specified directories",
        "version": "2.0.4",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "chokidar",
            "version": "^1.7.0"
          },
          {
            "name": "fs-exists-cached",
            "version": "^1.0.0"
          },
          {
            "name": "glob",
            "version": "^7.1.1"
          },
          {
            "name": "lodash",
            "version": "^4.17.10"
          },
          {
            "name": "micromatch",
            "version": "^3.1.10"
          },
          {
            "name": "parse-filepath",
            "version": "^1.0.1"
          },
          {
            "name": "slash",
            "version": "^1.0.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "babel-preset-gatsby-package",
            "version": "^0.1.2"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "34599fc74a7d2ce51fba54aea8d12149",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Site": {
      "siteMetadata": {
        "title": "Julian Gaviria"
      },
      "port": "8000",
      "host": "localhost",
      "pathPrefix": "",
      "polyfill": true,
      "buildTime": "2019-03-13T21:02:42.713Z",
      "id": "Site",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "bca74a71d2376dccb3a4f0edd8825792",
        "type": "Site",
        "owner": "internal-data-bridge"
      }
    },
    "aca89972-985e-5ff6-9864-0ce8ad726b5d": {
      "id": "aca89972-985e-5ff6-9864-0ce8ad726b5d",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "18241e45ddfd02d1dff26b91ff2563cd",
        "type": "Directory",
        "description": "Directory \"src/images\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "images",
      "absolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/images",
      "relativePath": "",
      "extension": "",
      "size": 160,
      "prettySize": "160 B",
      "modifiedTime": "2019-03-13T19:43:09.938Z",
      "accessTime": "2019-03-13T21:02:46.939Z",
      "changeTime": "2019-03-13T19:43:09.938Z",
      "birthTime": "2019-03-13T19:43:09.937Z",
      "root": "/",
      "dir": "/Users/jgaviria/Documents/Development/www.julian.is/src",
      "base": "images",
      "ext": "",
      "name": "images",
      "relativeDirectory": "..",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 5,
      "uid": 123288241,
      "gid": 2044526916,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8637442711,
      "blocks": 0,
      "atimeMs": 1552510966939.3552,
      "mtimeMs": 1552506189938.1528,
      "ctimeMs": 1552506189938.1528,
      "birthtimeMs": 1552506189936.9038,
      "atime": "2019-03-13T21:02:46.939Z",
      "mtime": "2019-03-13T19:43:09.938Z",
      "ctime": "2019-03-13T19:43:09.938Z",
      "birthtime": "2019-03-13T19:43:09.937Z"
    },
    "ebd18c81-668f-5e91-ba50-03627c446914": {
      "id": "ebd18c81-668f-5e91-ba50-03627c446914",
      "children": [
        "7a864cf4-d8c5-5662-8979-aa2aded84855"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4a9773549091c227cd2eb82ccd9c5e3a",
        "type": "File",
        "mediaType": "image/png",
        "description": "File \"src/images/gatsby-icon.png\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "images",
      "absolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/images/gatsby-icon.png",
      "relativePath": "gatsby-icon.png",
      "extension": "png",
      "size": 21212,
      "prettySize": "21.2 kB",
      "modifiedTime": "2018-11-29T16:28:19.855Z",
      "accessTime": "2019-02-16T01:53:18.328Z",
      "changeTime": "2018-11-29T16:28:19.855Z",
      "birthTime": "2018-11-29T16:28:19.855Z",
      "root": "/",
      "dir": "/Users/jgaviria/Documents/Development/www.julian.is/src/images",
      "base": "gatsby-icon.png",
      "ext": ".png",
      "name": "gatsby-icon",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 123288241,
      "gid": 2044526916,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8618699174,
      "blocks": 48,
      "atimeMs": 1550281998328.0493,
      "mtimeMs": 1543508899854.9114,
      "ctimeMs": 1543508899854.9114,
      "birthtimeMs": 1543508899854.843,
      "atime": "2019-02-16T01:53:18.328Z",
      "mtime": "2018-11-29T16:28:19.855Z",
      "ctime": "2018-11-29T16:28:19.855Z",
      "birthtime": "2018-11-29T16:28:19.855Z"
    },
    "7a864cf4-d8c5-5662-8979-aa2aded84855": {
      "id": "7a864cf4-d8c5-5662-8979-aa2aded84855",
      "children": [],
      "parent": "ebd18c81-668f-5e91-ba50-03627c446914",
      "internal": {
        "contentDigest": "4a9773549091c227cd2eb82ccd9c5e3a",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "a6937b6d-e0cd-5650-89d5-7a25ac97a8df": {
      "id": "a6937b6d-e0cd-5650-89d5-7a25ac97a8df",
      "children": [
        "75f7a969-ed25-5d56-9fbd-a183f0b6938e"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "6d91c86c0fde632ba4cd01062fd9ccfa",
        "type": "File",
        "mediaType": "image/png",
        "description": "File \"src/images/gatsby-astronaut.png\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "images",
      "absolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/images/gatsby-astronaut.png",
      "relativePath": "gatsby-astronaut.png",
      "extension": "png",
      "size": 167273,
      "prettySize": "167 kB",
      "modifiedTime": "2018-11-29T16:28:19.854Z",
      "accessTime": "2019-02-16T01:53:16.419Z",
      "changeTime": "2018-11-29T16:28:19.854Z",
      "birthTime": "2018-11-29T16:28:19.854Z",
      "root": "/",
      "dir": "/Users/jgaviria/Documents/Development/www.julian.is/src/images",
      "base": "gatsby-astronaut.png",
      "ext": ".png",
      "name": "gatsby-astronaut",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 123288241,
      "gid": 2044526916,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8618699173,
      "blocks": 328,
      "atimeMs": 1550281996419.3413,
      "mtimeMs": 1543508899854.3572,
      "ctimeMs": 1543508899854.3572,
      "birthtimeMs": 1543508899854.2158,
      "atime": "2019-02-16T01:53:16.419Z",
      "mtime": "2018-11-29T16:28:19.854Z",
      "ctime": "2018-11-29T16:28:19.854Z",
      "birthtime": "2018-11-29T16:28:19.854Z"
    },
    "75f7a969-ed25-5d56-9fbd-a183f0b6938e": {
      "id": "75f7a969-ed25-5d56-9fbd-a183f0b6938e",
      "children": [],
      "parent": "a6937b6d-e0cd-5650-89d5-7a25ac97a8df",
      "internal": {
        "contentDigest": "6d91c86c0fde632ba4cd01062fd9ccfa",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "f661c919-c8dd-56e4-8791-3bb8ed858d6e": {
      "id": "f661c919-c8dd-56e4-8791-3bb8ed858d6e",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "c17040f31d91c46d4346b4ecbfe31367",
        "type": "Directory",
        "description": "Directory \"src/articles\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "markdown-pages",
      "absolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles",
      "relativePath": "",
      "extension": "",
      "size": 512,
      "prettySize": "512 B",
      "modifiedTime": "2019-03-13T19:43:09.824Z",
      "accessTime": "2019-03-13T21:02:46.951Z",
      "changeTime": "2019-03-13T19:43:09.824Z",
      "birthTime": "2017-08-13T03:36:38.000Z",
      "root": "/",
      "dir": "/Users/jgaviria/Documents/Development/www.julian.is/src",
      "base": "articles",
      "ext": "",
      "name": "articles",
      "relativeDirectory": "..",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 16,
      "uid": 123288241,
      "gid": 2044526916,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8618203304,
      "blocks": 0,
      "atimeMs": 1552510966951.3406,
      "mtimeMs": 1552506189824.0217,
      "ctimeMs": 1552506189824.0217,
      "birthtimeMs": 1502595398000,
      "atime": "2019-03-13T21:02:46.951Z",
      "mtime": "2019-03-13T19:43:09.824Z",
      "ctime": "2019-03-13T19:43:09.824Z",
      "birthtime": "2017-08-13T03:36:38.000Z"
    },
    "23157a6d-2a25-5d76-b2dc-0c9967276363": {
      "id": "23157a6d-2a25-5d76-b2dc-0c9967276363",
      "children": [
        "c4113acb-14ee-5322-96f2-dba851e3d5cf"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "3b916ef06d3483bc4ac538d32f6595aa",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"src/articles/2016-09-19-why-ive-started-writing.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "markdown-pages",
      "absolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2016-09-19-why-ive-started-writing.md",
      "relativePath": "2016-09-19-why-ive-started-writing.md",
      "extension": "md",
      "size": 2913,
      "prettySize": "2.91 kB",
      "modifiedTime": "2018-11-29T16:28:19.820Z",
      "accessTime": "2019-02-16T01:53:16.268Z",
      "changeTime": "2018-11-29T16:28:19.820Z",
      "birthTime": "2018-11-29T16:28:19.820Z",
      "root": "/",
      "dir": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles",
      "base": "2016-09-19-why-ive-started-writing.md",
      "ext": ".md",
      "name": "2016-09-19-why-ive-started-writing",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 123288241,
      "gid": 2044526916,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8618699133,
      "blocks": 8,
      "atimeMs": 1550281996267.5586,
      "mtimeMs": 1543508899819.8145,
      "ctimeMs": 1543508899819.8145,
      "birthtimeMs": 1543508899819.7246,
      "atime": "2019-02-16T01:53:16.268Z",
      "mtime": "2018-11-29T16:28:19.820Z",
      "ctime": "2018-11-29T16:28:19.820Z",
      "birthtime": "2018-11-29T16:28:19.820Z"
    },
    "a8bbdf14-408c-5ed4-9d4b-10247be9a35f": {
      "id": "a8bbdf14-408c-5ed4-9d4b-10247be9a35f",
      "children": [
        "417f3349-660e-5809-af1a-55b88ead378a"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e6c297f9ef83ea9edfb7dc2575561954",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"src/articles/2016-10-25-smashingconf-barcelona-2016-day-1.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "markdown-pages",
      "absolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2016-10-25-smashingconf-barcelona-2016-day-1.md",
      "relativePath": "2016-10-25-smashingconf-barcelona-2016-day-1.md",
      "extension": "md",
      "size": 26110,
      "prettySize": "26.1 kB",
      "modifiedTime": "2018-11-29T16:28:19.821Z",
      "accessTime": "2019-02-16T01:53:16.268Z",
      "changeTime": "2018-11-29T16:28:19.821Z",
      "birthTime": "2018-11-29T16:28:19.821Z",
      "root": "/",
      "dir": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles",
      "base": "2016-10-25-smashingconf-barcelona-2016-day-1.md",
      "ext": ".md",
      "name": "2016-10-25-smashingconf-barcelona-2016-day-1",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 123288241,
      "gid": 2044526916,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8618699134,
      "blocks": 56,
      "atimeMs": 1550281996267.685,
      "mtimeMs": 1543508899820.61,
      "ctimeMs": 1543508899820.61,
      "birthtimeMs": 1543508899820.5127,
      "atime": "2019-02-16T01:53:16.268Z",
      "mtime": "2018-11-29T16:28:19.821Z",
      "ctime": "2018-11-29T16:28:19.821Z",
      "birthtime": "2018-11-29T16:28:19.821Z"
    },
    "a3694107-b7a6-52c5-ad60-d043ec113ee3": {
      "id": "a3694107-b7a6-52c5-ad60-d043ec113ee3",
      "children": [
        "80f02e41-0a1a-5701-8cdc-91e87d9343b1"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "0c33a78ce0a9f260292798d74c0766af",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"src/articles/2016-10-26-smashingconf-barcelona-2016-day-2.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "markdown-pages",
      "absolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2016-10-26-smashingconf-barcelona-2016-day-2.md",
      "relativePath": "2016-10-26-smashingconf-barcelona-2016-day-2.md",
      "extension": "md",
      "size": 15119,
      "prettySize": "15.1 kB",
      "modifiedTime": "2019-02-16T20:53:21.278Z",
      "accessTime": "2019-02-16T20:53:21.277Z",
      "changeTime": "2019-02-16T20:53:21.278Z",
      "birthTime": "2018-11-29T16:28:19.822Z",
      "root": "/",
      "dir": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles",
      "base": "2016-10-26-smashingconf-barcelona-2016-day-2.md",
      "ext": ".md",
      "name": "2016-10-26-smashingconf-barcelona-2016-day-2",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 123288241,
      "gid": 2044526916,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8618699135,
      "blocks": 32,
      "atimeMs": 1550350401276.9695,
      "mtimeMs": 1550350401277.5466,
      "ctimeMs": 1550350401277.5466,
      "birthtimeMs": 1543508899821.5645,
      "atime": "2019-02-16T20:53:21.277Z",
      "mtime": "2019-02-16T20:53:21.278Z",
      "ctime": "2019-02-16T20:53:21.278Z",
      "birthtime": "2018-11-29T16:28:19.822Z"
    },
    "1b1cf993-a06d-5c41-81df-8bfdbf424d22": {
      "id": "1b1cf993-a06d-5c41-81df-8bfdbf424d22",
      "children": [
        "5865c153-a939-5e8b-a56d-8d5553abea00"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5565742d6ce883a662a551300b5e7f4c",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"src/articles/2016-11-08-conversion-rate-optimization-case-study.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "markdown-pages",
      "absolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2016-11-08-conversion-rate-optimization-case-study.md",
      "relativePath": "2016-11-08-conversion-rate-optimization-case-study.md",
      "extension": "md",
      "size": 9897,
      "prettySize": "9.9 kB",
      "modifiedTime": "2018-11-29T16:28:19.822Z",
      "accessTime": "2019-02-16T01:53:16.268Z",
      "changeTime": "2018-11-29T16:28:19.822Z",
      "birthTime": "2018-11-29T16:28:19.822Z",
      "root": "/",
      "dir": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles",
      "base": "2016-11-08-conversion-rate-optimization-case-study.md",
      "ext": ".md",
      "name": "2016-11-08-conversion-rate-optimization-case-study",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 123288241,
      "gid": 2044526916,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8618699136,
      "blocks": 24,
      "atimeMs": 1550281996267.7522,
      "mtimeMs": 1543508899822.012,
      "ctimeMs": 1543508899822.012,
      "birthtimeMs": 1543508899821.9336,
      "atime": "2019-02-16T01:53:16.268Z",
      "mtime": "2018-11-29T16:28:19.822Z",
      "ctime": "2018-11-29T16:28:19.822Z",
      "birthtime": "2018-11-29T16:28:19.822Z"
    },
    "984f251d-4435-56c8-9366-c82e7d949805": {
      "id": "984f251d-4435-56c8-9366-c82e7d949805",
      "children": [
        "c422d22e-a4a4-598a-96ba-06ff3abd933f"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "8c21c549d3501cee7cf9b489bd548dcb",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"src/articles/2016-11-13-hubspot-inbound-2016-designers-perspective.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "markdown-pages",
      "absolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2016-11-13-hubspot-inbound-2016-designers-perspective.md",
      "relativePath": "2016-11-13-hubspot-inbound-2016-designers-perspective.md",
      "extension": "md",
      "size": 5697,
      "prettySize": "5.7 kB",
      "modifiedTime": "2018-11-29T16:28:19.822Z",
      "accessTime": "2019-02-16T01:53:16.268Z",
      "changeTime": "2018-11-29T16:28:19.822Z",
      "birthTime": "2018-11-29T16:28:19.822Z",
      "root": "/",
      "dir": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles",
      "base": "2016-11-13-hubspot-inbound-2016-designers-perspective.md",
      "ext": ".md",
      "name": "2016-11-13-hubspot-inbound-2016-designers-perspective",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 123288241,
      "gid": 2044526916,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8618699137,
      "blocks": 16,
      "atimeMs": 1550281996267.7808,
      "mtimeMs": 1543508899822.3396,
      "ctimeMs": 1543508899822.3396,
      "birthtimeMs": 1543508899822.2969,
      "atime": "2019-02-16T01:53:16.268Z",
      "mtime": "2018-11-29T16:28:19.822Z",
      "ctime": "2018-11-29T16:28:19.822Z",
      "birthtime": "2018-11-29T16:28:19.822Z"
    },
    "c16d61f3-9f23-5a5a-9347-ae56956383c9": {
      "id": "c16d61f3-9f23-5a5a-9347-ae56956383c9",
      "children": [
        "8f2ec885-a6bd-5555-8edb-956b912bda0b"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "599032a5de6b952950b5152563dd47bd",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"src/articles/2017-01-15-baseline-for-fast-loading-websites.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "markdown-pages",
      "absolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2017-01-15-baseline-for-fast-loading-websites.md",
      "relativePath": "2017-01-15-baseline-for-fast-loading-websites.md",
      "extension": "md",
      "size": 13283,
      "prettySize": "13.3 kB",
      "modifiedTime": "2018-11-29T16:28:19.823Z",
      "accessTime": "2019-02-16T01:53:16.268Z",
      "changeTime": "2018-11-29T16:28:19.823Z",
      "birthTime": "2018-11-29T16:28:19.823Z",
      "root": "/",
      "dir": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles",
      "base": "2017-01-15-baseline-for-fast-loading-websites.md",
      "ext": ".md",
      "name": "2017-01-15-baseline-for-fast-loading-websites",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 123288241,
      "gid": 2044526916,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8618699138,
      "blocks": 32,
      "atimeMs": 1550281996267.8088,
      "mtimeMs": 1543508899822.8013,
      "ctimeMs": 1543508899822.8013,
      "birthtimeMs": 1543508899822.7295,
      "atime": "2019-02-16T01:53:16.268Z",
      "mtime": "2018-11-29T16:28:19.823Z",
      "ctime": "2018-11-29T16:28:19.823Z",
      "birthtime": "2018-11-29T16:28:19.823Z"
    },
    "0011e7ef-8b47-59d9-9af6-d35c7ad75ab7": {
      "id": "0011e7ef-8b47-59d9-9af6-d35c7ad75ab7",
      "children": [
        "2dfd9e99-2a14-53cf-9d96-0c0ad436577f"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f07378fde44d5aa863fd97994a6cc82b",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"src/articles/2017-03-05-exit-intent-popups.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "markdown-pages",
      "absolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2017-03-05-exit-intent-popups.md",
      "relativePath": "2017-03-05-exit-intent-popups.md",
      "extension": "md",
      "size": 13763,
      "prettySize": "13.8 kB",
      "modifiedTime": "2018-11-29T16:28:19.824Z",
      "accessTime": "2019-02-16T01:53:16.268Z",
      "changeTime": "2018-11-29T16:28:19.824Z",
      "birthTime": "2018-11-29T16:28:19.824Z",
      "root": "/",
      "dir": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles",
      "base": "2017-03-05-exit-intent-popups.md",
      "ext": ".md",
      "name": "2017-03-05-exit-intent-popups",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 123288241,
      "gid": 2044526916,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8618699139,
      "blocks": 32,
      "atimeMs": 1550281996267.836,
      "mtimeMs": 1543508899823.91,
      "ctimeMs": 1543508899823.91,
      "birthtimeMs": 1543508899823.8584,
      "atime": "2019-02-16T01:53:16.268Z",
      "mtime": "2018-11-29T16:28:19.824Z",
      "ctime": "2018-11-29T16:28:19.824Z",
      "birthtime": "2018-11-29T16:28:19.824Z"
    },
    "635ef4f9-e070-5a78-83db-377e31e70511": {
      "id": "635ef4f9-e070-5a78-83db-377e31e70511",
      "children": [
        "8983a814-0b7c-51f0-b01b-6700c9635cdc"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "dbe7cd12baf2a64446a3ac3da1b3eb3f",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"src/articles/2017-03-20-progressive-web-apps.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "markdown-pages",
      "absolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2017-03-20-progressive-web-apps.md",
      "relativePath": "2017-03-20-progressive-web-apps.md",
      "extension": "md",
      "size": 21585,
      "prettySize": "21.6 kB",
      "modifiedTime": "2018-11-29T16:28:19.824Z",
      "accessTime": "2019-02-16T01:53:16.268Z",
      "changeTime": "2018-11-29T16:28:19.824Z",
      "birthTime": "2018-11-29T16:28:19.824Z",
      "root": "/",
      "dir": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles",
      "base": "2017-03-20-progressive-web-apps.md",
      "ext": ".md",
      "name": "2017-03-20-progressive-web-apps",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 123288241,
      "gid": 2044526916,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8618699140,
      "blocks": 48,
      "atimeMs": 1550281996267.8635,
      "mtimeMs": 1543508899824.4072,
      "ctimeMs": 1543508899824.4072,
      "birthtimeMs": 1543508899824.335,
      "atime": "2019-02-16T01:53:16.268Z",
      "mtime": "2018-11-29T16:28:19.824Z",
      "ctime": "2018-11-29T16:28:19.824Z",
      "birthtime": "2018-11-29T16:28:19.824Z"
    },
    "5dcc1451-d2d6-5467-8e10-2b4a6d684de6": {
      "id": "5dcc1451-d2d6-5467-8e10-2b4a6d684de6",
      "children": [
        "f2a39ed8-9e0f-5a5a-bb42-377da720d62e"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4c5db72d42e139ce2587e9bc0b8a5392",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"src/articles/2017-04-25-static-websites-and-jamstack.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "markdown-pages",
      "absolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2017-04-25-static-websites-and-jamstack.md",
      "relativePath": "2017-04-25-static-websites-and-jamstack.md",
      "extension": "md",
      "size": 14765,
      "prettySize": "14.8 kB",
      "modifiedTime": "2019-02-16T23:03:53.866Z",
      "accessTime": "2019-02-16T23:03:53.865Z",
      "changeTime": "2019-02-16T23:03:53.866Z",
      "birthTime": "2018-11-29T16:28:19.825Z",
      "root": "/",
      "dir": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles",
      "base": "2017-04-25-static-websites-and-jamstack.md",
      "ext": ".md",
      "name": "2017-04-25-static-websites-and-jamstack",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 123288241,
      "gid": 2044526916,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8618699141,
      "blocks": 32,
      "atimeMs": 1550358233865.046,
      "mtimeMs": 1550358233865.538,
      "ctimeMs": 1550358233865.538,
      "birthtimeMs": 1543508899824.7075,
      "atime": "2019-02-16T23:03:53.865Z",
      "mtime": "2019-02-16T23:03:53.866Z",
      "ctime": "2019-02-16T23:03:53.866Z",
      "birthtime": "2018-11-29T16:28:19.825Z"
    },
    "799a225e-8fa2-5b39-8afd-0e98f0fee423": {
      "id": "799a225e-8fa2-5b39-8afd-0e98f0fee423",
      "children": [
        "2c8dc667-140d-5eaa-b0ad-3640c497ec7e"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "38c45e92045702ceee4d11f8b6c8a704",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"src/articles/2017-08-16-lessons-learned-after-200-ab-tests-on-20-websites.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "markdown-pages",
      "absolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2017-08-16-lessons-learned-after-200-ab-tests-on-20-websites.md",
      "relativePath": "2017-08-16-lessons-learned-after-200-ab-tests-on-20-websites.md",
      "extension": "md",
      "size": 12969,
      "prettySize": "13 kB",
      "modifiedTime": "2018-11-29T16:28:19.826Z",
      "accessTime": "2019-02-16T01:53:16.268Z",
      "changeTime": "2018-11-29T16:28:19.826Z",
      "birthTime": "2018-11-29T16:28:19.826Z",
      "root": "/",
      "dir": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles",
      "base": "2017-08-16-lessons-learned-after-200-ab-tests-on-20-websites.md",
      "ext": ".md",
      "name": "2017-08-16-lessons-learned-after-200-ab-tests-on-20-websites",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 123288241,
      "gid": 2044526916,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8618699142,
      "blocks": 32,
      "atimeMs": 1550281996267.9163,
      "mtimeMs": 1543508899825.579,
      "ctimeMs": 1543508899825.579,
      "birthtimeMs": 1543508899825.5056,
      "atime": "2019-02-16T01:53:16.268Z",
      "mtime": "2018-11-29T16:28:19.826Z",
      "ctime": "2018-11-29T16:28:19.826Z",
      "birthtime": "2018-11-29T16:28:19.826Z"
    },
    "02d18396-f186-5785-941b-634e5b36f096": {
      "id": "02d18396-f186-5785-941b-634e5b36f096",
      "children": [
        "1458e982-feeb-5a6e-96fa-161a5b63fa3e"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "6e9644fd2436b85ba1345a6a0f954ba8",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"src/articles/2017-10-11-dont-fight-the-notch.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "markdown-pages",
      "absolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2017-10-11-dont-fight-the-notch.md",
      "relativePath": "2017-10-11-dont-fight-the-notch.md",
      "extension": "md",
      "size": 7521,
      "prettySize": "7.52 kB",
      "modifiedTime": "2018-11-29T16:28:19.826Z",
      "accessTime": "2019-02-16T01:53:16.268Z",
      "changeTime": "2018-11-29T16:28:19.826Z",
      "birthTime": "2018-11-29T16:28:19.826Z",
      "root": "/",
      "dir": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles",
      "base": "2017-10-11-dont-fight-the-notch.md",
      "ext": ".md",
      "name": "2017-10-11-dont-fight-the-notch",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 123288241,
      "gid": 2044526916,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8618699143,
      "blocks": 16,
      "atimeMs": 1550281996267.9456,
      "mtimeMs": 1543508899826.0393,
      "ctimeMs": 1543508899826.0393,
      "birthtimeMs": 1543508899825.9778,
      "atime": "2019-02-16T01:53:16.268Z",
      "mtime": "2018-11-29T16:28:19.826Z",
      "ctime": "2018-11-29T16:28:19.826Z",
      "birthtime": "2018-11-29T16:28:19.826Z"
    },
    "7a5a9d6d-4b46-5d78-85d2-28c35f37c4da": {
      "id": "7a5a9d6d-4b46-5d78-85d2-28c35f37c4da",
      "children": [
        "656c4525-4f6d-574f-a1b5-c54eea5b62ed"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "80aa3f035ddc474efaa51daf74d7db79",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"src/articles/2018-02-18-css-grid-ready-for-production.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "markdown-pages",
      "absolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2018-02-18-css-grid-ready-for-production.md",
      "relativePath": "2018-02-18-css-grid-ready-for-production.md",
      "extension": "md",
      "size": 13542,
      "prettySize": "13.5 kB",
      "modifiedTime": "2018-11-29T16:28:19.827Z",
      "accessTime": "2019-02-16T01:53:16.268Z",
      "changeTime": "2018-11-29T16:28:19.827Z",
      "birthTime": "2018-11-29T16:28:19.826Z",
      "root": "/",
      "dir": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles",
      "base": "2018-02-18-css-grid-ready-for-production.md",
      "ext": ".md",
      "name": "2018-02-18-css-grid-ready-for-production",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 123288241,
      "gid": 2044526916,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8618699144,
      "blocks": 32,
      "atimeMs": 1550281996267.9734,
      "mtimeMs": 1543508899826.5635,
      "ctimeMs": 1543508899826.5635,
      "birthtimeMs": 1543508899826.4998,
      "atime": "2019-02-16T01:53:16.268Z",
      "mtime": "2018-11-29T16:28:19.827Z",
      "ctime": "2018-11-29T16:28:19.827Z",
      "birthtime": "2018-11-29T16:28:19.826Z"
    },
    "b070e167-0c0f-5084-9b74-65939791d129": {
      "id": "b070e167-0c0f-5084-9b74-65939791d129",
      "children": [
        "2acf5ef5-8c6f-569b-836b-b5c43ad8525a"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "7d262a826a92487bef4af32b081977bc",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"src/articles/2018-08-28-server-side-split-testing.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "markdown-pages",
      "absolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2018-08-28-server-side-split-testing.md",
      "relativePath": "2018-08-28-server-side-split-testing.md",
      "extension": "md",
      "size": 12162,
      "prettySize": "12.2 kB",
      "modifiedTime": "2018-11-29T16:28:19.827Z",
      "accessTime": "2019-02-16T01:53:16.268Z",
      "changeTime": "2018-11-29T16:28:19.827Z",
      "birthTime": "2018-11-29T16:28:19.827Z",
      "root": "/",
      "dir": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles",
      "base": "2018-08-28-server-side-split-testing.md",
      "ext": ".md",
      "name": "2018-08-28-server-side-split-testing",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 123288241,
      "gid": 2044526916,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8618699145,
      "blocks": 24,
      "atimeMs": 1550281996267.9993,
      "mtimeMs": 1543508899827.2622,
      "ctimeMs": 1543508899827.2622,
      "birthtimeMs": 1543508899827.1643,
      "atime": "2019-02-16T01:53:16.268Z",
      "mtime": "2018-11-29T16:28:19.827Z",
      "ctime": "2018-11-29T16:28:19.827Z",
      "birthtime": "2018-11-29T16:28:19.827Z"
    },
    "c4113acb-14ee-5322-96f2-dba851e3d5cf": {
      "id": "c4113acb-14ee-5322-96f2-dba851e3d5cf",
      "children": [],
      "parent": "23157a6d-2a25-5d76-b2dc-0c9967276363",
      "internal": {
        "content": "\nWhy not? I spend most of my days trying to figure out design; whether I'm working with a junior designer trying to teach him/her a certain web design concept or I'm figuring out a stubborn front-end development bug, documentation on what I come across on a daily basis could be of good use to other designers in my field of work.\n\n## What to expect\n\nThere are three areas of web design in which I mostly focus on:\n\n<h3>UI Design</h3>\n\nHaving designed over 100 websites over the past 6 years and lead a team of 4 designers over the past 3 years, this is an area where my experience stands out. Websites being beautiful is just as important as being functional.\n\n<h3>Front-End Web Development</h3>\n\nI've been coding website's together since the age of 14; I love this. Being able to put my design brush aside and put on my analytical hat on is one of the parts that I love most about my field. I'm able to bridge that ambiguous gap between design and development from the perspective of both.\n\n<h3>UX Design &amp; Testing</h3>\n\nOver the past year, I've spearheaded a sub-division of my agency that's focused data driven website design and continuous improvement. I've been doing crazy, non-stop, A/B testing of all of my design patterns over a wide range of clients. Needless to say, some of the results I've come across have been pretty eye opening in terms of what the status quo is.\n\n<h3>Design &amp; Development Team Management</h3>\n\nI run a team of 4 designers and 4 developers for an agency in New York City; one which I've put together from scratch. The rollercoaster has been breath taking, but the experience has been priceless. I'll be touching on topics such as hiring, time management, process, &amp; creativity among many others.\n\n## Giving back\n\nSince early college I remember coming across website's like <a href=\"http://www.smashingmagazine.com\" target=\"_blank\" rel=\"noopener\">Smashing Magazine</a> &amp; <a href=\"http://alistapart.com\">A List Apart</a> and to those blogs, among the dozens of others, I give thanks; thanks for my career and the career of thousands of other designers & developers. It's because of generous designers like <a href=\"http://www.zeldman.com/\" target=\"_blank\" rel=\"noopener\">Jeffrey Zeldman</a> &amp; <a href=\"https://www.smashingmagazine.com/author/vitaly-friedman/\" target=\"_blank\" rel=\"noopener\">Vitaly Friedman</a> that we are where we are today. I am now returning the favor to the design community.\n",
        "type": "MarkdownRemark",
        "contentDigest": "1d05daf94cae9d1ee192d7ac09d12789",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "Why I've started writing",
        "author": "Julian Gaviria",
        "description": "I spend most of my days trying to figure out design/development and I want to share that with everyone.",
        "excerpt": "I spend most of my days trying to figure out design & development; I kinda want to share that with everyone.",
        "time": "2 minutes",
        "comments": false,
        "icon": "/assets/aico-started-writing.svg",
        "slug": "why-ive-started-writing",
        "path": "/article/why-ive-started-writing/",
        "date": "2016-09-19",
        "_PARENT": "23157a6d-2a25-5d76-b2dc-0c9967276363"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nWhy not? I spend most of my days trying to figure out design; whether I'm working with a junior designer trying to teach him/her a certain web design concept or I'm figuring out a stubborn front-end development bug, documentation on what I come across on a daily basis could be of good use to other designers in my field of work.\n\n## What to expect\n\nThere are three areas of web design in which I mostly focus on:\n\n<h3>UI Design</h3>\n\nHaving designed over 100 websites over the past 6 years and lead a team of 4 designers over the past 3 years, this is an area where my experience stands out. Websites being beautiful is just as important as being functional.\n\n<h3>Front-End Web Development</h3>\n\nI've been coding website's together since the age of 14; I love this. Being able to put my design brush aside and put on my analytical hat on is one of the parts that I love most about my field. I'm able to bridge that ambiguous gap between design and development from the perspective of both.\n\n<h3>UX Design &amp; Testing</h3>\n\nOver the past year, I've spearheaded a sub-division of my agency that's focused data driven website design and continuous improvement. I've been doing crazy, non-stop, A/B testing of all of my design patterns over a wide range of clients. Needless to say, some of the results I've come across have been pretty eye opening in terms of what the status quo is.\n\n<h3>Design &amp; Development Team Management</h3>\n\nI run a team of 4 designers and 4 developers for an agency in New York City; one which I've put together from scratch. The rollercoaster has been breath taking, but the experience has been priceless. I'll be touching on topics such as hiring, time management, process, &amp; creativity among many others.\n\n## Giving back\n\nSince early college I remember coming across website's like <a href=\"http://www.smashingmagazine.com\" target=\"_blank\" rel=\"noopener\">Smashing Magazine</a> &amp; <a href=\"http://alistapart.com\">A List Apart</a> and to those blogs, among the dozens of others, I give thanks; thanks for my career and the career of thousands of other designers & developers. It's because of generous designers like <a href=\"http://www.zeldman.com/\" target=\"_blank\" rel=\"noopener\">Jeffrey Zeldman</a> &amp; <a href=\"https://www.smashingmagazine.com/author/vitaly-friedman/\" target=\"_blank\" rel=\"noopener\">Vitaly Friedman</a> that we are where we are today. I am now returning the favor to the design community.\n",
      "fileAbsolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2016-09-19-why-ive-started-writing.md"
    },
    "c422d22e-a4a4-598a-96ba-06ff3abd933f": {
      "id": "c422d22e-a4a4-598a-96ba-06ff3abd933f",
      "children": [],
      "parent": "984f251d-4435-56c8-9366-c82e7d949805",
      "internal": {
        "content": "\nIt’s difficult for some folks to see the value in a designer attending a marketing conference such as <a href=\"http://www.inbound.com/\" target=\"_blank\" rel=\"noopener\">INBOUND 2016</a>, but anyone with a decent understanding of design knows that with context, you create better work. The best designs were not put together by a designer working in isolation, the best designs were put together by a designer that was aware of the material and concept at hand with an understanding that went beyond the surface level.\n\nKnowing how and why your marketing team does certain things and grasping concept of the marketing approach helps the designer make better decisions in her work that are inline with the goals of the entire team.\n\n## How to get the most out of INBOUND as a designer\n\nI go to conferences for two reasons, one to see what the pros are currently doing (whether it’s design, development or marketing) and two, to see what the rest community/attendees are currently innovating on (the golden nuggets of information).\n\nThe former is easy, just attend the talks of the most influential speakers that interest you. I usually go by Twitter followers and the company they represent. Fair warning, there are a handful of first time speakers that are rockstars in the making and it's not the wisest to dismiss them completely without doing your due diligence.\n\nThe latter gets a bit more difficult since it requires you to leave your comfort zone and talk to people (this becomes extra challenging if you’re an introvert like myself). However, this is where I get the most out of INBOUND (3rd year attending); knowing how other teams interact, the tools they’re using, and the solutions and hacks to the same problems my team is facing, this is all useful information you normally wouldn’t get from scheduled talks. The same reason why Twitter is such a successful platform, you get access to the conversation of problems and their solutions happening in real time.\n\n## Roundup of Tools\n\nBelow is a list of all the tools I came across during talks, side conversations, &amp; as well as coworkers while at INBOUND 2016.\n\n<h3><a href=\"https://usabilityhub.com/\" target=\"_blank\" rel=\"noopener\">Usability Hub</a></h3>\n\nRemote user testing that can help you quickley get answers for what otherwise would take weeks of testing. Credit to <a href=\"https://twitter.com/oligardner\" target=\"_blank\" rel=\"noopener\">@oligardner</a>.\n\n<h3><a href=\"https://readability-score.com/text/\" target=\"_blank\" rel=\"noopener\">Readability Score</a></h3>\n\nA readability score is a computer-calculated index which can tell you roughly what level of education someone will need to be able to read a piece of text easily. Credit to <a href=\"https://twitter.com/oligardner\" target=\"_blank\" rel=\"noopener\">@oligardner</a>.\n\n<h3><a href=\"http://www.hubspot.com/product-updates/introducing-hubdb\" target=\"_blank\" rel=\"noopener\">HubDB</a></h3>\n\nThis is actually a HubSpot COS feature and not really a tool but worth mentioning. HubSpot has a great CMS tool called the HubSpot COS, but has lacked a database developers could access until now. Credit to <a href=\"https://twitter.com/gabewahhab\" target=\"_blank\" rel=\"noopener\">@gabewahhab</a>.\n\n<h3><a href=\"https://www.ghostery.com/try-us/download-browser-extension/\" target=\"_blank\" rel=\"noopener\">Ghostery</a></h3>\n\nA browser plugin that allows you to go incognito to web analytics. This is pretty useful to avoid skewing any analytics without having to block your IP on every service or every time you use a different internet connection. Credit to <a href=\"https://twitter.com/theardit\" target=\"_blank\" rel=\"noopener\">@theardit</a>.\n\n<h3><a href=\"https://www.usertesting.com/\" target=\"_blank\" rel=\"noopener\">User Testing</a></h3>\n\nVideos of real users and their feedback on your website or app. Credit to <a href=\"https://twitter.com/kyleplacy\" target=\"_blank\" rel=\"noopener\">@kyleplacy</a>.\n\n<h3><a href=\"https://x.ai/\" target=\"_blank\" rel=\"noopener\">x.ai</a></h3>\n\nAn AI powered personal assistant with the ability to accurately schedule meetings for you. Credit to <a href=\"https://twitter.com/kyleplacy\" target=\"_blank\" rel=\"noopener\">@kyleplacy</a>.\n\n## Featured Talk\n\n<h3>Content Comeback: How to Transform Freelance Chaos into a Kickass In-House Content Team &ndash; <a href=\"https://twitter.com/mikaelatierney\" target=\"_blank\" rel=\"noopener\">Mikaela Tierney</a></h3>\n\nOne of the more popular talks of the conference, Mikaela breaks down the process to creating an in-house content writing team that produces awesome work.\n\nFull disclosure, Mikaela actually works with me at Results-Powered Marketing. She has done a kickass job of transforming a content writing team that constantly missed deadlines and created subpar work into a group of rockstars that are now the golden child of the agency.\n\nYou can download her <a href=\"http://julian.is/files/content-comeback-hubspot-inbound-2016.pdf\" target=\"_blank\" rel=\"noopener\">slide deck here</a>.\n",
        "type": "MarkdownRemark",
        "contentDigest": "835f3daef263e213e33c979ee54cb39a",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "INBOUND 2016 — A Designer's Perspective with a Roundup of Tools",
        "author": "Julian Gaviria",
        "description": "It’s difficult for some folks to see the value in a designer attending a marketing conference, but anyone with a decent understanding of design knows that with context, you create better work.",
        "excerpt": "It’s difficult for some folks to see the value in a designer attending a marketing conference, but anyone with a decent understanding of design knows that with context, you create better work.",
        "time": "2 Minutes",
        "comments": false,
        "icon": "/assets/aico-inbound.svg",
        "slug": "hubspot-inbound-2016-designers-perspective",
        "path": "/article/hubspot-inbound-2016-designers-perspective/",
        "date": "2016-11-13",
        "_PARENT": "984f251d-4435-56c8-9366-c82e7d949805"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nIt’s difficult for some folks to see the value in a designer attending a marketing conference such as <a href=\"http://www.inbound.com/\" target=\"_blank\" rel=\"noopener\">INBOUND 2016</a>, but anyone with a decent understanding of design knows that with context, you create better work. The best designs were not put together by a designer working in isolation, the best designs were put together by a designer that was aware of the material and concept at hand with an understanding that went beyond the surface level.\n\nKnowing how and why your marketing team does certain things and grasping concept of the marketing approach helps the designer make better decisions in her work that are inline with the goals of the entire team.\n\n## How to get the most out of INBOUND as a designer\n\nI go to conferences for two reasons, one to see what the pros are currently doing (whether it’s design, development or marketing) and two, to see what the rest community/attendees are currently innovating on (the golden nuggets of information).\n\nThe former is easy, just attend the talks of the most influential speakers that interest you. I usually go by Twitter followers and the company they represent. Fair warning, there are a handful of first time speakers that are rockstars in the making and it's not the wisest to dismiss them completely without doing your due diligence.\n\nThe latter gets a bit more difficult since it requires you to leave your comfort zone and talk to people (this becomes extra challenging if you’re an introvert like myself). However, this is where I get the most out of INBOUND (3rd year attending); knowing how other teams interact, the tools they’re using, and the solutions and hacks to the same problems my team is facing, this is all useful information you normally wouldn’t get from scheduled talks. The same reason why Twitter is such a successful platform, you get access to the conversation of problems and their solutions happening in real time.\n\n## Roundup of Tools\n\nBelow is a list of all the tools I came across during talks, side conversations, &amp; as well as coworkers while at INBOUND 2016.\n\n<h3><a href=\"https://usabilityhub.com/\" target=\"_blank\" rel=\"noopener\">Usability Hub</a></h3>\n\nRemote user testing that can help you quickley get answers for what otherwise would take weeks of testing. Credit to <a href=\"https://twitter.com/oligardner\" target=\"_blank\" rel=\"noopener\">@oligardner</a>.\n\n<h3><a href=\"https://readability-score.com/text/\" target=\"_blank\" rel=\"noopener\">Readability Score</a></h3>\n\nA readability score is a computer-calculated index which can tell you roughly what level of education someone will need to be able to read a piece of text easily. Credit to <a href=\"https://twitter.com/oligardner\" target=\"_blank\" rel=\"noopener\">@oligardner</a>.\n\n<h3><a href=\"http://www.hubspot.com/product-updates/introducing-hubdb\" target=\"_blank\" rel=\"noopener\">HubDB</a></h3>\n\nThis is actually a HubSpot COS feature and not really a tool but worth mentioning. HubSpot has a great CMS tool called the HubSpot COS, but has lacked a database developers could access until now. Credit to <a href=\"https://twitter.com/gabewahhab\" target=\"_blank\" rel=\"noopener\">@gabewahhab</a>.\n\n<h3><a href=\"https://www.ghostery.com/try-us/download-browser-extension/\" target=\"_blank\" rel=\"noopener\">Ghostery</a></h3>\n\nA browser plugin that allows you to go incognito to web analytics. This is pretty useful to avoid skewing any analytics without having to block your IP on every service or every time you use a different internet connection. Credit to <a href=\"https://twitter.com/theardit\" target=\"_blank\" rel=\"noopener\">@theardit</a>.\n\n<h3><a href=\"https://www.usertesting.com/\" target=\"_blank\" rel=\"noopener\">User Testing</a></h3>\n\nVideos of real users and their feedback on your website or app. Credit to <a href=\"https://twitter.com/kyleplacy\" target=\"_blank\" rel=\"noopener\">@kyleplacy</a>.\n\n<h3><a href=\"https://x.ai/\" target=\"_blank\" rel=\"noopener\">x.ai</a></h3>\n\nAn AI powered personal assistant with the ability to accurately schedule meetings for you. Credit to <a href=\"https://twitter.com/kyleplacy\" target=\"_blank\" rel=\"noopener\">@kyleplacy</a>.\n\n## Featured Talk\n\n<h3>Content Comeback: How to Transform Freelance Chaos into a Kickass In-House Content Team &ndash; <a href=\"https://twitter.com/mikaelatierney\" target=\"_blank\" rel=\"noopener\">Mikaela Tierney</a></h3>\n\nOne of the more popular talks of the conference, Mikaela breaks down the process to creating an in-house content writing team that produces awesome work.\n\nFull disclosure, Mikaela actually works with me at Results-Powered Marketing. She has done a kickass job of transforming a content writing team that constantly missed deadlines and created subpar work into a group of rockstars that are now the golden child of the agency.\n\nYou can download her <a href=\"http://julian.is/files/content-comeback-hubspot-inbound-2016.pdf\" target=\"_blank\" rel=\"noopener\">slide deck here</a>.\n",
      "fileAbsolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2016-11-13-hubspot-inbound-2016-designers-perspective.md"
    },
    "1458e982-feeb-5a6e-96fa-161a5b63fa3e": {
      "id": "1458e982-feeb-5a6e-96fa-161a5b63fa3e",
      "children": [],
      "parent": "02d18396-f186-5785-941b-634e5b36f096",
      "internal": {
        "content": "\nUnless you're off on a remote island and you've dismissed all technology from your life (props for somehow making your way here), I’m sure that by now you’ve heard of the upcoming iPhone X and it’s edge-to-edge display. In their effort to make a true all-screen phone, Apple introduced a “notch” that takes up part of the screen, encapsulating the front camera and additional sensors.\n\nPretty interesting from a design standpoint, but I’ll cut to the chase: This directly affects how our websites get formatted on these devices — it’s a pretty big deal.\n\n(Related: [Static Websites + JAMstack = <3](/article/static-websites-and-jamstack/))\n\n<figure>\n\t<img src=\"/assets/iphone-x-landscape-viewport-fit-default.jpg\" alt=\"Default Website Formatting on iPhone X\">\n\t<figcaption>Default Website Formatting on iPhone X</figcaption>\n</figure>\n\nYou can see Safari adds default margins in order to buffer the safe areas of the notch.\n\nSo for those who craft the web, we could choose to continue designing as is and let the browsers make design decisions for us. Or we could come to terms with reality, accept the next generation of device screens, and take full control of our designs. (What do you think I’m advocating for?)\n\nRegardless of our opinions of Apple’s approach, the fact is that at the time of writing this post, Safari takes up [51.24% of the mobile market share here in the United States](http://gs.statcounter.com/browser-market-share/mobile/united-states-of-america), and [17.74% world wide](http://gs.statcounter.com/browser-market-share/mobile/worldwide) — a ton of people are going to be viewing our websites through these displays.\n\nNo need for a complete overhaul of your existing code base, though. You can embrace the notch with two simple code changes.\n\n## Remove default margins with viewport-fit=cover\n\nBased on the [CSS Round Display Spec](https://drafts.csswg.org/css-round-display/), we’re able to get websites to take up the entire screen by adding <code>viewport-fit=cover</code> to the viewport meta tag in the &lt;head&gt;. Here's what mine looks like:\n\n<pre class=\"language-markup\"><code>&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\"&gt;</code>\n</pre>\n\nThis descriptor, <code>viewport-fit</code>, accepts two other values: <code>auto</code>, the default behavior, and <code>contain</code> which, [according to the CSS Working Group](https://drafts.csswg.org/css-round-display/#viewport-fit-descriptor), is when “the initial layout viewport and the visual viewport are set to the largest rectangle which is inscribed in the display of the device.” I’m not entirely sure what that means, but in this case it seems to have the same result as default.\n\nGetting back on track here... Now our website covers (get it?) the screen in its entirety. We now have make sure that the notch doesn’t interfere with any elements on the website — remember, those default margins were there for a reason.\n\n<figure>\n\t<img src=\"/assets/iphone-x-landscape-viewport-fit-cover.jpg\" alt=\"Website Formatting on iPhone X w/ viewport-fit=cover\">\n\t<figcaption>Website Formatting on iPhone X w/ viewport-fit=cover </figcaption>\n</figure>\n\n## Avoiding Safe Areas with constant()\n\nApple introduced <code>constant(safe-area-inset-\\*)</code>, which resolves to the dimensions needed by the user agent or browser to avoid the notch and other safe areas of the phone.\n\n<pre class=\"language-markup\"><code>.inner-wrap {\n  padding:2.5em constant(safe-area-inset-right) 2.5em constant(safe-area-inset-left);\n}</code>\n</pre>\n\nOur content is now respecting the safe areas defined by the UA.\n\n<figure>\n\t<img src=\"/assets/iphone-x-horizontal-viewport-fit-cover.jpg\" alt=\"Website Formatting on iPhone X w/ viewport-fit=cover and constant()\">\n\t<figcaption>Website Formatting on iPhone X w/ viewport-fit=cover and constant()</figcaption>\n</figure>\n\nAt first, I wanted to bypass constant() and just use good ol’ ems/rems. The problem is that the dimensions of these safe areas will most likely change when other devices introduce safe areas and future versions of the iPhone are released. Avoiding constant() would be the equivalent of designing fixed-width mobile websites to only fit the iPhone.\n\nEven if you were to take this approach today, the dimensions of the safe areas change when you go from landscape to portrait.\n\n<h3>Fallback for constant()</h3>\n\nBrowsers that don’t support constant() will display a value of 0 (that’s pretty much every browser except Safari at the time of writing this post). The following does the trick for me:\n\n<pre class=\"language-markup\"><code>.inner-wrap {\n  padding:2.5em 1.5em 2.5em 1.5em;\n  padding:2.5em constant(safe-area-inset-right) 2.5em constant(safe-area-inset-left);\n}</code></pre>\n\n## Dimensions in Pixels\n\nI was able to get a list of dimensions from the iPhone X Simulator in Xcode, and now, I’m sharing it with you.\n\n<figure class=\"figure-fullwidth\">\n\t<img src=\"/assets/iphone-x-notch-safe-area-dimensions.jpg\" alt=\"iPhone X Safe Area Dimensions\">\n\t<figcaption>iPhone X Safe Area & Element Dimensions</figcaption>\n</figure>\n\n<h3>Elements</h3>\n\n<table>\n\t<tr>\n\t\t<th width=\"50%\">Element</th>\n\t\t<th width=\"25%\">Landscape</th>\n\t\t<th width=\"25%\">Portrait</th>\n\t</tr>\n\t<tr>\n\t\t<td><b>Notch</b></td>\n\t\t<td>31x209</td>\n\t\t<td>31x209</td>\n\t</tr>\n\t<tr>\n\t\t<td><b>Home Screen Indicator</b></td>\n\t\t<td>5x209</td>\n\t\t<td>5x133</td>\n\t</tr>\n\t\n</table>\n\n<h3>Safe Areas</h3>\n\n<table>\n\t<tr>\n\t\t<th width=\"50%\">Area</th>\n\t\t<th width=\"25%\">Landscape</th>\n\t\t<th width=\"25%\">Portrait</th>\n\t</tr>\n\t\n\t<tr>\n\t\t<td><b>constant(safe-area-inset-top)</b></td>\n\t\t<td>0</td>\n\t\t<td>0</td>\n\t</tr>\n\t<tr>\n\t\t<td><b>constant(safe-area-inset-right)</b></td>\n\t\t<td>44px</td>\n\t\t<td>0</td>\n\t</tr>\n\t<tr>\n\t\t<td><b>constant(safe-area-inset-bottom)</b></td>\n\t\t<td>21px</td>\n\t\t<td>34px</td>\n\t</tr>\n\t<tr>\n\t\t<td><b>constant(safe-area-inset-left)</b></td>\n\t\t<td>44px</td>\n\t\t<td>0</td>\n\t</tr>\n</table>\n\n## Closing Thoughts\n\nWere the design decisions made by Apple the correct ones? Maybe. Will this change the way we build websites? Yes, but so did responsive web design back in 2011 and [Progressive Web Apps](/article/progressive-web-apps/) within the last year at a much larger scale. The reality of it is that we're part of an unpredictable industry; learning and adopting are the two habits that keep us afloat.\n\nLet’s take this change with a grain of salt and prep for what the future of mobile devices may have in store.\n\n## Resources\n\n- [Designing Websites for iPhone X](https://webkit.org/blog/7929/designing-websites-for-iphone-x/) - The original article published by WebKit that drove everyone nuts\n- [Removing the White Bars in Safari on iPhone X](http://stephenradford.me/removing-the-white-bars-in-safari-on-iphone-x/) - Well put together article on removing the margins in the iPhone X\n- [“The Notch” and CSS](https://css-tricks.com/the-notch-and-css/) - Chris Coyier's take on the issue\n- [New WebKit Features in Safari 11](https://webkit.org/blog/7956/new-webkit-features-in-safari-11/) - Self-explanatory\n",
        "type": "MarkdownRemark",
        "contentDigest": "f903c02098054a2c41d26d21abc9e11f",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "Don't Fight The Notch — Designing for the iPhone X",
        "description": "Coming to terms with the notch on the iPhone X and its effect on mobile design.",
        "tags": [
          "CSS",
          "Mobile"
        ],
        "lastmod": "2017-10-17T00:00:00.000Z",
        "date": "2017-10-17",
        "time": "3 Minutes",
        "categories": [
          "Development"
        ],
        "slug": "iphone-x-notch",
        "path": "/article/iphone-x-notch/",
        "images": [
          "assets/og-dont-fight-the-notch.jpg"
        ],
        "icon": "/assets/aico-dont-fight-the-notch.svg",
        "comments": false,
        "_PARENT": "02d18396-f186-5785-941b-634e5b36f096"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nUnless you're off on a remote island and you've dismissed all technology from your life (props for somehow making your way here), I’m sure that by now you’ve heard of the upcoming iPhone X and it’s edge-to-edge display. In their effort to make a true all-screen phone, Apple introduced a “notch” that takes up part of the screen, encapsulating the front camera and additional sensors.\n\nPretty interesting from a design standpoint, but I’ll cut to the chase: This directly affects how our websites get formatted on these devices — it’s a pretty big deal.\n\n(Related: [Static Websites + JAMstack = <3](/article/static-websites-and-jamstack/))\n\n<figure>\n\t<img src=\"/assets/iphone-x-landscape-viewport-fit-default.jpg\" alt=\"Default Website Formatting on iPhone X\">\n\t<figcaption>Default Website Formatting on iPhone X</figcaption>\n</figure>\n\nYou can see Safari adds default margins in order to buffer the safe areas of the notch.\n\nSo for those who craft the web, we could choose to continue designing as is and let the browsers make design decisions for us. Or we could come to terms with reality, accept the next generation of device screens, and take full control of our designs. (What do you think I’m advocating for?)\n\nRegardless of our opinions of Apple’s approach, the fact is that at the time of writing this post, Safari takes up [51.24% of the mobile market share here in the United States](http://gs.statcounter.com/browser-market-share/mobile/united-states-of-america), and [17.74% world wide](http://gs.statcounter.com/browser-market-share/mobile/worldwide) — a ton of people are going to be viewing our websites through these displays.\n\nNo need for a complete overhaul of your existing code base, though. You can embrace the notch with two simple code changes.\n\n## Remove default margins with viewport-fit=cover\n\nBased on the [CSS Round Display Spec](https://drafts.csswg.org/css-round-display/), we’re able to get websites to take up the entire screen by adding <code>viewport-fit=cover</code> to the viewport meta tag in the &lt;head&gt;. Here's what mine looks like:\n\n<pre class=\"language-markup\"><code>&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\"&gt;</code>\n</pre>\n\nThis descriptor, <code>viewport-fit</code>, accepts two other values: <code>auto</code>, the default behavior, and <code>contain</code> which, [according to the CSS Working Group](https://drafts.csswg.org/css-round-display/#viewport-fit-descriptor), is when “the initial layout viewport and the visual viewport are set to the largest rectangle which is inscribed in the display of the device.” I’m not entirely sure what that means, but in this case it seems to have the same result as default.\n\nGetting back on track here... Now our website covers (get it?) the screen in its entirety. We now have make sure that the notch doesn’t interfere with any elements on the website — remember, those default margins were there for a reason.\n\n<figure>\n\t<img src=\"/assets/iphone-x-landscape-viewport-fit-cover.jpg\" alt=\"Website Formatting on iPhone X w/ viewport-fit=cover\">\n\t<figcaption>Website Formatting on iPhone X w/ viewport-fit=cover </figcaption>\n</figure>\n\n## Avoiding Safe Areas with constant()\n\nApple introduced <code>constant(safe-area-inset-\\*)</code>, which resolves to the dimensions needed by the user agent or browser to avoid the notch and other safe areas of the phone.\n\n<pre class=\"language-markup\"><code>.inner-wrap {\n  padding:2.5em constant(safe-area-inset-right) 2.5em constant(safe-area-inset-left);\n}</code>\n</pre>\n\nOur content is now respecting the safe areas defined by the UA.\n\n<figure>\n\t<img src=\"/assets/iphone-x-horizontal-viewport-fit-cover.jpg\" alt=\"Website Formatting on iPhone X w/ viewport-fit=cover and constant()\">\n\t<figcaption>Website Formatting on iPhone X w/ viewport-fit=cover and constant()</figcaption>\n</figure>\n\nAt first, I wanted to bypass constant() and just use good ol’ ems/rems. The problem is that the dimensions of these safe areas will most likely change when other devices introduce safe areas and future versions of the iPhone are released. Avoiding constant() would be the equivalent of designing fixed-width mobile websites to only fit the iPhone.\n\nEven if you were to take this approach today, the dimensions of the safe areas change when you go from landscape to portrait.\n\n<h3>Fallback for constant()</h3>\n\nBrowsers that don’t support constant() will display a value of 0 (that’s pretty much every browser except Safari at the time of writing this post). The following does the trick for me:\n\n<pre class=\"language-markup\"><code>.inner-wrap {\n  padding:2.5em 1.5em 2.5em 1.5em;\n  padding:2.5em constant(safe-area-inset-right) 2.5em constant(safe-area-inset-left);\n}</code></pre>\n\n## Dimensions in Pixels\n\nI was able to get a list of dimensions from the iPhone X Simulator in Xcode, and now, I’m sharing it with you.\n\n<figure class=\"figure-fullwidth\">\n\t<img src=\"/assets/iphone-x-notch-safe-area-dimensions.jpg\" alt=\"iPhone X Safe Area Dimensions\">\n\t<figcaption>iPhone X Safe Area & Element Dimensions</figcaption>\n</figure>\n\n<h3>Elements</h3>\n\n<table>\n\t<tr>\n\t\t<th width=\"50%\">Element</th>\n\t\t<th width=\"25%\">Landscape</th>\n\t\t<th width=\"25%\">Portrait</th>\n\t</tr>\n\t<tr>\n\t\t<td><b>Notch</b></td>\n\t\t<td>31x209</td>\n\t\t<td>31x209</td>\n\t</tr>\n\t<tr>\n\t\t<td><b>Home Screen Indicator</b></td>\n\t\t<td>5x209</td>\n\t\t<td>5x133</td>\n\t</tr>\n\t\n</table>\n\n<h3>Safe Areas</h3>\n\n<table>\n\t<tr>\n\t\t<th width=\"50%\">Area</th>\n\t\t<th width=\"25%\">Landscape</th>\n\t\t<th width=\"25%\">Portrait</th>\n\t</tr>\n\t\n\t<tr>\n\t\t<td><b>constant(safe-area-inset-top)</b></td>\n\t\t<td>0</td>\n\t\t<td>0</td>\n\t</tr>\n\t<tr>\n\t\t<td><b>constant(safe-area-inset-right)</b></td>\n\t\t<td>44px</td>\n\t\t<td>0</td>\n\t</tr>\n\t<tr>\n\t\t<td><b>constant(safe-area-inset-bottom)</b></td>\n\t\t<td>21px</td>\n\t\t<td>34px</td>\n\t</tr>\n\t<tr>\n\t\t<td><b>constant(safe-area-inset-left)</b></td>\n\t\t<td>44px</td>\n\t\t<td>0</td>\n\t</tr>\n</table>\n\n## Closing Thoughts\n\nWere the design decisions made by Apple the correct ones? Maybe. Will this change the way we build websites? Yes, but so did responsive web design back in 2011 and [Progressive Web Apps](/article/progressive-web-apps/) within the last year at a much larger scale. The reality of it is that we're part of an unpredictable industry; learning and adopting are the two habits that keep us afloat.\n\nLet’s take this change with a grain of salt and prep for what the future of mobile devices may have in store.\n\n## Resources\n\n- [Designing Websites for iPhone X](https://webkit.org/blog/7929/designing-websites-for-iphone-x/) - The original article published by WebKit that drove everyone nuts\n- [Removing the White Bars in Safari on iPhone X](http://stephenradford.me/removing-the-white-bars-in-safari-on-iphone-x/) - Well put together article on removing the margins in the iPhone X\n- [“The Notch” and CSS](https://css-tricks.com/the-notch-and-css/) - Chris Coyier's take on the issue\n- [New WebKit Features in Safari 11](https://webkit.org/blog/7956/new-webkit-features-in-safari-11/) - Self-explanatory\n",
      "fileAbsolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2017-10-11-dont-fight-the-notch.md"
    },
    "5865c153-a939-5e8b-a56d-8d5553abea00": {
      "id": "5865c153-a939-5e8b-a56d-8d5553abea00",
      "children": [],
      "parent": "1b1cf993-a06d-5c41-81df-8bfdbf424d22",
      "internal": {
        "content": "\nOver the past year, we at <a href=\"http://rpm.thomasnet.com\" target=\"_blank\">Results-Powered Marketing</a> (the agency I work for) have integrated Growth-Driven Design into our approach to building and maintaining websites. For those unfamiliar, GDD is an agile approach applied to the website development process — the goal is to get something out the door as soon as possible, test, iterate, and keep making tweaks to drive better and stronger results for our clients.\n\n<b>In this specific case study, we were able to increase our client's new monthly leads generated by 278%.</b>\n\n<figure><img src=\"/img/leads-generated-graph.jpg\" alt=\"Leads Generated Graph\">\n<figcaption>Monthly new leads generated graph via HubSpot - January 2016 to October 2016</figcaption>\n</figure>\n\n<p>Hy-Lok USA came to RPM three years ago to take advantage of the team’s marketing and industrial expertise to grow their marketing, lead generation, and subsequently, sales. In spring of 2015, our team launched a new website and saw a small bump in new leads generated.</p>\n\n<p>A year later, Hy-Lok USA upgraded their service agreement with RPM to include GDD services. At the time, we only had four months of GDD experience under our belt, which was more than enough to see how powerful performance-based updates can be. Specifically, for this client, we saw an initial 128% increase in new leads generated month-over-month — in just eight weeks. Pretty cool, right?</p>\n\n<p>Let’s talk about the testing and changes we made to get such stellar results.</p>\n\n## Landing Pages\n\n<p>\n  We started the engagement by targeting their landing pages; for those new to the party, in the inbound/content marketing world, a landing page is a page on the website which gates certain content (eBooks, catalogs, etc) behind a form field in return for the visitor’s information. The belief is that it’s a fair tradeoff for the content that you’re looking to download.\n\n</p>\n<p>While we believed we had a good foundation for these pages, we wanted to test their two main landing pages with the following improvements:\n</p>\n\n<ul>\n  <li>Removing header background image to create a unified design and avoid unnecessary visual distractions\n\n</li>\n  <li>Removing links from the footer to keep the user focused on the content on the page\n</li>\n  <li>Adding 3D cover of the offer (catalogs in this case) to create visual interest in what their prospects were there to download\n</li>\n  <li>Adding a background to the form in order to increase the emphasis of the action we want the user to take (submitting their information)</li>\n  \n</ul>\n\n<h3 class=\"text-aligncenter\">Before</h3>\n<figure><img src=\"/img/landing-page-before.jpg\" alt=\"Leads Generated Graph\" class=\"img-border\">\n\n</figure>\n\n<h3 class=\"text-aligncenter\">After</h3>\n<figure><img src=\"/img/landing-page-after.jpg\" alt=\"Leads Generated Graph\" class=\"img-border\">\n\n</figure>\n\n<p>We saw a 6% increase in new leads generated from this improvement.\n</p>\n\n## Footer CTAs with 3D eBook Covers\n\n<p>Next, we took a step back and targeted the exposure of the CTAs leading to the landing pages on the website. Our thought process was if we increased the traffic to the landing pages, the conversions would increase. \n</p>\n\n<p>We setup a multivariate test and added the same and/or similar CTAs that were located at the top of any given page to the bottom of the page. Instead of adding them as CTAs, we added them as 3D eBook covers, which more closely represented what a prospect was downloading and hoped to catch their visual interest. </p>\n\n<figure><img src=\"/img/resources-module.jpg\" alt=\"Resources Module\">\n\n</figure>\n\n<p>We saw a 104.8% increase in new leads generated with this improvement. Yes you read right —  by reusing CTAs that were already on the page (for the most part) and visually presenting them in a different way and in a different location, we were able to double new leads generated. (That’s the big bump you see from May to June.) </p>\n\n## Progressive Disclosure with Gated Content\n\n<p>When we initially set up GDD, the company’s two sets of catalogs, fitting catalogs and valve catalogs, were gated differently. </p>\n\n<p>\nThe fitting catalogs were being gated by the traditional landing page. This meant when someone clicked on a link/CTA to the fitting catalogs, they were taken to the landing page where they had to fill out a the form to gain access to the library, which looked like this:</p>\n\n<figure><img src=\"/img/progressive-disclosure-2-levels.jpg\" alt=\"Progressive Disclosure with Gated Content\">\n<figcaption>Landing Page > Catalog Library</figcaption>\n</figure>\n\n<p>On the other hand, the valve catalogs had an intermediate page. When someone clicked on a link/CTA to the valve catalogs, they were taken to a page where they were able to see all the catalogs available via thumbnails (not a landing page). However, once they found the catalog they were looking for and clicked on a thumbnail to access it, they were taken to the landing page where they had to fill out the form to gain access.\n</p>\n\n<figure>\n  <img src=\"/img/progressive-disclosure-3-levels.jpg\" alt=\"Progressive Disclosure with Gated Content\">\n<figcaption>Catalog Page w/ Thumbnails > Landing Page > Catalog Library</figcaption>\n</figure>\n\n<p>Even though this introduced an additional step, with the user being able to confirm that the catalog they were looking for was in the library of catalogs, they were more likely to fill out the form and become a lead.\n\n</p>\n<p>We were able to increase new leads generated by 15% by making both sets of catalogs follow the latter.\n</p>\n\n## Overcoming the Fold with Vertical Media Queries\n\n<p>When a user views a website on a desktop computer or laptop, the most common internet browser size is 1350 pixels by 640 pixels. Before starting a GDD program, this is what a common visitor saw when he or she came to the two most popular pages:\n</p>\n\n<figure><img src=\"/img/home-default.jpg\" alt=\"Home Default\">\n<figcaption>Home</figcaption>\n</figure>\n\n<figure><img src=\"/img/valves-default.jpg\" alt=\"Valves Default\">\n<figcaption>Valves</figcaption>\n</figure>\n\n<p>As you can see, even though they still get a decent overview of the page, there’s still room for improvement, especially with the content that’s directly below the fold.</p>\n\n<p>Similar to how a responsive website traditionally adjusts depending on the width of a device/browser with media queries, we can also adjust the size of the website depending on the height. This can be done with the help of vertical media queries, which is an often overlooked aspect of responsive websites. We simply lowered the body font-size by 25% for anyone on a browser with a height that was less than 640 pixels without having to resize every individual element. This proportionately reduced the size of every element on the page to the following:</p>\n\n<figure><img src=\"/img/home-vertical-media-queries.jpg\" alt=\"Home Media Queries\">\n<figcaption>Home</figcaption>\n</figure>\n\n<figure><img src=\"/img/valves-media-queries.jpg\" alt=\"Valves Media Queries\">\n\n<figcaption>Valves</figcaption></figure>\n\n<p>Now in both windows, the CTAs are fully visible and the distributor locator section/links are now in the viewport. With this improvement, we were able to increase the engagement with the distributor locator by 24%, CTA engagement by 10.7%, and overall new leads generated by 3.4%.</p>\n\n## Form Popups vs Landing Pages\n\n<p>Building on our other improvements, we wanted to get users to their desired catalog quicker. \nWhere we last left off, the user journey once someone clicked on a link/CTA to a catalog page was the following:\n\n<figure><img src=\"/img/progressive-disclosure-3-levels.jpg\" alt=\"Valves Media Queries\">\n<figcaption>\n  Catalog Page w/ Thumbnails > Landing Page > Catalog Library\n</figcaption>\n</figure>\n\n<p>Even though this helped us increase conversions, the process still seemed a bit cumbersome. In order to simplify the process and still collect the visitor’s information, once the visitor clicked on a thumbnail, instead of taking them to the landing page with the form, we presented the form via lightbox.</p>\n\n<figure><img src=\"/img/progressive-disclosure-3-levels-lightbox.jpg\" alt=\"Valves Media Queries\">\n<figcaption>\n  Catalog Page w/ Thumbnails > Lightbox on the same page > Catalog Library\n</figcaption>\n</figure>\n\n<p>By removing the landing page out of the equation, we simplified the process and increased all catalog form submissions by 60.5% and new leads generated by 23.79%.</p>\n\n## A few final things to note with this program.\n\n<ul>\n  <li>Traffic was stable throughout the seven months of testing and iterations averaging 15,000 unique visitors per month.</li>\n  <li>Just because this worked for my client, it doesn’t mean it’ll work for yours — each website is a living a breathing organism whose conversion factors vary.</li>\n  <li>You need to tailor each GDD test according to the website set up and business needs.</li>\n  <li>These techniques were specific to inbound/content marketing.</li>\n  <li>Lower the body font-size won't proportionately lower the size of everything unless the website is setup in ems.</li>\n  <li>HubSpot was used for marketing automation.</li>\n  <li>Optimizely was used for A/B testing.</li>\n\n</ul>\n",
        "type": "MarkdownRemark",
        "contentDigest": "1ae926799178889e9bfb9f6db6061194",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "Growth-Driven Design Case Study",
        "author": "Julian Gaviria",
        "description": "I'll run you through a case study where we were able to increase conversions by 278% by applying simple UX and design changes.",
        "excerpt": "I'll run you through a case study where we were able to increase conversions by 278% by applying simple UX and design changes.",
        "categories": [
          "UX"
        ],
        "tags": [
          "CRO",
          "GDD",
          "CaseStudy"
        ],
        "time": "5 Minutes",
        "comments": false,
        "icon": "/assets/aico-conversion-rate-optimization.svg",
        "slug": "conversion-rate-optimization-case-study",
        "path": "/article/conversion-rate-optimization-case-study/",
        "date": "2016-11-08",
        "_PARENT": "1b1cf993-a06d-5c41-81df-8bfdbf424d22"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nOver the past year, we at <a href=\"http://rpm.thomasnet.com\" target=\"_blank\">Results-Powered Marketing</a> (the agency I work for) have integrated Growth-Driven Design into our approach to building and maintaining websites. For those unfamiliar, GDD is an agile approach applied to the website development process — the goal is to get something out the door as soon as possible, test, iterate, and keep making tweaks to drive better and stronger results for our clients.\n\n<b>In this specific case study, we were able to increase our client's new monthly leads generated by 278%.</b>\n\n<figure><img src=\"/img/leads-generated-graph.jpg\" alt=\"Leads Generated Graph\">\n<figcaption>Monthly new leads generated graph via HubSpot - January 2016 to October 2016</figcaption>\n</figure>\n\n<p>Hy-Lok USA came to RPM three years ago to take advantage of the team’s marketing and industrial expertise to grow their marketing, lead generation, and subsequently, sales. In spring of 2015, our team launched a new website and saw a small bump in new leads generated.</p>\n\n<p>A year later, Hy-Lok USA upgraded their service agreement with RPM to include GDD services. At the time, we only had four months of GDD experience under our belt, which was more than enough to see how powerful performance-based updates can be. Specifically, for this client, we saw an initial 128% increase in new leads generated month-over-month — in just eight weeks. Pretty cool, right?</p>\n\n<p>Let’s talk about the testing and changes we made to get such stellar results.</p>\n\n## Landing Pages\n\n<p>\n  We started the engagement by targeting their landing pages; for those new to the party, in the inbound/content marketing world, a landing page is a page on the website which gates certain content (eBooks, catalogs, etc) behind a form field in return for the visitor’s information. The belief is that it’s a fair tradeoff for the content that you’re looking to download.\n\n</p>\n<p>While we believed we had a good foundation for these pages, we wanted to test their two main landing pages with the following improvements:\n</p>\n\n<ul>\n  <li>Removing header background image to create a unified design and avoid unnecessary visual distractions\n\n</li>\n  <li>Removing links from the footer to keep the user focused on the content on the page\n</li>\n  <li>Adding 3D cover of the offer (catalogs in this case) to create visual interest in what their prospects were there to download\n</li>\n  <li>Adding a background to the form in order to increase the emphasis of the action we want the user to take (submitting their information)</li>\n  \n</ul>\n\n<h3 class=\"text-aligncenter\">Before</h3>\n<figure><img src=\"/img/landing-page-before.jpg\" alt=\"Leads Generated Graph\" class=\"img-border\">\n\n</figure>\n\n<h3 class=\"text-aligncenter\">After</h3>\n<figure><img src=\"/img/landing-page-after.jpg\" alt=\"Leads Generated Graph\" class=\"img-border\">\n\n</figure>\n\n<p>We saw a 6% increase in new leads generated from this improvement.\n</p>\n\n## Footer CTAs with 3D eBook Covers\n\n<p>Next, we took a step back and targeted the exposure of the CTAs leading to the landing pages on the website. Our thought process was if we increased the traffic to the landing pages, the conversions would increase. \n</p>\n\n<p>We setup a multivariate test and added the same and/or similar CTAs that were located at the top of any given page to the bottom of the page. Instead of adding them as CTAs, we added them as 3D eBook covers, which more closely represented what a prospect was downloading and hoped to catch their visual interest. </p>\n\n<figure><img src=\"/img/resources-module.jpg\" alt=\"Resources Module\">\n\n</figure>\n\n<p>We saw a 104.8% increase in new leads generated with this improvement. Yes you read right —  by reusing CTAs that were already on the page (for the most part) and visually presenting them in a different way and in a different location, we were able to double new leads generated. (That’s the big bump you see from May to June.) </p>\n\n## Progressive Disclosure with Gated Content\n\n<p>When we initially set up GDD, the company’s two sets of catalogs, fitting catalogs and valve catalogs, were gated differently. </p>\n\n<p>\nThe fitting catalogs were being gated by the traditional landing page. This meant when someone clicked on a link/CTA to the fitting catalogs, they were taken to the landing page where they had to fill out a the form to gain access to the library, which looked like this:</p>\n\n<figure><img src=\"/img/progressive-disclosure-2-levels.jpg\" alt=\"Progressive Disclosure with Gated Content\">\n<figcaption>Landing Page > Catalog Library</figcaption>\n</figure>\n\n<p>On the other hand, the valve catalogs had an intermediate page. When someone clicked on a link/CTA to the valve catalogs, they were taken to a page where they were able to see all the catalogs available via thumbnails (not a landing page). However, once they found the catalog they were looking for and clicked on a thumbnail to access it, they were taken to the landing page where they had to fill out the form to gain access.\n</p>\n\n<figure>\n  <img src=\"/img/progressive-disclosure-3-levels.jpg\" alt=\"Progressive Disclosure with Gated Content\">\n<figcaption>Catalog Page w/ Thumbnails > Landing Page > Catalog Library</figcaption>\n</figure>\n\n<p>Even though this introduced an additional step, with the user being able to confirm that the catalog they were looking for was in the library of catalogs, they were more likely to fill out the form and become a lead.\n\n</p>\n<p>We were able to increase new leads generated by 15% by making both sets of catalogs follow the latter.\n</p>\n\n## Overcoming the Fold with Vertical Media Queries\n\n<p>When a user views a website on a desktop computer or laptop, the most common internet browser size is 1350 pixels by 640 pixels. Before starting a GDD program, this is what a common visitor saw when he or she came to the two most popular pages:\n</p>\n\n<figure><img src=\"/img/home-default.jpg\" alt=\"Home Default\">\n<figcaption>Home</figcaption>\n</figure>\n\n<figure><img src=\"/img/valves-default.jpg\" alt=\"Valves Default\">\n<figcaption>Valves</figcaption>\n</figure>\n\n<p>As you can see, even though they still get a decent overview of the page, there’s still room for improvement, especially with the content that’s directly below the fold.</p>\n\n<p>Similar to how a responsive website traditionally adjusts depending on the width of a device/browser with media queries, we can also adjust the size of the website depending on the height. This can be done with the help of vertical media queries, which is an often overlooked aspect of responsive websites. We simply lowered the body font-size by 25% for anyone on a browser with a height that was less than 640 pixels without having to resize every individual element. This proportionately reduced the size of every element on the page to the following:</p>\n\n<figure><img src=\"/img/home-vertical-media-queries.jpg\" alt=\"Home Media Queries\">\n<figcaption>Home</figcaption>\n</figure>\n\n<figure><img src=\"/img/valves-media-queries.jpg\" alt=\"Valves Media Queries\">\n\n<figcaption>Valves</figcaption></figure>\n\n<p>Now in both windows, the CTAs are fully visible and the distributor locator section/links are now in the viewport. With this improvement, we were able to increase the engagement with the distributor locator by 24%, CTA engagement by 10.7%, and overall new leads generated by 3.4%.</p>\n\n## Form Popups vs Landing Pages\n\n<p>Building on our other improvements, we wanted to get users to their desired catalog quicker. \nWhere we last left off, the user journey once someone clicked on a link/CTA to a catalog page was the following:\n\n<figure><img src=\"/img/progressive-disclosure-3-levels.jpg\" alt=\"Valves Media Queries\">\n<figcaption>\n  Catalog Page w/ Thumbnails > Landing Page > Catalog Library\n</figcaption>\n</figure>\n\n<p>Even though this helped us increase conversions, the process still seemed a bit cumbersome. In order to simplify the process and still collect the visitor’s information, once the visitor clicked on a thumbnail, instead of taking them to the landing page with the form, we presented the form via lightbox.</p>\n\n<figure><img src=\"/img/progressive-disclosure-3-levels-lightbox.jpg\" alt=\"Valves Media Queries\">\n<figcaption>\n  Catalog Page w/ Thumbnails > Lightbox on the same page > Catalog Library\n</figcaption>\n</figure>\n\n<p>By removing the landing page out of the equation, we simplified the process and increased all catalog form submissions by 60.5% and new leads generated by 23.79%.</p>\n\n## A few final things to note with this program.\n\n<ul>\n  <li>Traffic was stable throughout the seven months of testing and iterations averaging 15,000 unique visitors per month.</li>\n  <li>Just because this worked for my client, it doesn’t mean it’ll work for yours — each website is a living a breathing organism whose conversion factors vary.</li>\n  <li>You need to tailor each GDD test according to the website set up and business needs.</li>\n  <li>These techniques were specific to inbound/content marketing.</li>\n  <li>Lower the body font-size won't proportionately lower the size of everything unless the website is setup in ems.</li>\n  <li>HubSpot was used for marketing automation.</li>\n  <li>Optimizely was used for A/B testing.</li>\n\n</ul>\n",
      "fileAbsolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2016-11-08-conversion-rate-optimization-case-study.md"
    },
    "8f2ec885-a6bd-5555-8edb-956b912bda0b": {
      "id": "8f2ec885-a6bd-5555-8edb-956b912bda0b",
      "children": [],
      "parent": "c16d61f3-9f23-5a5a-9347-ae56956383c9",
      "internal": {
        "content": "\nWebsites have reached a point where the maturity of graphic design has caught up with the state of web development. But what about accessibility? As the web keeps getting prettier to look at, it also keeps getting heavier and slower to load. Page speed is a limitation that influences creativity and impacts accessibility, but unfortunately it is also a behind the scenes act that usually gets overlooked.\n\n(Related: [Progressive Web Apps — The Next Step in Responsive Web Design](/article/progressive-web-apps/))\n\nSaving images for the web isn’t cutting it anymore; we now have to take into consideration perceived load time, Gzip, CDNs, post-photoshop image optimization, etc, just to make our websites accessible (and to make Google happy, let’s not forget). Seems as though we’re going backwards, but even though browsers and computers keep getting faster and faster, we now have a slew of mobile devices that we need to support (all depending on your target audience).\n\nI’m not going to bore you with the philosophical approach of how you should be considering website performance as early as kindergarten graduation (don’t get me wrong, the design phase matters a ton, and starting the conversation of performance early on allows you and the client to make better decisions down the road), but instead what you’ll find below is solid baseline and actionable steps to immediately make your website faster & more accessible.\n\n## Gzip the hell out of everything\n\nGzip is the wizard behind the curtain that makes the web as a whole much faster to navigate; it is data compression that takes place when a file gets requested from a server and delivered to the browser. When enabled, Gzip compresses file transfers by as much as 70-80%.\n\nTechnically, you can Gzip any file on your website but due to the time it takes to process, the only files worth gzipping are the big three: HTML, CSS, & JS. Images and videos are already compressed (they better be if you’re producing these assets for the web) and the amount of time it would take Gzip to compress them further would outweigh the amount of load time saved with the smaller file size.\n\nHowever, Gzip doesn’t get enabled by default on most hosts (you can check to see if your website’s [Gzipped](http://checkgzipcompression.com/)). Setting this up is usually on the server side and depending on your hosting company, you can just reach out to them and ask them to enable it. This can also be done via the .htaccess on Apache with the following code snippet:\n\n<pre class=\"language-markup\"><code>SetOutputFilter DEFLATE\nAddOutputFilterByType DEFLATE text/html text/css text/plain text/xml text/javascript application/x-javascript application/x-httpd-php\nBrowserMatch ^Mozilla/4 gzip-only-text/html\nBrowserMatch ^Mozilla/4\\.0[678] no-gzip\nBrowserMatch \\bMSIE !no-gzip !gzip-only-text/html\nBrowserMatch \\bMSI[E] !no-gzip !gzip-only-text/html\nSetEnvIfNoCase Request_URI \\.(?:gif|jpe?g|png)$ no-gzip\nHeader append Vary User-Agent env=!dont-vary</code>\n</pre>\n\nThere are different versions of Gzip depending on your host. Check that the above code works on your specific setup.\n\n## Use a CDN service to delegate content delivery\n\nA Content Delivery Network (CDN) serves 3 main purposes: lowering bandwidth costs, global availability of content, and faster loading times.\n\nYour website exists on a server somewhere in a physical location; when someone visits your website, the user’s browser makes a request to this server for all of the files that make up your website (images, HTML, JS, CSS, etc). The time it takes for a website to load largely depends on the physical distance between the server (where the website is hosted) and the location of the person/computer visiting the website.\n\nFor example, below is a website without a CDN being hosted in Illinois accessed by an ISP in New York City &amp; an ISP in Japan:\n\n<figure>\n\t<img src=\"/img/web-page-test-corrugated-new-york.jpg\" alt=\"WebPageTest.org Results from New York ISP\" class=\"img-border\">\n\t<figcaption>WebPageTest.org Results from New York ISP without CDN</figcaption>\n</figure>\n\n<figure>\n\t<img src=\"/img/web-page-test-corrugated-japan.jpg\" alt=\"WebPageTest.org Results from Japan ISP\" class=\"img-border\">\n\t<figcaption>WebPageTest.org Results from Japan ISP without CDN</figcaption>\n</figure>\n\nDue to the location of the server, accessing the website from Japan took around 4 times longer to initially load than it did when it was accessed from NYC. A CDN solves this by distributing your website’s assets to servers around the world and delivering it from the closest server possible from where the website is being accessed.\n\nBelow are the same two tests done to my website, which is using a CDN:\n\n<figure>\n\t<img src=\"/img/web-page-test-julianis-new-york.jpg\" alt=\"WebPageTest.org Results from New York ISP with CDN\" class=\"img-border\">\n\t<figcaption>WebPageTest.org Results from New York ISP with CDN</figcaption>\n</figure>\n\n<figure>\n\t<img src=\"/img/web-page-test-julianis-japan.jpg\" alt=\"WebPageTest.org Results from Japan ISP with CDN\" class=\"img-border\">\n\t<figcaption>WebPageTest.org Results from Japan ISP with CDN</figcaption>\n</figure>\n\nThe loading times here are relatively similar despite the distance of the two locations where the request was made. Both ISPs were served the content of my website from a server relatively close to their physical location which kept loading times down to a minimum.\n\nSeems pretty effective, but you probably need the knowledge of a senior back-end developer to set this up, right? Nope, all you need is the ability to change your domain’s nameservers to the ones provided by your CDN service of choice (I use [CloudFlare](https://www.cloudflare.com/cdn/)) and you’ll be good to go. Nothing on the hosting end changes and this won’t break the bank. Do it now!\n\n## Image optimization beyond “save for web”\n\nLet’s start with the baseline: images should be saved at no higher than 60% quality when exporting from any image editing software (mostly Photoshop). This is the difference between a <a href=\"/img/kimbo-100-quality.jpg\" class=\"lightbox\" title=\"1000x650 JPG weighing 330kb when saved at 100%\">1000x650 JPG</a> weighing 330kb when saved at 100% and the <a href=\"/img/kimbo-100-quality.jpg\" class=\"lightbox\" title=\"1000x650 JPG weighing 88kb when saved at 60%\">1000x650 JPG</a> weighing 88kb at 60%. Yes, this matters when every other website nowadays includes 3+ hero images rotating on the homepage.\n\nIf we save below 60%, the quality of the image begins to visibly drop. However, we can apply additional image compression that removes bloat added by metadata and unnecessary code (yes, images are made up of code) without affecting the quality of the image. Since Photoshop doesn’t take the initiative to remove this bloat, we can turn to tools such as [ImageOptim](https://imageoptim.com/mac) or the web based [jpeg.io](https://www.jpeg.io/) to do the heavy lifting.\n\nDownload your website’s images folder, run it through ImageOptim, and reupload it. Google [PageSpeed Inisghts](https://developers.google.com/speed/pagespeed/insights/) will thank you.\n\n<h3>What about PNGs?</h3>\n\nNot all images are created equally; PNGs tend to be way heavier than JPGs mostly because of the complexity of their transparency capability. Transparency in modern web design is necessary, but can easily get out of hand with an optimistic designer focusing on just the aesthetics.\n\nHere’s where [ImageAlpha](https://pngmini.com/) comes into play; similar to ImageOptim, ImageAlpha caters specifically to PNGs.\n\n<div class=\"emph-section rows-of-2 text-aligncenter\">\n\t<figure><img src=\"/img/png-photoshop.png\" alt=\"PNG Photoshop Export\">\n\t<figcaption>PNG Photoshop Export - 69kb</figcaption>\n\t</figure>\n\n    <figure><img src=\"/img/png-imagealpha.png\" alt=\"PNG Photoshop Export\">\n    <figcaption>PNG ImageAlpha - 25kb</figcaption>\n    </figure>\n\n</div>\n\nThat’s a 64% reduction in size. Keep in mind that running images through ImageAlpha does decrease the compatibility of the PNG in older browsers such as IE6 (but if you’re still supporting IE6, I guess you have bigger things to worry about).\n\n<h3>Can’t we use SVGs for transparency?</h3>\n\nYes you can! But this should be limited to simple flat graphics such as my logo or the social media icons on this site. SVGs are great for presenting vector graphics that are resolution independent; you can scale my logo to be 10x bigger without pixelating or increasing file size. You can also directly embed SVGs into a web page without linking out to another file and therefore avoiding the extra HTTP request made to the browser. Technically, you can transform a complex graphic such as the 3D cover above into vector and present it as an SVG, but this will end up weighing significantly more than a PNG (just don’t do it).\n\nThere are many advantages SVGs but this deserves a blog post of it’s own (if not a book). A handful of developers such as [Sara Soueidan](https://twitter.com/SaraSoueidan) & [Chris Coyier](https://css-tricks.com/) dedicate a good chunk of their careers to the complexities of SVGs.\n\n## Perceived Performance\n\nSometimes it’s more about how fast a website seems and not so much about the actual loading time. Humans are impatient and need to get entertained while they wait, if not they complain or, even worse, leave. Take for example the situation at a Houston airport where passenger complaints were overwhelmingly high in regards to the long waits at baggage claim. Instead of reducing wait times, airport executives increased the walking distance between the arrival gates and baggage claim. Passengers were now spending most of their time walking to baggage claim and by the time they arrived the wait time, if any, was minimal. Complaints suddenly disappeared.\n\nThe same concept applies to websites. The faster we see a website load, whether it’s completely loaded or not, the faster we get entertained and the likelihood of sticking around on the website increases. CSS goes against this concept; it will not paint a website until the entire CSS file has loaded. Not to mention that CSS is also render-blocking, that’s right, no other assets on the web page will load if CSS hasn’t finished loading. The reason this isn’t as big of a deal as Javascript being render blocking is because CSS files are usually lightweight and don’t take up much processing power. However, websites are now becoming very CSS heavy and we’re starting to see the implications in the start-render time (the time it takes for a website to go from a blank screen to showing anything).\n\nThe fix? Inlining the CSS that’s needed to show the content above the fold (or the most common viewport size of your website); this allows for the most critical part of the website, what the user sees, to load first without having to wait for the rest of the CSS file to load.\n\nBelow you'll see an example of the same website with Critical CSS enabled:\n\n<!-- <figure><a href=\"/assets/critical-vs-noncriticalcss.mp4\" class=\"popup-youtube\"><img src=\"/img/critical-css-comparison-screenshot.jpg\" alt=\"Critical CSS Comparison\"></a>\n<figcaption>Critical CSS vs. Non-Critical CSS Start-Render Time</figcaption>\n</figure> -->\n\n<figure><a href=\"/img/critical-css-vs-non-critical-css.jpg\" class=\"lightbox\"><img src=\"/img/critical-css-vs-non-critical-css.jpg\" alt=\"Critical CSS Comparison\"></a>\n<figcaption>Critical CSS vs. Non-Critical CSS Start-Render Time</figcaption>\n</figure>\n\nEven though both versions of the website have the exact same assets to load, the start-render time of the Critical CSS version was 67% faster than the original.\n\nThis can get easily automated with the use of a Gulp/Grunt plugin. Smashing Magazine wrote a [detailed article](https://www.smashingmagazine.com/2015/08/understanding-critical-css/) on the subject with great insight on how to use in production.\n\n## Let’s not forget the basics\n\nSome of the basics become second nature to us and become a blind spot when speaking about our process. With that in mind, here are a few rules of thumb to ensure a fast website:\n\n<ul>\n\t<li>Minify and concatenate all of your JavaScript and CSS</li>\n\t<li>Avoid using unnecessary images that don’t add value to the page</li>\n\t<li>Avoid duct taping your website with plugins since most inject bloated code and add unnecessary HTTP requests</li>\n\t<li>Create animations using CSS instead of JavaScript</li>\n\t<li>Use a task manager such as Gulp or Grunt to automate all speed optimization efforts</li>\n</ul>\n\nDo you have straight forward & quick to setup techniques you include in your websites? Join the conversation on [Twitter](https://twitter.com/juliangav).\n",
        "type": "MarkdownRemark",
        "contentDigest": "666aafabed4126b03def9bf2b180a67e",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "A Simple Baseline for Fast Loading Accessible Websites",
        "author": "Julian Gaviria",
        "description": "A solid baseline with actionable steps to immediately make your website faster & more accessible.",
        "categories": [
          "Development"
        ],
        "tags": [
          "WebPerf",
          "Optimization",
          "PerceivedPerformance"
        ],
        "images": [
          "assets/og-simple-baseline-fast-loading-websites.jpg"
        ],
        "icon": "/assets/aico-simple-baseline-fast-loading-websites.svg",
        "time": "6 minutes",
        "comments": false,
        "slug": "baseline-for-fast-loading-websites",
        "path": "/article/baseline-for-fast-loading-websites/",
        "date": "2017-01-15",
        "_PARENT": "c16d61f3-9f23-5a5a-9347-ae56956383c9"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nWebsites have reached a point where the maturity of graphic design has caught up with the state of web development. But what about accessibility? As the web keeps getting prettier to look at, it also keeps getting heavier and slower to load. Page speed is a limitation that influences creativity and impacts accessibility, but unfortunately it is also a behind the scenes act that usually gets overlooked.\n\n(Related: [Progressive Web Apps — The Next Step in Responsive Web Design](/article/progressive-web-apps/))\n\nSaving images for the web isn’t cutting it anymore; we now have to take into consideration perceived load time, Gzip, CDNs, post-photoshop image optimization, etc, just to make our websites accessible (and to make Google happy, let’s not forget). Seems as though we’re going backwards, but even though browsers and computers keep getting faster and faster, we now have a slew of mobile devices that we need to support (all depending on your target audience).\n\nI’m not going to bore you with the philosophical approach of how you should be considering website performance as early as kindergarten graduation (don’t get me wrong, the design phase matters a ton, and starting the conversation of performance early on allows you and the client to make better decisions down the road), but instead what you’ll find below is solid baseline and actionable steps to immediately make your website faster & more accessible.\n\n## Gzip the hell out of everything\n\nGzip is the wizard behind the curtain that makes the web as a whole much faster to navigate; it is data compression that takes place when a file gets requested from a server and delivered to the browser. When enabled, Gzip compresses file transfers by as much as 70-80%.\n\nTechnically, you can Gzip any file on your website but due to the time it takes to process, the only files worth gzipping are the big three: HTML, CSS, & JS. Images and videos are already compressed (they better be if you’re producing these assets for the web) and the amount of time it would take Gzip to compress them further would outweigh the amount of load time saved with the smaller file size.\n\nHowever, Gzip doesn’t get enabled by default on most hosts (you can check to see if your website’s [Gzipped](http://checkgzipcompression.com/)). Setting this up is usually on the server side and depending on your hosting company, you can just reach out to them and ask them to enable it. This can also be done via the .htaccess on Apache with the following code snippet:\n\n<pre class=\"language-markup\"><code>SetOutputFilter DEFLATE\nAddOutputFilterByType DEFLATE text/html text/css text/plain text/xml text/javascript application/x-javascript application/x-httpd-php\nBrowserMatch ^Mozilla/4 gzip-only-text/html\nBrowserMatch ^Mozilla/4\\.0[678] no-gzip\nBrowserMatch \\bMSIE !no-gzip !gzip-only-text/html\nBrowserMatch \\bMSI[E] !no-gzip !gzip-only-text/html\nSetEnvIfNoCase Request_URI \\.(?:gif|jpe?g|png)$ no-gzip\nHeader append Vary User-Agent env=!dont-vary</code>\n</pre>\n\nThere are different versions of Gzip depending on your host. Check that the above code works on your specific setup.\n\n## Use a CDN service to delegate content delivery\n\nA Content Delivery Network (CDN) serves 3 main purposes: lowering bandwidth costs, global availability of content, and faster loading times.\n\nYour website exists on a server somewhere in a physical location; when someone visits your website, the user’s browser makes a request to this server for all of the files that make up your website (images, HTML, JS, CSS, etc). The time it takes for a website to load largely depends on the physical distance between the server (where the website is hosted) and the location of the person/computer visiting the website.\n\nFor example, below is a website without a CDN being hosted in Illinois accessed by an ISP in New York City &amp; an ISP in Japan:\n\n<figure>\n\t<img src=\"/img/web-page-test-corrugated-new-york.jpg\" alt=\"WebPageTest.org Results from New York ISP\" class=\"img-border\">\n\t<figcaption>WebPageTest.org Results from New York ISP without CDN</figcaption>\n</figure>\n\n<figure>\n\t<img src=\"/img/web-page-test-corrugated-japan.jpg\" alt=\"WebPageTest.org Results from Japan ISP\" class=\"img-border\">\n\t<figcaption>WebPageTest.org Results from Japan ISP without CDN</figcaption>\n</figure>\n\nDue to the location of the server, accessing the website from Japan took around 4 times longer to initially load than it did when it was accessed from NYC. A CDN solves this by distributing your website’s assets to servers around the world and delivering it from the closest server possible from where the website is being accessed.\n\nBelow are the same two tests done to my website, which is using a CDN:\n\n<figure>\n\t<img src=\"/img/web-page-test-julianis-new-york.jpg\" alt=\"WebPageTest.org Results from New York ISP with CDN\" class=\"img-border\">\n\t<figcaption>WebPageTest.org Results from New York ISP with CDN</figcaption>\n</figure>\n\n<figure>\n\t<img src=\"/img/web-page-test-julianis-japan.jpg\" alt=\"WebPageTest.org Results from Japan ISP with CDN\" class=\"img-border\">\n\t<figcaption>WebPageTest.org Results from Japan ISP with CDN</figcaption>\n</figure>\n\nThe loading times here are relatively similar despite the distance of the two locations where the request was made. Both ISPs were served the content of my website from a server relatively close to their physical location which kept loading times down to a minimum.\n\nSeems pretty effective, but you probably need the knowledge of a senior back-end developer to set this up, right? Nope, all you need is the ability to change your domain’s nameservers to the ones provided by your CDN service of choice (I use [CloudFlare](https://www.cloudflare.com/cdn/)) and you’ll be good to go. Nothing on the hosting end changes and this won’t break the bank. Do it now!\n\n## Image optimization beyond “save for web”\n\nLet’s start with the baseline: images should be saved at no higher than 60% quality when exporting from any image editing software (mostly Photoshop). This is the difference between a <a href=\"/img/kimbo-100-quality.jpg\" class=\"lightbox\" title=\"1000x650 JPG weighing 330kb when saved at 100%\">1000x650 JPG</a> weighing 330kb when saved at 100% and the <a href=\"/img/kimbo-100-quality.jpg\" class=\"lightbox\" title=\"1000x650 JPG weighing 88kb when saved at 60%\">1000x650 JPG</a> weighing 88kb at 60%. Yes, this matters when every other website nowadays includes 3+ hero images rotating on the homepage.\n\nIf we save below 60%, the quality of the image begins to visibly drop. However, we can apply additional image compression that removes bloat added by metadata and unnecessary code (yes, images are made up of code) without affecting the quality of the image. Since Photoshop doesn’t take the initiative to remove this bloat, we can turn to tools such as [ImageOptim](https://imageoptim.com/mac) or the web based [jpeg.io](https://www.jpeg.io/) to do the heavy lifting.\n\nDownload your website’s images folder, run it through ImageOptim, and reupload it. Google [PageSpeed Inisghts](https://developers.google.com/speed/pagespeed/insights/) will thank you.\n\n<h3>What about PNGs?</h3>\n\nNot all images are created equally; PNGs tend to be way heavier than JPGs mostly because of the complexity of their transparency capability. Transparency in modern web design is necessary, but can easily get out of hand with an optimistic designer focusing on just the aesthetics.\n\nHere’s where [ImageAlpha](https://pngmini.com/) comes into play; similar to ImageOptim, ImageAlpha caters specifically to PNGs.\n\n<div class=\"emph-section rows-of-2 text-aligncenter\">\n\t<figure><img src=\"/img/png-photoshop.png\" alt=\"PNG Photoshop Export\">\n\t<figcaption>PNG Photoshop Export - 69kb</figcaption>\n\t</figure>\n\n    <figure><img src=\"/img/png-imagealpha.png\" alt=\"PNG Photoshop Export\">\n    <figcaption>PNG ImageAlpha - 25kb</figcaption>\n    </figure>\n\n</div>\n\nThat’s a 64% reduction in size. Keep in mind that running images through ImageAlpha does decrease the compatibility of the PNG in older browsers such as IE6 (but if you’re still supporting IE6, I guess you have bigger things to worry about).\n\n<h3>Can’t we use SVGs for transparency?</h3>\n\nYes you can! But this should be limited to simple flat graphics such as my logo or the social media icons on this site. SVGs are great for presenting vector graphics that are resolution independent; you can scale my logo to be 10x bigger without pixelating or increasing file size. You can also directly embed SVGs into a web page without linking out to another file and therefore avoiding the extra HTTP request made to the browser. Technically, you can transform a complex graphic such as the 3D cover above into vector and present it as an SVG, but this will end up weighing significantly more than a PNG (just don’t do it).\n\nThere are many advantages SVGs but this deserves a blog post of it’s own (if not a book). A handful of developers such as [Sara Soueidan](https://twitter.com/SaraSoueidan) & [Chris Coyier](https://css-tricks.com/) dedicate a good chunk of their careers to the complexities of SVGs.\n\n## Perceived Performance\n\nSometimes it’s more about how fast a website seems and not so much about the actual loading time. Humans are impatient and need to get entertained while they wait, if not they complain or, even worse, leave. Take for example the situation at a Houston airport where passenger complaints were overwhelmingly high in regards to the long waits at baggage claim. Instead of reducing wait times, airport executives increased the walking distance between the arrival gates and baggage claim. Passengers were now spending most of their time walking to baggage claim and by the time they arrived the wait time, if any, was minimal. Complaints suddenly disappeared.\n\nThe same concept applies to websites. The faster we see a website load, whether it’s completely loaded or not, the faster we get entertained and the likelihood of sticking around on the website increases. CSS goes against this concept; it will not paint a website until the entire CSS file has loaded. Not to mention that CSS is also render-blocking, that’s right, no other assets on the web page will load if CSS hasn’t finished loading. The reason this isn’t as big of a deal as Javascript being render blocking is because CSS files are usually lightweight and don’t take up much processing power. However, websites are now becoming very CSS heavy and we’re starting to see the implications in the start-render time (the time it takes for a website to go from a blank screen to showing anything).\n\nThe fix? Inlining the CSS that’s needed to show the content above the fold (or the most common viewport size of your website); this allows for the most critical part of the website, what the user sees, to load first without having to wait for the rest of the CSS file to load.\n\nBelow you'll see an example of the same website with Critical CSS enabled:\n\n<!-- <figure><a href=\"/assets/critical-vs-noncriticalcss.mp4\" class=\"popup-youtube\"><img src=\"/img/critical-css-comparison-screenshot.jpg\" alt=\"Critical CSS Comparison\"></a>\n<figcaption>Critical CSS vs. Non-Critical CSS Start-Render Time</figcaption>\n</figure> -->\n\n<figure><a href=\"/img/critical-css-vs-non-critical-css.jpg\" class=\"lightbox\"><img src=\"/img/critical-css-vs-non-critical-css.jpg\" alt=\"Critical CSS Comparison\"></a>\n<figcaption>Critical CSS vs. Non-Critical CSS Start-Render Time</figcaption>\n</figure>\n\nEven though both versions of the website have the exact same assets to load, the start-render time of the Critical CSS version was 67% faster than the original.\n\nThis can get easily automated with the use of a Gulp/Grunt plugin. Smashing Magazine wrote a [detailed article](https://www.smashingmagazine.com/2015/08/understanding-critical-css/) on the subject with great insight on how to use in production.\n\n## Let’s not forget the basics\n\nSome of the basics become second nature to us and become a blind spot when speaking about our process. With that in mind, here are a few rules of thumb to ensure a fast website:\n\n<ul>\n\t<li>Minify and concatenate all of your JavaScript and CSS</li>\n\t<li>Avoid using unnecessary images that don’t add value to the page</li>\n\t<li>Avoid duct taping your website with plugins since most inject bloated code and add unnecessary HTTP requests</li>\n\t<li>Create animations using CSS instead of JavaScript</li>\n\t<li>Use a task manager such as Gulp or Grunt to automate all speed optimization efforts</li>\n</ul>\n\nDo you have straight forward & quick to setup techniques you include in your websites? Join the conversation on [Twitter](https://twitter.com/juliangav).\n",
      "fileAbsolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2017-01-15-baseline-for-fast-loading-websites.md"
    },
    "2dfd9e99-2a14-53cf-9d96-0c0ad436577f": {
      "id": "2dfd9e99-2a14-53cf-9d96-0c0ad436577f",
      "children": [],
      "parent": "0011e7ef-8b47-59d9-9af6-d35c7ad75ab7",
      "internal": {
        "content": "\nAs users, we hate popups. We never click on them. They’re annoying. They get in the way. But as conversion rate optimizers, they just work. They produce results by making themselves very difficult to ignore, and believe it or not, people do convert on these. Good news, though — somewhere, somehow, someone was able to find a middle ground to this. It’s what we call “exit intent modals” or, if you prefer to sound Google smart, “exit intent interstitials.\"\n\n(You’re more than welcome to <a href=\"#code-for-exit-intent-popup\" class=\"smooth-scroll\">skip my ramble and go straight to the code</a>.)\n\nIn comparison to the intrusive popups that appear as soon as you visit a page (or in some cases, after a slight delay), an exit intent popup appears when the user shows an intent to exit the website (hence the name). This allows for the user to have a better experience on the website by not interrupting their visit until the very end when they’re ready to call it quits.\n\n<figure>\n  <img src=\"/assets/exit-intent-modal-example.jpg\" alt=\"Example of an exit intent modal\" class=\"img-border\">\n  <figcaption>Exit Intent Modal Example (yes I know you hate it, but read on)</figcaption>\n</figure>\n\nNow, just so we’re on the same page, I’m not referring to those popups you see on any of those shady websites you've been visiting (you know, the ones that are almost impossible to exit from). Rather, let’s focus on the simple modal that shows up before you leave the website — where you’re free to close your window without being prohibited to do so (or being repeatedly asked if you’re <i>really, really</i> sure). <b>I've activated it for this blog post, go ahead and move your mouse off of the browser window</b>.\n\nIt’s not magic. It’s not big brother. It’s not a crazy complicated algorithm that some tech scientist invented after years of not seeing sunlight. It’s actually a small, simple script that’s added to your website that detects when the user’s mouse hovers outside of the browser window. It’s usually an action someone takes immediately before exiting out of the tab or browser window.\n\n(Bonus: Later on in this post, you’ll get step-by-step instructions on how to add it to your website’s existing lightbox/popup scripts, so keep reading.)\n\nEven though this technique has been around for a few years, momentum skyrocketed when [Google announced](https://webmasters.googleblog.com/2016/08/helping-users-easily-access-content-on.html) that as of January 10, 2017, websites would be penalized for the relationship between mobile searches and intrusive interstitials. The search engine giant has picked up on the poor UX these popups cause on smaller screens. The penalty only applies if the interstitial appears on a page directly after arriving from a Google-mobile search result. Nothing is stopping Google from moving forward with a full-fledged desktop initiative, so future-proof now.\n\nAll of these considerations and the careful planning is more than worth it — exit intent popups convert like crazy, and that’s what you’re here for, yes?\n\nOkay, enough with the theory. Let’s get into practicality and implementation. Over the past few months, we at [RPM](https://rpm.thomasnet.com) have been doing some heavy testing on exit intent to see what yields the best results — take a look at some of our findings below:\n\n## A/B Test: Delayed Popup vs. Exit Intent Popup\n\nWe started off by testing a traditional delayed popup vs an exit intent popup. (Spoiler: The results threw us off a bit, but nonetheless, what we learned from this was pretty valuable.)\n\n<figure>\n\t<img src=\"/assets/delayed-popup-vs-exit-intent-popup.jpg\" alt=\"Delayed Popup vs. Exit Intent Popup\" class=\"img-border\">\n\t<figcaption>Delayed Popup vs. Exit Intent Popup &mdash; A/B Test</figcaption>\n</figure>\n\n<div class=\"rows-of-2\">\n\t<div><h3 class=\"text-aligncenter\">Variant A</h3>\n<p>Popup activates 5 seconds after the user initially visits the website.</p>\n\n<p>Converted at <b>1.36%</b> with <b>23 signups</b> out of <b>1687 visitors</b>.</p></div>\n\n<div><h3 class=\"text-aligncenter\">Variant B</h3>\n<p>Popup activates once the user shows an intent to exit the website.</p>\n<p>Converted at <b>0.69%</b> with <b>12 signups</b> out of <b>1722 visitors</b>.</p></div>\n</div>\n\nAt a first glance, this seems like somewhat of a disappointment since the results did not align with our hypothesis of “by presenting the popup as an exit intent, users are more likely to convert.” But looking at the vital signs of the website, Variation B had a 4% improvement in website engagement and a 14% improvement in RFQs.\n\nThis was enough evidence for us to conclude that there was an overall improvement in the UX of the website to give exit intent method more attention.\n\n## Multivariate Test: Strong Messaging + Multiple Offers\n\nArmed with the knowledge of our initial test, we created a multivariate test of the exit intent with a strong focus on the messaging and offer.\n\n<h3>The Control</h3>\n\nNo Exit Intent Popup; Website Converted at <b>7.02%</b> with <b>88 leads generated</b> (form submissions) out of <b>1,254 visitors</b>.\n\n<hr>\n\n<div class=\"rows-of-3\">\n\t<div><h3 class=\"text-aligncenter\">Variant A</h3>\n<p class=\"text-aligncenter small-font-size\">Single Offer <br>with Intro Message</p>\n\n<figure><a href=\"/assets/multivariate-exit-intent-a.jpg\" class=\"lightbox\"><img src=\"/assets/multivariate-exit-intent-a.jpg\" alt=\"Multivariate Test Variant A\" class=\"img-border\"></a></figure>\n\n<p class=\"small-font-size\">\nWebsite Converted at <b>8.59%</b> with <b>108 leads generated</b> out of <b>1,258 visitors</b> <span class=\"test-improvement\">(+22.3% Improvement)</span>.</p>\n</div>\n<div><h3 class=\"text-aligncenter\">Variant B</h3>\n<p class=\"text-aligncenter small-font-size\">Top 3 <br>Converting eBooks\n</p>\n\n<figure><a href=\"/assets/multivariate-exit-intent-b.jpg\" class=\"lightbox\"><img src=\"/assets/multivariate-exit-intent-b.jpg\" alt=\"Multivariate Test Variant B\" class=\"img-border\"></a></figure>\n<p class=\"small-font-size\">\nWebsite Converted at <b>8.14%</b> with <b>109 leads generated</b> out of <b>1,339 visitors</b> <span class=\"test-improvement\">(+16.0% Improvement)</span></p>\n\n</div>\n\n<div><h3 class=\"text-aligncenter\">Variant C</h3>\n<p class=\"text-aligncenter small-font-size\">Single Offer w/ Intro <br>Msg + Top 2 eBooks\n\n</p>\n\n<figure><a href=\"/assets/multivariate-exit-intent-c.jpg\" class=\"lightbox\"><img src=\"/assets/multivariate-exit-intent-c.jpg\" alt=\"Multivariate Test Variant C\" class=\"img-border\"></a></figure>\n<p class=\"small-font-size\">\nWebsite Converted at <b>10.12%</b> with <b>127 leads generated</b> out of <b>1,255 visitors</b> <span class=\"test-improvement\">(+44.2% Improvement)</span></p>\n</div>\n</div>\n\nWe then tested multiple variations, and we’ve consistently improved conversion rates by +40%. Like I said, it works.\n\nPretty cool, right? Time to try it for yourself...\n\n## Code for Exit Intent Popup\n\n<p>This section is a geared a bit more towards developers, so if you're a marketer, simply share this section with your developer (or anyone who knows how to add JavaScript to a website). If you're still having trouble, <a href=\"mailto:me@julian.is\">reach out to me</a> and I will gladly help out.</p>\n\n<h3>Step 1: Choosing a Lightbox Script</h3>\n\nThis could work with any script of choice, but over the years I’ve found [Magnific Popup](http://dimsemenov.com/plugins/magnific-popup/) to be one of the most well documented, versatile, and lightweight popup scripts around. But whatever you do, don’t build a lightbox script from scratch, even though the concept is relatively simple, there are many intricacies to take into consideration in order to provide a good user experience.\n\n<h3>Step 2: Adding the Exit Intent Listener</h3>\n\nOnce Magnific Popup is up and running, add the following code to your main.js — assuming all of your custom js code in a file similarly named file:\n\n<pre class=\"language-markup\"><code>// Exit intent\nfunction addEvent(obj, evt, fn) {\n  if (obj.addEventListener) {\n    obj.addEventListener(evt, fn, false);\n  } else if (obj.attachEvent) {\n    obj.attachEvent(\"on\" + evt, fn);\n  }\n}\n\n// Exit intent trigger\naddEvent(document, 'mouseout', function(evt) {\n  if (evt.toElement === null && evt.relatedTarget === null && !localStorage.getItem('exitintent_show')) {\n    $.magnificPopup.open({\n      items: {\n        src: '#newsletter-form' //ID of inline element\n      },\n      type: 'inline',\n      removalDelay: 500, //Delaying the removal in order to fit in the animation of the popup\n      mainClass: 'mfp-fade mfp-fade-side', //The actual animation\n    });\n    //localStorage.setItem('exitintent_show', 'true'); // Set the flag in localStorage\n  }\n});</code>\n</pre>\n\nWhat we’re doing here is wrapping the Magnific Popup function in an event listener that will detect when the mouse is off of the browser window. Once this happens, the lightbox function will fire. We’ve gone ahead and added a localstorage flag (similar to a cookie) that gets set once the script fires; this prevents us from showing the exit intent to the same visitors.\n\n<h3>Step 3: The HTML</h3>\n\nBut in order for it to fire correctly, it needs to call an existing HTML element on the dom. Here’s the HTML I’m using that contains my newsletter signup form:\n\n<pre class=\"language-markup\"><code>&lt;!--Delayed Popup--&gt;\n&lt;div id=\"newsletter-form\" class=\"white-popup mfp-hide\"&gt;\n  &lt;h2&gt;Subscribe to my articles&lt;/h2&gt;\n  &lt;p&gt;I promise I won't bug you much, just a heads up for whenever I publish anything new.&lt;/p&gt;\n\n  &lt;!-- Begin MailChimp Signup Form --&gt;\n\t\t(Form Code Goes Here)\n  &lt;!--End mc_embed_signup--&gt;\n\n&lt;/div&gt; \n&lt;!--End Delayed Popup--&gt;</code>\n</pre>\n\n<h3>Step 4: The CSS</h3>\n\nOnce this is all set, you can style it a bit with some custom CSS:\n\n<pre class=\"language-markup\"><code>.white-popup {\n  position: relative;\n  background: #FFF;\n  padding: 20px;\n  width: auto;\n  max-width: 500px;\n  margin: 20px auto;\n  > * {\n    margin-top: 0;\n  }\n}</code>\n</pre>\n\nAnd now you have your very own exit intent popup. Congratulations! (Sorry, no “exit-intent technology” here — there’s no such thing.)\n\nI'm curious to hear about what you’ve learned from this post, ways to improve patterns or how you’ve used popups. Don’t hesitate to [tweet](https://twitter.com/juliangav) at me.\n\nIf you're interested in optimizing the load time of your website, I recently wrote [A&nbsp;Simple Baseline for Fast Loading Accessible Websites](/article/baseline-for-fast-loading-websites).\n\n<!--Delayed Popup-->\n<div id=\"newsletter-form-ab-test-post\" class=\"white-popup mfp-hide\">\n  <figure class=\"np-logo\"><img src=\"/img/julian-signature.svg\" alt=\"Site Logo\"></figure>\n  <h2>Subscribe to my articles</h2>\n  <p>I promise I won't bug you much, just a heads up for whenever I publish anything new.</p>\n  <!-- Begin MailChimp Signup Form -->\n  <div id=\"mc_embed_signup\">\n    <form action=\"//julian.us14.list-manage.com/subscribe/post?u=e9ab548a9c3a7062bb0ad1f2a&amp;id=c08c6bdfaf\" method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" class=\"validate\" target=\"_blank\" novalidate>\n      <div id=\"mc_embed_signup_scroll\">\n        <div class=\"mc-field-group\">\n          <label for=\"mce-EMAIL\">Email:*\n          </label>\n          <input type=\"email\" value=\"\" name=\"EMAIL\" class=\"required email\" id=\"mce-EMAIL\" placeholder=\"Your Email Address\">\n        </div>\n        <div id=\"mce-responses\" class=\"clear\">\n          <div class=\"response\" id=\"mce-error-response\" style=\"display:none\"></div>\n          <div class=\"response\" id=\"mce-success-response\" style=\"display:none\"></div>\n        </div>\n        <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->\n        <div style=\"position: absolute; left: -5000px;\" aria-hidden=\"true\">\n          <input type=\"text\" name=\"b_e9ab548a9c3a7062bb0ad1f2a_c08c6bdfaf\" tabindex=\"-1\" value=\"\">\n        </div>\n        <div class=\"clear\">\n          <input type=\"submit\" value=\"Subscribe\" name=\"subscribe\" id=\"mc-embedded-subscribe\" class=\"button\">\n        </div>\n      </div>\n    </form>\n  </div>\n  <!--End mc_embed_signup-->\n</div>\n<!--End Delayed Popup-->\n\n<!-- <script>\n\n//Exit intent\nfunction addEvent(obj, evt, fn) {\n  if (obj.addEventListener) {\n    obj.addEventListener(evt, fn, false);\n  } else if (obj.attachEvent) {\n    obj.attachEvent(\"on\" + evt, fn);\n  }\n}\n\n// Exit intent trigger\naddEvent(document, 'mouseout', function(evt) {\n\n  if (evt.toElement === null && evt.relatedTarget === null && !localStorage.getItem('exitintent_show')) {\n    $.magnificPopup.open({\n      items: {\n        src: '#newsletter-form-popup' //ID of inline element\n      },\n      type: 'inline',\n      removalDelay: 500, //Delaying the removal in order to fit in the animation of the popup\n      mainClass: 'newsletter-popup mfp-fade mfp-fade-side', //The actual animation\n    });\n\n    //localStorage.setItem('exitintent_show', 'true'); // Set the flag in localStorage\n  }\n});</script> -->\n",
        "type": "MarkdownRemark",
        "contentDigest": "26f51843b6abfa4e554c721396f522e2",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "User-Friendly Exit Intent Modals",
        "author": "Julian Gaviria",
        "description": "As users, we hate popups. We never click on them. They’re annoying. They get in the way. But as conversion rate optimizers, they just work.",
        "excerpt": "As users, we hate popups. We never click on them. They’re annoying. They get in the way. But as conversion rate optimizers, they just work.",
        "categories": [
          "Development",
          "UX"
        ],
        "tags": [
          "ExitIntent",
          "Modals",
          "CRO",
          "ABTest",
          "Code"
        ],
        "images": [
          "assets/og-exit-intent-popup.jpg"
        ],
        "icon": "/assets/aico-exit-intent-popup.svg",
        "time": "5 Minutes",
        "comments": false,
        "slug": "exit-intent-popups",
        "path": "/article/exit-intent-popups/",
        "date": "2017-03-05",
        "_PARENT": "0011e7ef-8b47-59d9-9af6-d35c7ad75ab7"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nAs users, we hate popups. We never click on them. They’re annoying. They get in the way. But as conversion rate optimizers, they just work. They produce results by making themselves very difficult to ignore, and believe it or not, people do convert on these. Good news, though — somewhere, somehow, someone was able to find a middle ground to this. It’s what we call “exit intent modals” or, if you prefer to sound Google smart, “exit intent interstitials.\"\n\n(You’re more than welcome to <a href=\"#code-for-exit-intent-popup\" class=\"smooth-scroll\">skip my ramble and go straight to the code</a>.)\n\nIn comparison to the intrusive popups that appear as soon as you visit a page (or in some cases, after a slight delay), an exit intent popup appears when the user shows an intent to exit the website (hence the name). This allows for the user to have a better experience on the website by not interrupting their visit until the very end when they’re ready to call it quits.\n\n<figure>\n  <img src=\"/assets/exit-intent-modal-example.jpg\" alt=\"Example of an exit intent modal\" class=\"img-border\">\n  <figcaption>Exit Intent Modal Example (yes I know you hate it, but read on)</figcaption>\n</figure>\n\nNow, just so we’re on the same page, I’m not referring to those popups you see on any of those shady websites you've been visiting (you know, the ones that are almost impossible to exit from). Rather, let’s focus on the simple modal that shows up before you leave the website — where you’re free to close your window without being prohibited to do so (or being repeatedly asked if you’re <i>really, really</i> sure). <b>I've activated it for this blog post, go ahead and move your mouse off of the browser window</b>.\n\nIt’s not magic. It’s not big brother. It’s not a crazy complicated algorithm that some tech scientist invented after years of not seeing sunlight. It’s actually a small, simple script that’s added to your website that detects when the user’s mouse hovers outside of the browser window. It’s usually an action someone takes immediately before exiting out of the tab or browser window.\n\n(Bonus: Later on in this post, you’ll get step-by-step instructions on how to add it to your website’s existing lightbox/popup scripts, so keep reading.)\n\nEven though this technique has been around for a few years, momentum skyrocketed when [Google announced](https://webmasters.googleblog.com/2016/08/helping-users-easily-access-content-on.html) that as of January 10, 2017, websites would be penalized for the relationship between mobile searches and intrusive interstitials. The search engine giant has picked up on the poor UX these popups cause on smaller screens. The penalty only applies if the interstitial appears on a page directly after arriving from a Google-mobile search result. Nothing is stopping Google from moving forward with a full-fledged desktop initiative, so future-proof now.\n\nAll of these considerations and the careful planning is more than worth it — exit intent popups convert like crazy, and that’s what you’re here for, yes?\n\nOkay, enough with the theory. Let’s get into practicality and implementation. Over the past few months, we at [RPM](https://rpm.thomasnet.com) have been doing some heavy testing on exit intent to see what yields the best results — take a look at some of our findings below:\n\n## A/B Test: Delayed Popup vs. Exit Intent Popup\n\nWe started off by testing a traditional delayed popup vs an exit intent popup. (Spoiler: The results threw us off a bit, but nonetheless, what we learned from this was pretty valuable.)\n\n<figure>\n\t<img src=\"/assets/delayed-popup-vs-exit-intent-popup.jpg\" alt=\"Delayed Popup vs. Exit Intent Popup\" class=\"img-border\">\n\t<figcaption>Delayed Popup vs. Exit Intent Popup &mdash; A/B Test</figcaption>\n</figure>\n\n<div class=\"rows-of-2\">\n\t<div><h3 class=\"text-aligncenter\">Variant A</h3>\n<p>Popup activates 5 seconds after the user initially visits the website.</p>\n\n<p>Converted at <b>1.36%</b> with <b>23 signups</b> out of <b>1687 visitors</b>.</p></div>\n\n<div><h3 class=\"text-aligncenter\">Variant B</h3>\n<p>Popup activates once the user shows an intent to exit the website.</p>\n<p>Converted at <b>0.69%</b> with <b>12 signups</b> out of <b>1722 visitors</b>.</p></div>\n</div>\n\nAt a first glance, this seems like somewhat of a disappointment since the results did not align with our hypothesis of “by presenting the popup as an exit intent, users are more likely to convert.” But looking at the vital signs of the website, Variation B had a 4% improvement in website engagement and a 14% improvement in RFQs.\n\nThis was enough evidence for us to conclude that there was an overall improvement in the UX of the website to give exit intent method more attention.\n\n## Multivariate Test: Strong Messaging + Multiple Offers\n\nArmed with the knowledge of our initial test, we created a multivariate test of the exit intent with a strong focus on the messaging and offer.\n\n<h3>The Control</h3>\n\nNo Exit Intent Popup; Website Converted at <b>7.02%</b> with <b>88 leads generated</b> (form submissions) out of <b>1,254 visitors</b>.\n\n<hr>\n\n<div class=\"rows-of-3\">\n\t<div><h3 class=\"text-aligncenter\">Variant A</h3>\n<p class=\"text-aligncenter small-font-size\">Single Offer <br>with Intro Message</p>\n\n<figure><a href=\"/assets/multivariate-exit-intent-a.jpg\" class=\"lightbox\"><img src=\"/assets/multivariate-exit-intent-a.jpg\" alt=\"Multivariate Test Variant A\" class=\"img-border\"></a></figure>\n\n<p class=\"small-font-size\">\nWebsite Converted at <b>8.59%</b> with <b>108 leads generated</b> out of <b>1,258 visitors</b> <span class=\"test-improvement\">(+22.3% Improvement)</span>.</p>\n</div>\n<div><h3 class=\"text-aligncenter\">Variant B</h3>\n<p class=\"text-aligncenter small-font-size\">Top 3 <br>Converting eBooks\n</p>\n\n<figure><a href=\"/assets/multivariate-exit-intent-b.jpg\" class=\"lightbox\"><img src=\"/assets/multivariate-exit-intent-b.jpg\" alt=\"Multivariate Test Variant B\" class=\"img-border\"></a></figure>\n<p class=\"small-font-size\">\nWebsite Converted at <b>8.14%</b> with <b>109 leads generated</b> out of <b>1,339 visitors</b> <span class=\"test-improvement\">(+16.0% Improvement)</span></p>\n\n</div>\n\n<div><h3 class=\"text-aligncenter\">Variant C</h3>\n<p class=\"text-aligncenter small-font-size\">Single Offer w/ Intro <br>Msg + Top 2 eBooks\n\n</p>\n\n<figure><a href=\"/assets/multivariate-exit-intent-c.jpg\" class=\"lightbox\"><img src=\"/assets/multivariate-exit-intent-c.jpg\" alt=\"Multivariate Test Variant C\" class=\"img-border\"></a></figure>\n<p class=\"small-font-size\">\nWebsite Converted at <b>10.12%</b> with <b>127 leads generated</b> out of <b>1,255 visitors</b> <span class=\"test-improvement\">(+44.2% Improvement)</span></p>\n</div>\n</div>\n\nWe then tested multiple variations, and we’ve consistently improved conversion rates by +40%. Like I said, it works.\n\nPretty cool, right? Time to try it for yourself...\n\n## Code for Exit Intent Popup\n\n<p>This section is a geared a bit more towards developers, so if you're a marketer, simply share this section with your developer (or anyone who knows how to add JavaScript to a website). If you're still having trouble, <a href=\"mailto:me@julian.is\">reach out to me</a> and I will gladly help out.</p>\n\n<h3>Step 1: Choosing a Lightbox Script</h3>\n\nThis could work with any script of choice, but over the years I’ve found [Magnific Popup](http://dimsemenov.com/plugins/magnific-popup/) to be one of the most well documented, versatile, and lightweight popup scripts around. But whatever you do, don’t build a lightbox script from scratch, even though the concept is relatively simple, there are many intricacies to take into consideration in order to provide a good user experience.\n\n<h3>Step 2: Adding the Exit Intent Listener</h3>\n\nOnce Magnific Popup is up and running, add the following code to your main.js — assuming all of your custom js code in a file similarly named file:\n\n<pre class=\"language-markup\"><code>// Exit intent\nfunction addEvent(obj, evt, fn) {\n  if (obj.addEventListener) {\n    obj.addEventListener(evt, fn, false);\n  } else if (obj.attachEvent) {\n    obj.attachEvent(\"on\" + evt, fn);\n  }\n}\n\n// Exit intent trigger\naddEvent(document, 'mouseout', function(evt) {\n  if (evt.toElement === null && evt.relatedTarget === null && !localStorage.getItem('exitintent_show')) {\n    $.magnificPopup.open({\n      items: {\n        src: '#newsletter-form' //ID of inline element\n      },\n      type: 'inline',\n      removalDelay: 500, //Delaying the removal in order to fit in the animation of the popup\n      mainClass: 'mfp-fade mfp-fade-side', //The actual animation\n    });\n    //localStorage.setItem('exitintent_show', 'true'); // Set the flag in localStorage\n  }\n});</code>\n</pre>\n\nWhat we’re doing here is wrapping the Magnific Popup function in an event listener that will detect when the mouse is off of the browser window. Once this happens, the lightbox function will fire. We’ve gone ahead and added a localstorage flag (similar to a cookie) that gets set once the script fires; this prevents us from showing the exit intent to the same visitors.\n\n<h3>Step 3: The HTML</h3>\n\nBut in order for it to fire correctly, it needs to call an existing HTML element on the dom. Here’s the HTML I’m using that contains my newsletter signup form:\n\n<pre class=\"language-markup\"><code>&lt;!--Delayed Popup--&gt;\n&lt;div id=\"newsletter-form\" class=\"white-popup mfp-hide\"&gt;\n  &lt;h2&gt;Subscribe to my articles&lt;/h2&gt;\n  &lt;p&gt;I promise I won't bug you much, just a heads up for whenever I publish anything new.&lt;/p&gt;\n\n  &lt;!-- Begin MailChimp Signup Form --&gt;\n\t\t(Form Code Goes Here)\n  &lt;!--End mc_embed_signup--&gt;\n\n&lt;/div&gt; \n&lt;!--End Delayed Popup--&gt;</code>\n</pre>\n\n<h3>Step 4: The CSS</h3>\n\nOnce this is all set, you can style it a bit with some custom CSS:\n\n<pre class=\"language-markup\"><code>.white-popup {\n  position: relative;\n  background: #FFF;\n  padding: 20px;\n  width: auto;\n  max-width: 500px;\n  margin: 20px auto;\n  > * {\n    margin-top: 0;\n  }\n}</code>\n</pre>\n\nAnd now you have your very own exit intent popup. Congratulations! (Sorry, no “exit-intent technology” here — there’s no such thing.)\n\nI'm curious to hear about what you’ve learned from this post, ways to improve patterns or how you’ve used popups. Don’t hesitate to [tweet](https://twitter.com/juliangav) at me.\n\nIf you're interested in optimizing the load time of your website, I recently wrote [A&nbsp;Simple Baseline for Fast Loading Accessible Websites](/article/baseline-for-fast-loading-websites).\n\n<!--Delayed Popup-->\n<div id=\"newsletter-form-ab-test-post\" class=\"white-popup mfp-hide\">\n  <figure class=\"np-logo\"><img src=\"/img/julian-signature.svg\" alt=\"Site Logo\"></figure>\n  <h2>Subscribe to my articles</h2>\n  <p>I promise I won't bug you much, just a heads up for whenever I publish anything new.</p>\n  <!-- Begin MailChimp Signup Form -->\n  <div id=\"mc_embed_signup\">\n    <form action=\"//julian.us14.list-manage.com/subscribe/post?u=e9ab548a9c3a7062bb0ad1f2a&amp;id=c08c6bdfaf\" method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" class=\"validate\" target=\"_blank\" novalidate>\n      <div id=\"mc_embed_signup_scroll\">\n        <div class=\"mc-field-group\">\n          <label for=\"mce-EMAIL\">Email:*\n          </label>\n          <input type=\"email\" value=\"\" name=\"EMAIL\" class=\"required email\" id=\"mce-EMAIL\" placeholder=\"Your Email Address\">\n        </div>\n        <div id=\"mce-responses\" class=\"clear\">\n          <div class=\"response\" id=\"mce-error-response\" style=\"display:none\"></div>\n          <div class=\"response\" id=\"mce-success-response\" style=\"display:none\"></div>\n        </div>\n        <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->\n        <div style=\"position: absolute; left: -5000px;\" aria-hidden=\"true\">\n          <input type=\"text\" name=\"b_e9ab548a9c3a7062bb0ad1f2a_c08c6bdfaf\" tabindex=\"-1\" value=\"\">\n        </div>\n        <div class=\"clear\">\n          <input type=\"submit\" value=\"Subscribe\" name=\"subscribe\" id=\"mc-embedded-subscribe\" class=\"button\">\n        </div>\n      </div>\n    </form>\n  </div>\n  <!--End mc_embed_signup-->\n</div>\n<!--End Delayed Popup-->\n\n<!-- <script>\n\n//Exit intent\nfunction addEvent(obj, evt, fn) {\n  if (obj.addEventListener) {\n    obj.addEventListener(evt, fn, false);\n  } else if (obj.attachEvent) {\n    obj.attachEvent(\"on\" + evt, fn);\n  }\n}\n\n// Exit intent trigger\naddEvent(document, 'mouseout', function(evt) {\n\n  if (evt.toElement === null && evt.relatedTarget === null && !localStorage.getItem('exitintent_show')) {\n    $.magnificPopup.open({\n      items: {\n        src: '#newsletter-form-popup' //ID of inline element\n      },\n      type: 'inline',\n      removalDelay: 500, //Delaying the removal in order to fit in the animation of the popup\n      mainClass: 'newsletter-popup mfp-fade mfp-fade-side', //The actual animation\n    });\n\n    //localStorage.setItem('exitintent_show', 'true'); // Set the flag in localStorage\n  }\n});</script> -->\n",
      "fileAbsolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2017-03-05-exit-intent-popups.md"
    },
    "2c8dc667-140d-5eaa-b0ad-3640c497ec7e": {
      "id": "2c8dc667-140d-5eaa-b0ad-3640c497ec7e",
      "children": [],
      "parent": "799a225e-8fa2-5b39-8afd-0e98f0fee423",
      "internal": {
        "content": "\nOver the past two years I’ve dedicated part of my career to building a conversion rate optimization (CRO) team from the ground up. During this time, we ran over 300 tests on over 20 different client and internal websites with traffic ranging from 1,000 to 1.5 million sessions a month. We hit some home runs, made plenty of mistakes, and learned a TON along the way.\n\nIn hopes of saving you a few headaches, I've curated a list of some of the most important lessons learned. Enjoy!\n\n(Related: Here’s a [conversion rate optimization case study](/article/conversion-rate-optimization-case-study/) on one of the websites we tested on.)\n\n<!-- <h3>Table of Contents</h3>\n\n<ol>\n\t<li><a href=\"#one-metric\" class=\"smooth-scroll\">Focus on One Metric</a></li>\n\t<li><a href=\"#not-just-one-metric\" class=\"smooth-scroll\">Okay But Don't Just Focus on One Metric...</a></li>\n\t<li><a href=\"#friction-points\" class=\"smooth-scroll\">Let Friction Points &amp; Your Main Metric Determine What You’re Testing</a></li>\n\t<li><a href=\"#mvv\" class=\"smooth-scroll\">Focus On a Minimum Viable Vision with Minimum Viable Tests</a></li>\n\t<li><a href=\"#reproduce-results\" class=\"smooth-scroll\">It’s Difficult to Reproduce Results</a></li>\n\t<li><a href=\"#design-principles\" class=\"smooth-scroll\">Good Aesthetics &amp; Solid Design Principles Don’t Always Win</a></li>\n\t<li><a href=\"#failing-tests\" class=\"smooth-scroll\">Failing Tests Are Still Wins</a></li>\n\t<li><a href=\"#secret-sauce-hypothesis\" class=\"smooth-scroll\">The Secret Sauce is a Strong Hypothesis</a></li>\n\t<li><a href=\"#good-ux\" class=\"smooth-scroll\">A Good User Experience = Long Term Sustainability</a></li>\n\t<li><a href=\"#resources\" class=\"smooth-scroll\">Tools &amp; Resources</a></li>\n</ol>\n\n -->\n<!-- <h2 id=\"one-metric\">Focus on One Metric</h2> -->\n\n## Focus on One Metric\n\nIn order to maintain a focused CRO strategy, you need to know what the most important metric is and make that your team’s priority. When we first started, there was a long list of metrics that we wanted to improve on; this resulted in an unchoreographed effort to test and improve everything. This approach didn't get us good results.\n\nIn order to focus our efforts and run effective tests, we were able to shorten our list to one metric: the amount of visitors that converted into a lead. We set up every test with that metric in mind. This helped us to avoid running expensive tests focused on vanity metrics. For example, we turned our focus away from increasing page visits (website engagement) to improving the user journey towards gated content (lead generation).\n\n<figure>\n\t<img src=\"/assets/google-data-studio-chart.jpg\" alt=\"Google Data Studio Chart\" class=\"img-border\">\n\t<figcaption>Google Data Studio Chart</figcaption>\n</figure>\n\n<!-- <h2 id=\"not-just-one-metric\">Okay But Don't Just Focus on One Metric...</h2> -->\n\n## Okay But Don't Just Focus on One Metric...\n\nHear me out. Yes, you need one main metric to be your team's priority. But that primary metric has supporting metrics that determine how well it will perform.\n\nAt an individual test level, you need to make sure you're keeping an eye on other metrics that determine the success of your main metric or that affect a different and important part of the business/website. Even if you don't believe they're directly correlated (they probably are).\n\nEarly in my testing career, I ran a test where I was able to increase RFI submissions by 6%. From my perspective, that was a pretty solid result that should have improved the company’s bottom line. However, a month later the client came back to tell us that it was the lowest sales month they’ve had in a few years. I then realized that the same test that increased RFIs decreased product catalog downloads — the main source of lead generation for their sales team — by 24%.\n\nEver since that debacle, I’ve made sure to include the website’s vital metrics as goals for any test I setup. While you may think you're scoring big wins, you may be affecting other vital metrics in a not so awesome way. I suggest you keep an eye out for this, especially when running tests to leading metrics.\n\n<!-- <h2 id=\"friction-points\">Let Friction Points &amp; Your Main Metric Determine What You’re Testing</h2> -->\n\n## Let Friction Points &amp; Your Main Metric Determine What You’re Testing\n\nYou need a game plan. Instead of choosing random things to test, start by identifying the friction points of the website you believe will have the biggest impact on your main metric.\n\nGet cozy with Google Analytics. Set up goals that will help you keep track of all the important actions someone could take on your website (landing page views, form submissions, etc) as well as all the bad stuff that could happen (404 page views, form error messages, etc).\n\nOnce these goals are in place, set up individual segments of users that triggered the respective goals and analyze the hell out of it. You can compare segments of users that triggered a bad goal vs all users and see how these convert on the good goals. (I hope I didn’t lose you — [this guide](https://conversionxl.com/conversion-optimization/google-analytics-for-conversion-optimization/) does a way better job of explaining this than I did.)\n\nPlay around with Google Analytics' Behavior Flow tool. Set up a segment of your audience that has triggered your primary goal and see the path that was taken to get there. Look for pages with huge drop-offs and investigate.\n\n<figure>\n\t<img src=\"/assets/google-analytics-behavior-flow.jpg\" alt=\"Google Analytics Behavior Flow\" class=\"img-border\">\n\t<figcaption>Google Analytics Behavior Flow</figcaption>\n</figure>\n\nYou can also use a user recording tool like [FullStory](https://www.fullstory.com/) that let’s you see which user sessions have a high rate of rage, error, and dead clicks.\n\nWhichever the method you may use, focusing on user frustration will help you address low hanging fruit first and give you a clear path of what you should be focusing on.\n\n<!-- <h2 id=\"mvv\">Focus On a Minimum Viable Vision with Minimum Viable Tests</h2> -->\n\n## Focus On a Minimum Viable Vision with Minimum Viable Tests\n\nA test that takes a minimum amount of time to implement that produces a huge increase in conversions is the nirvana for any CRO team. This is usually not the case, but it should always be the mindset. This helps with testing velocity and quickly proving/disproving hypotheses without the expensive overhead.\n\nTest the minimum version of your idea instead and build from there. Design isn’t magic and because an idea worked for one website doesn’t mean it’ll work for yours. Which brings me to my next point...\n\n<!-- <h2 id=\"reproduce-results\">It’s Difficult to Reproduce Results</h2> -->\n\n## It’s Difficult to Reproduce Results\n\nJust because you achieved statistical significance on a certain test doesn’t mean that it’s a pattern that will work everywhere. My team ran a test that increased conversion rates on a landing page by 76% — only to have the same test decrease conversions for a different client and test inconclusive for another.\n\nThere are a handful of different variables, some obvious and some not, that are present with every test and have a big impact on the outcome (audience, traffic source, content, goals, etc); the goal with an A/B test is to change one of these variables with hopes of producing positive results.\n\nWhat most people don’t take into consideration is the relationship between these elements and how they indirectly affect each other. In the example above, we came to the conclusion that forms with a clear headline had a better chance of improving conversions than those that don’t — but the answer is usually not as straightforward.\n\nThe folks over at GoodUI.org focus most of their energy on figuring out which are the [winning tests that you can easily reproduce](http://www.goodui.org/evidence/).\n\n<!-- <h2 id=\"design-principles\">Good Aesthetics &amp; Solid Design Principles Don’t Always Win</h2> -->\n\n## Good Aesthetics &amp; Solid Design Principles Don’t Always Win\n\nWe recently had a debate on a hero image test. The solution proposed by my team was one that I wasn’t in line with. Not only were they going against the basic graphic design principle of balance, they were also doing it in a distasteful way (in my opinion).\n\n(I would show you the variations of the website but I’m going to respect the client's NDA.)\n\nI was 100% sure that my experience and background in design would prove my theory. The test had a 66% increase on leads generated just by switching that darn image. I swallowed my pride and learned to put my opinion aside.\n\n<!-- <h2 id=\"failing-tests\">Failing Tests Are Still Wins</h2> -->\n\n## Failing Tests Are Still Wins\n\nNot all tests you run are going to be home runs, the reality is that a handful of your tests will fail. Don’t let this turn into time wasted, analyze the hell out of the test, understand why it failed, and store it for reference. You will be referencing this in the future.\n\nIf none of your tests are failing, chances are only a few of them (if any) are home runs. Stop being so risk-averse.\n\n(Keep in mind that I’m referring to failed tests due to uncertainty and not mistakes. This is the difference between low conversions on a form due to the specific form fields used — uncertainty — and zero conversions on a form due to a broken submit button — mistakes.)\n\n<figure>\n\t<img src=\"/assets/ab-failed-test-optimizely.jpg\" alt=\"Optimizely Failed Test\" class=\"img-border\">\n\t<figcaption>Failed Test on Optimizely</figcaption>\n</figure>\n\n<!-- <h2 id=\"secret-sauce-hypothesis\">The Secret Sauce is a Strong Hypothesis</h2> -->\n\n## The Secret Sauce is a Strong Hypothesis\n\nThis helps to make sure there’s merit to what’s being tested. The hypothesis should dictate what you test and not the other way around — you shouldn’t find yourself struggling to come up with a hypothesis last minute before launching a test.\n\nMake it a habit to create a hypothesis when making any type of UX decisions on a website, regardless of whether you’re A/B testing or not. (Example: If we keep the load time below three seconds, users will have a higher probability of sticking around due to the load time tolerance of the average user.)\n\n<!-- <h2 id=\"good-ux\">A Good User Experience = Long Term Sustainability</h2> -->\n\n## A Good User Experience = Long Term Sustainability\n\nUser experience is at the heart of everything we do, and it’s not something that should be sacrificed to generate more leads. I’ve come across websites that completely destroy their user experience in order to generate a handful of more leads. Although this may produce more leads in the short term, bad UX leaves a bad impression on the user, which ends up producing long term brand damage and sacrificing usage/visits on your website. Not what you want.\n\nA/B testing is a very strong tactic, but it should only be one of the many in your toolbelt of user research and testing. Make the experience for your users an invisible one. Figure out [user-friendly alternatives](/article/exit-intent-popups/) for some of those more aggressive tactics.\n\n<!-- <h2 id=\"resources\">Some Tools &amp; Resources</h2> -->\n\n## Some Tools &amp; Resources\n\n- [Optimizely](https://www.optimizely.com/) - Preferred A/B testing platform (I’ve tried most)\n- [FullStory](https://www.fullstory.com) - Really awesome user recording tool\n- [HotJar](https://www.hotjar.com/) - All in one tool for heatmaps, user recordings, surveys, funnels, and more\n- [GoodUI.org](http://goodui.org/) - Great resource for testing ideas\n- [ConversionXL Blog](https://conversionxl.com/blog/) - In depth CRO related articles (they also run a top-notch [CRO conference](https://live.conversionxl.com/))\n- [Call To Action](https://unbounce.com/call-to-action-podcast/) - CRO focused podcast by Unbounce\n- [UIE.fm](https://uie.fm/) - A UX podcast network curated by the talented Jared Spool\n- [CRO/GDD Case Study](/article/conversion-rate-optimization-case-study/) - Article I wrote on one of the accounts I tested on\n- [Research-Driven Conversion Optimization](https://conversionxl.com/conversion-optimization/) - The data-driven conversion optimization guide by CXL\n- [Growth-Driven Design](http://www.growthdrivendesign.com/) - An approach to building websites with CRO and continuous improvement as a foundation\n",
        "type": "MarkdownRemark",
        "contentDigest": "9ccdeafdf358a1ab92375e06cd7e84f0",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "Lessons Learned After Running 300 A/B Tests on 20 Different Websites",
        "description": "Over the past 2 years I’ve dedicated part of my career to building a conversion rate optimization (CRO) team from the ground up. Here's what I've learned.",
        "tags": [
          "ABtest",
          "CRO"
        ],
        "lastmod": "2017-08-16T00:00:00.000Z",
        "date": "2017-08-16",
        "time": "5 Minutes",
        "categories": [
          "UX"
        ],
        "slug": "ab-testing-lessons-learned",
        "path": "/article/ab-testing-lessons-learned/",
        "images": [
          "assets/og-ab-testing-lessons-learned.jpg"
        ],
        "icon": "/assets/aico-ab-testing-lessons-learned.svg",
        "comments": false,
        "_PARENT": "799a225e-8fa2-5b39-8afd-0e98f0fee423"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nOver the past two years I’ve dedicated part of my career to building a conversion rate optimization (CRO) team from the ground up. During this time, we ran over 300 tests on over 20 different client and internal websites with traffic ranging from 1,000 to 1.5 million sessions a month. We hit some home runs, made plenty of mistakes, and learned a TON along the way.\n\nIn hopes of saving you a few headaches, I've curated a list of some of the most important lessons learned. Enjoy!\n\n(Related: Here’s a [conversion rate optimization case study](/article/conversion-rate-optimization-case-study/) on one of the websites we tested on.)\n\n<!-- <h3>Table of Contents</h3>\n\n<ol>\n\t<li><a href=\"#one-metric\" class=\"smooth-scroll\">Focus on One Metric</a></li>\n\t<li><a href=\"#not-just-one-metric\" class=\"smooth-scroll\">Okay But Don't Just Focus on One Metric...</a></li>\n\t<li><a href=\"#friction-points\" class=\"smooth-scroll\">Let Friction Points &amp; Your Main Metric Determine What You’re Testing</a></li>\n\t<li><a href=\"#mvv\" class=\"smooth-scroll\">Focus On a Minimum Viable Vision with Minimum Viable Tests</a></li>\n\t<li><a href=\"#reproduce-results\" class=\"smooth-scroll\">It’s Difficult to Reproduce Results</a></li>\n\t<li><a href=\"#design-principles\" class=\"smooth-scroll\">Good Aesthetics &amp; Solid Design Principles Don’t Always Win</a></li>\n\t<li><a href=\"#failing-tests\" class=\"smooth-scroll\">Failing Tests Are Still Wins</a></li>\n\t<li><a href=\"#secret-sauce-hypothesis\" class=\"smooth-scroll\">The Secret Sauce is a Strong Hypothesis</a></li>\n\t<li><a href=\"#good-ux\" class=\"smooth-scroll\">A Good User Experience = Long Term Sustainability</a></li>\n\t<li><a href=\"#resources\" class=\"smooth-scroll\">Tools &amp; Resources</a></li>\n</ol>\n\n -->\n<!-- <h2 id=\"one-metric\">Focus on One Metric</h2> -->\n\n## Focus on One Metric\n\nIn order to maintain a focused CRO strategy, you need to know what the most important metric is and make that your team’s priority. When we first started, there was a long list of metrics that we wanted to improve on; this resulted in an unchoreographed effort to test and improve everything. This approach didn't get us good results.\n\nIn order to focus our efforts and run effective tests, we were able to shorten our list to one metric: the amount of visitors that converted into a lead. We set up every test with that metric in mind. This helped us to avoid running expensive tests focused on vanity metrics. For example, we turned our focus away from increasing page visits (website engagement) to improving the user journey towards gated content (lead generation).\n\n<figure>\n\t<img src=\"/assets/google-data-studio-chart.jpg\" alt=\"Google Data Studio Chart\" class=\"img-border\">\n\t<figcaption>Google Data Studio Chart</figcaption>\n</figure>\n\n<!-- <h2 id=\"not-just-one-metric\">Okay But Don't Just Focus on One Metric...</h2> -->\n\n## Okay But Don't Just Focus on One Metric...\n\nHear me out. Yes, you need one main metric to be your team's priority. But that primary metric has supporting metrics that determine how well it will perform.\n\nAt an individual test level, you need to make sure you're keeping an eye on other metrics that determine the success of your main metric or that affect a different and important part of the business/website. Even if you don't believe they're directly correlated (they probably are).\n\nEarly in my testing career, I ran a test where I was able to increase RFI submissions by 6%. From my perspective, that was a pretty solid result that should have improved the company’s bottom line. However, a month later the client came back to tell us that it was the lowest sales month they’ve had in a few years. I then realized that the same test that increased RFIs decreased product catalog downloads — the main source of lead generation for their sales team — by 24%.\n\nEver since that debacle, I’ve made sure to include the website’s vital metrics as goals for any test I setup. While you may think you're scoring big wins, you may be affecting other vital metrics in a not so awesome way. I suggest you keep an eye out for this, especially when running tests to leading metrics.\n\n<!-- <h2 id=\"friction-points\">Let Friction Points &amp; Your Main Metric Determine What You’re Testing</h2> -->\n\n## Let Friction Points &amp; Your Main Metric Determine What You’re Testing\n\nYou need a game plan. Instead of choosing random things to test, start by identifying the friction points of the website you believe will have the biggest impact on your main metric.\n\nGet cozy with Google Analytics. Set up goals that will help you keep track of all the important actions someone could take on your website (landing page views, form submissions, etc) as well as all the bad stuff that could happen (404 page views, form error messages, etc).\n\nOnce these goals are in place, set up individual segments of users that triggered the respective goals and analyze the hell out of it. You can compare segments of users that triggered a bad goal vs all users and see how these convert on the good goals. (I hope I didn’t lose you — [this guide](https://conversionxl.com/conversion-optimization/google-analytics-for-conversion-optimization/) does a way better job of explaining this than I did.)\n\nPlay around with Google Analytics' Behavior Flow tool. Set up a segment of your audience that has triggered your primary goal and see the path that was taken to get there. Look for pages with huge drop-offs and investigate.\n\n<figure>\n\t<img src=\"/assets/google-analytics-behavior-flow.jpg\" alt=\"Google Analytics Behavior Flow\" class=\"img-border\">\n\t<figcaption>Google Analytics Behavior Flow</figcaption>\n</figure>\n\nYou can also use a user recording tool like [FullStory](https://www.fullstory.com/) that let’s you see which user sessions have a high rate of rage, error, and dead clicks.\n\nWhichever the method you may use, focusing on user frustration will help you address low hanging fruit first and give you a clear path of what you should be focusing on.\n\n<!-- <h2 id=\"mvv\">Focus On a Minimum Viable Vision with Minimum Viable Tests</h2> -->\n\n## Focus On a Minimum Viable Vision with Minimum Viable Tests\n\nA test that takes a minimum amount of time to implement that produces a huge increase in conversions is the nirvana for any CRO team. This is usually not the case, but it should always be the mindset. This helps with testing velocity and quickly proving/disproving hypotheses without the expensive overhead.\n\nTest the minimum version of your idea instead and build from there. Design isn’t magic and because an idea worked for one website doesn’t mean it’ll work for yours. Which brings me to my next point...\n\n<!-- <h2 id=\"reproduce-results\">It’s Difficult to Reproduce Results</h2> -->\n\n## It’s Difficult to Reproduce Results\n\nJust because you achieved statistical significance on a certain test doesn’t mean that it’s a pattern that will work everywhere. My team ran a test that increased conversion rates on a landing page by 76% — only to have the same test decrease conversions for a different client and test inconclusive for another.\n\nThere are a handful of different variables, some obvious and some not, that are present with every test and have a big impact on the outcome (audience, traffic source, content, goals, etc); the goal with an A/B test is to change one of these variables with hopes of producing positive results.\n\nWhat most people don’t take into consideration is the relationship between these elements and how they indirectly affect each other. In the example above, we came to the conclusion that forms with a clear headline had a better chance of improving conversions than those that don’t — but the answer is usually not as straightforward.\n\nThe folks over at GoodUI.org focus most of their energy on figuring out which are the [winning tests that you can easily reproduce](http://www.goodui.org/evidence/).\n\n<!-- <h2 id=\"design-principles\">Good Aesthetics &amp; Solid Design Principles Don’t Always Win</h2> -->\n\n## Good Aesthetics &amp; Solid Design Principles Don’t Always Win\n\nWe recently had a debate on a hero image test. The solution proposed by my team was one that I wasn’t in line with. Not only were they going against the basic graphic design principle of balance, they were also doing it in a distasteful way (in my opinion).\n\n(I would show you the variations of the website but I’m going to respect the client's NDA.)\n\nI was 100% sure that my experience and background in design would prove my theory. The test had a 66% increase on leads generated just by switching that darn image. I swallowed my pride and learned to put my opinion aside.\n\n<!-- <h2 id=\"failing-tests\">Failing Tests Are Still Wins</h2> -->\n\n## Failing Tests Are Still Wins\n\nNot all tests you run are going to be home runs, the reality is that a handful of your tests will fail. Don’t let this turn into time wasted, analyze the hell out of the test, understand why it failed, and store it for reference. You will be referencing this in the future.\n\nIf none of your tests are failing, chances are only a few of them (if any) are home runs. Stop being so risk-averse.\n\n(Keep in mind that I’m referring to failed tests due to uncertainty and not mistakes. This is the difference between low conversions on a form due to the specific form fields used — uncertainty — and zero conversions on a form due to a broken submit button — mistakes.)\n\n<figure>\n\t<img src=\"/assets/ab-failed-test-optimizely.jpg\" alt=\"Optimizely Failed Test\" class=\"img-border\">\n\t<figcaption>Failed Test on Optimizely</figcaption>\n</figure>\n\n<!-- <h2 id=\"secret-sauce-hypothesis\">The Secret Sauce is a Strong Hypothesis</h2> -->\n\n## The Secret Sauce is a Strong Hypothesis\n\nThis helps to make sure there’s merit to what’s being tested. The hypothesis should dictate what you test and not the other way around — you shouldn’t find yourself struggling to come up with a hypothesis last minute before launching a test.\n\nMake it a habit to create a hypothesis when making any type of UX decisions on a website, regardless of whether you’re A/B testing or not. (Example: If we keep the load time below three seconds, users will have a higher probability of sticking around due to the load time tolerance of the average user.)\n\n<!-- <h2 id=\"good-ux\">A Good User Experience = Long Term Sustainability</h2> -->\n\n## A Good User Experience = Long Term Sustainability\n\nUser experience is at the heart of everything we do, and it’s not something that should be sacrificed to generate more leads. I’ve come across websites that completely destroy their user experience in order to generate a handful of more leads. Although this may produce more leads in the short term, bad UX leaves a bad impression on the user, which ends up producing long term brand damage and sacrificing usage/visits on your website. Not what you want.\n\nA/B testing is a very strong tactic, but it should only be one of the many in your toolbelt of user research and testing. Make the experience for your users an invisible one. Figure out [user-friendly alternatives](/article/exit-intent-popups/) for some of those more aggressive tactics.\n\n<!-- <h2 id=\"resources\">Some Tools &amp; Resources</h2> -->\n\n## Some Tools &amp; Resources\n\n- [Optimizely](https://www.optimizely.com/) - Preferred A/B testing platform (I’ve tried most)\n- [FullStory](https://www.fullstory.com) - Really awesome user recording tool\n- [HotJar](https://www.hotjar.com/) - All in one tool for heatmaps, user recordings, surveys, funnels, and more\n- [GoodUI.org](http://goodui.org/) - Great resource for testing ideas\n- [ConversionXL Blog](https://conversionxl.com/blog/) - In depth CRO related articles (they also run a top-notch [CRO conference](https://live.conversionxl.com/))\n- [Call To Action](https://unbounce.com/call-to-action-podcast/) - CRO focused podcast by Unbounce\n- [UIE.fm](https://uie.fm/) - A UX podcast network curated by the talented Jared Spool\n- [CRO/GDD Case Study](/article/conversion-rate-optimization-case-study/) - Article I wrote on one of the accounts I tested on\n- [Research-Driven Conversion Optimization](https://conversionxl.com/conversion-optimization/) - The data-driven conversion optimization guide by CXL\n- [Growth-Driven Design](http://www.growthdrivendesign.com/) - An approach to building websites with CRO and continuous improvement as a foundation\n",
      "fileAbsolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2017-08-16-lessons-learned-after-200-ab-tests-on-20-websites.md"
    },
    "656c4525-4f6d-574f-a1b5-c54eea5b62ed": {
      "id": "656c4525-4f6d-574f-a1b5-c54eea5b62ed",
      "children": [],
      "parent": "7a5a9d6d-4b46-5d78-85d2-28c35f37c4da",
      "internal": {
        "content": "\nLast month we launched the redesign of [Thomasnet.com](https://www.thomasnet.com) — the backbone of the American manufacturing industry (and the company that happens to employ me full-time). A redesign in which we decided to go all-in with CSS Grid.\n\nThis is a website that in January alone received 100k+ visitors on Internet Explorer 11 — the main culprit of browsers without CSS Grid support.\n\nThe fact that CSS Grid is ready to use in production isn't <i>really</i> a secret — Rachel Andrew has been [telling us this since July of 2017](https://rachelandrew.co.uk/archives/2017/07/04/is-it-really-safe-to-start-using-css-grid-layout/). She’s even curated a [list of websites using CSS Grid in production today](https://cssgrid.design/).\n\nFrom team buy-in to fallbacks, here's the approach we took at Thomas with the implementation of CSS Grid.\n\n<!-- <h3>Table of Contents</h3>\n\n<ol>\n\t<li><a href=\"#why-css-grid\" class=\"smooth-scroll\">A quick primer on CSS Grid</a></li>\n\t<li><a href=\"#team-buy-in\" class=\"smooth-scroll\">Our Grid “aha” moment</a></li>\n    <li><a href=\"#css-grid-flexbox\" class=\"smooth-scroll\">Resolving the CSS Grid vs. Flexbox argument</a></li>\n\t<li><a href=\"#css-grid-foundation\" class=\"smooth-scroll\">Laying the Grid foundation</a></li>\n\t<li><a href=\"#css-grid-fallbacks\" class=\"smooth-scroll\">Fallbacks for browsers without support</a></li>\n\n\n\t<li><a href=\"#conclusion\" class=\"smooth-scroll\">To conclude</a></li>\n\n</ol> -->\n\n<!-- <h2 id=\"why-css-grid\">A quick primer on CSS Grid</h2> -->\n\n## A quick primer on CSS Grid\n\n(For all you know-it-alls, <a href=\"#team-buy-in\" class=\"smooth-scroll\">feel free to skip</a> the baseline knowledge stuff.)\n\nCSS Grid is a spec that standardizes the approach to layouts on the web — a spec which has been seven years in the making. It's a HUGE step forward for design on the web.\n\nIronically enough, [CSS Grid was originally proposed by Microsoft](https://blogs.msdn.microsoft.com/ie/2011/04/14/ie10-platform-preview-and-css-features-for-adaptive-layouts/) back in April of 2011.\n\nThe unprefixed version of the spec was first made available in Firefox, Chrome, and Safari on March of 2017. On October 16 2017, Microsoft finally released Edge 16 with full support — making this the day CSS Grid Layout was officially adopted by all major browsers (I warned you of the irony).\n\nDeciding on CSS Grid was pretty simple: We wanted to build a future-proof site with a lean front-end design foundation, aiming to leverage browser-native technology where possible in order to keep performance and efficiency at the forefront.\n\nI won't bore you with any additional details here, plenty has been written on the web explaining the [benefits of CSS Grid over existing solutions](https://hackernoon.com/how-css-grid-beats-bootstrap-85d5881cf163).\n\n<!-- <h2 id=\"team-buy-in\">Our CSS Grid “aha” moment</h2> -->\n\n## Our CSS Grid “aha” moment\n\nInitially, it was a difficult to get buy-in knowing that the spec had been available in major browsers for only a handful of months. It also didn't help that we had already chosen Bootstrap as our foundational framework — one that already comes packaged with a widely adopted grid system based on Flexbox.\n\nThe “aha” moment came when we were putting together the following component that required a change in the markup order for the alternating variation:\n\n<figure><video width=\"100%\" height=\"auto\" controls>\n  <source src=\"/assets/css-grid-template-areas.mp4\" type=\"video/mp4\">\n  Your browser does not support the video tag.\n</video>\n\n<figcaption><a href=\"https://www.thomasnet.com/network/\" target=\"_blank\">Simple example</a> of Grid Template Areas which won the team over</figcaption></figure>\n\nIt's not a groundbreaking design pattern, but keeping the markup consistent while alternating the design was crucial to the scalability and efficiency of the component-based design system we were putting together.\n\n[Grid Template Areas](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-areas) — the feature that will convince most Flexbox fanatics that Grid is the superior layout approach (more on Grid vs. Flexbox further below). The ability to switch the order of elements without touching markup or implementing any JS wizardry immediately won the team over and made CSS Grid a no-brainer.\n\n(P.S. I'm sure you would've been able to recreate the same alternating set of patterns without making changes to the markup using only floats in 1.5 lines of code while typing blindfolded — I get it; you're a ninja. But this happened to be the example that worked for us.)\n\n<!-- <h2 id=\"css-grid-flexbox\">Resolving the CSS Grid vs. Flexbox argument</h2> -->\n\n## Resolving the CSS Grid vs. Flexbox argument\n\nWhen we began looking into CSS Grid, the same question surfaced over and over again:\n\n<blockquote class=\"text-aligncenter\">\n  <p>Can't you just do this with Flexbox?</p>\n  <cite>Every single developer on the team</cite>\n</blockquote>\n\nYes and no. At a basic level:\n\n- Flexbox allows you to setup rules in a single dimension, meaning you have to choose either rows or columns but not both.\n- CSS Grid on the other hand is two-dimensional, allowing you to simultaneously address both rows and columns in addition to providing a deeper set of rules specifically designed for layouts.\n\n(And as I mentioned above, CSS Grid has Grid Template Areas, which is the reason most developers I've spoken to have adopted Grid.)\n\nInstead of choosing one over the other, we agreed to use CSS Grid at the layout level and Flexbox at the component level (arranging child items of components). Although there's some overlap and in some cases both could be used interchangeably, abiding by this rule helped us avoid any confusion in gray areas.\n\nNow that the team was on board and different use cases were addressed, it was time to get to work and figure out how to we wanted to implement and scale CSS Grid.\n\n<!-- <h2 id=\"css-grid-foundation\">Laying the CSS Grid foundation</h2> -->\n\n## Laying the CSS Grid foundation\n\nWith five developers working simultaneously on the front-end of the website and an aggressive three month deadline, our foundation had to be spot on in order maintain a fast-paced coordinated effort.\n\n<h3>Sass mixin</h3>\n\nWe created a simple Sass mixin that would help us keep a consistent gutter across all instances of the grid.\n\n<pre class=\"language-markup\"><code>@mixin display-grid {\n    display: grid;\n    grid-template-rows: auto;\n    grid-gap: 1.5em;   \n}</code></pre>\n\nWe would include this mixin it at the container level of the sections we wanted to include to use grid on:\n\n<pre class=\"language-markup\"><code>.container {\n     @include display-grid;\n     grid-template-columns: repeat(2, 1fr);\n}</code></pre>\n\nHere's an example with breakpoints:\n\n<pre class=\"language-markup\"><code>.container {\n    @include media-breakpoint-up(md) {\n        @include display-grid;\n        grid-template-columns: repeat(2, 1fr);\n    }\n    @include media-breakpoint-up(lg) {\n        grid-template-columns: repeat(4, 1fr);\n    }\n}</code></pre>\n\nThat's it. No bloated dependencies, everything is in the browser.\n\n<h3>Reusable classes</h3>\n\nIn efforts to maintain a DRY approach, we created column classes that allowed us to easily apply grid rules to any container.\n\n<pre class=\"language-markup\"><code>%grid-helpers-base {\n    @include media-breakpoint-up(md) {\n        @include display-grid;\n        grid-template-columns: 1fr;\n    }\n}\n.cols-2 {\n    @extend %grid-helpers-base;\n    @include media-breakpoint-up(md) {\n        grid-template-columns: repeat(2, 1fr);\n    }\n}\n.cols-3 {\n    @extend %grid-helpers-base;\n    @include media-breakpoint-up(md) {\n        grid-template-columns: repeat(3, 1fr);\n    }\n}\n.cols-4 {\n    @extend %grid-helpers-base;\n    @include media-breakpoint-up(md) {\n        grid-template-columns: repeat(4, 1fr);\n    }\n}\n.cols-auto-fit {\n    @extend %grid-helpers-base;\n    @include media-breakpoint-up(md) {\n        grid-template-columns: repeat(auto-fit, minmax(15.625em, 1fr));\n    }\n}</code></pre>\n\nThis helped us out in about 75% of scenarios. For the rest we created custom CSS on a per layout basis.\n\n<!-- <h2 id=\"css-grid-fallbacks\">Fallbacks for browsers without support</h2> -->\n\n## Fallbacks for browsers without support\n\nWe decided not to make layouts identical in legacy browsers as this would only double our work. In some of the fancier layouts we put together, we defaulted to a standard two-column layout as a fallback. We've come to notice that as long as the website is usable and the experience isn't broken, users in legacy browsers don't really mind not being served the latest and greatest version of the layout.\n\n[Modernizr](https://modernizr.com/) was our fallback approach of choice — we found this to be the best option because we were able to cleanly separate fallback code from our base.\n\nWhen CSS Grid is not available, Modernizr adds <code>.no-cssgrid</code> to the <code>html</code> tag of the page. This allowed us to write nested rules of simple floats with percentages for browsers without support.\n\n<pre class=\"language-markup\"><code>.no-cssgrid {\n    .cols-2 {\n        @include media-breakpoint-up(md) {\n            >* {\n                width: 50%;\n                padding-right: $baseline*3;\n                float: left;\n                margin-bottom: $baseline*3;\n            }\n        }\n    }\n    .cols-3 {\n        @include media-breakpoint-up(md) {\n            >* {\n                width: 33.3%;\n                padding-right: $baseline*3;\n                float: left;\n                margin-bottom: $baseline*3;\n            }\n        }\n    }\n    .cols-4 {\n        @include media-breakpoint-up(md) {\n            >* {\n                width: 25%;\n                padding-right: $baseline*3;\n                float: left;\n                margin-bottom: $baseline*3;\n            }\n        }\n    }\n    .cols-auto-fit {\n        @include media-breakpoint-up(md) {\n            text-align: center;\n            >* {\n                min-width: 15.625em;\n                padding-right: $baseline*3;\n                display: inline-block;\n                margin-bottom: $baseline*3;\n            }\n        }\n    }\n}</code></pre>\n\nWe kept this simple by setting the limit to one set of rules in medium viewport sizes and up.\n\nAt the time of writing, the mobile agent Google uses to perform their [mobile-friendly test](https://search.google.com/test/mobile-friendly) does not support Grid — adding fallbacks without media queries returned all of our pages as “not mobile-friendly.\" (We learned this the hard way.)\n\nWe chose not to go the [Feature Query](https://hacks.mozilla.org/2016/08/using-feature-queries-in-css/) route since this lacks support in older browsers including IE11 and adding a fallback to a fallback defeats the purpose of the feature.\n\nIn the case of CSS Grid, rules that are added won't have any effect in browsers that don't have support.\n\nThere are some fallback methods that suggest adding floats within the same code as CSS Grid without using Modernizr. I'm not a fan of this approach since it mixes fallback code with the rest of your code, which makes it difficult for any developer to pick up and understand what's going on.\n\n<!-- <h2 id=\"conclusion\">To conclude</h2> -->\n\n## To conclude\n\nRisk aversion is a big part of what holds decision-makers back from adopting any new technology or features at larger scale. We need to make sure that decisions made on technology are efficient and maintainable, and they won't put the organization at risk by tanking important metrics.\n\nIn the weeks since launching the website, maintenance has been smooth and key metrics of the website for users on IE11 and other legacy browsers have surprisingly gone up. Is CSS Grid ready for production? I'll leave that up to you to decide.\n\nCSS Grid provides a standardized approach to layouts on the web, and we should celebrate this.\n\n<!-- <h2>Resources</h2> -->\n\n## Resources\n\n- [Learn CSS Grid](http://jensimmons.com/post/feb-27-2017/learn-css-grid) - A good primer article by Jen Simmons with a ton of resources\n- [Grid By Example](https://gridbyexample.com/) - Examples, patterns, and resources - the hub for everything CSS Grid related\n- [A Complete Guide to Grid](https://css-tricks.com/snippets/css/complete-guide-grid/) - My cheat sheet for CSS Grid\n- [Using CSS Grid: Supporting Browsers Without Grid](https://www.smashingmagazine.com/2017/11/css-grid-supporting-browsers-without-grid/) - Thorough Article by Rachel Andrew on CSS Grid fallbacks\n- [The New CSS Layout (Book)](https://abookapart.com/products/the-new-css-layout) - Book written by Rachel Andrew (part of the A Book Apart series)\n- [Can I Use CSS Grid Layout](https://caniuse.com/#feat=css-grid) - Browser support for CSS Grid globally is at 82% at the time of writing\n\nA very special thanks to [Jen Simmons](http://jensimmons.com) and [Rachel Andrew](https://rachelandrew.co.uk) for providing the resources and spearheading the CSS Grid movement over the past seven years — they’re the reason this article was able to come together.\n",
        "type": "MarkdownRemark",
        "contentDigest": "fd5c6d3c08b4bb6e912d39453393cbe1",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "How We Adopted CSS Grid at Scale",
        "description": "From team buy-in to fallbacks, here's the approach we took at Thomas with the implementation of CSS Grid.",
        "tags": [
          "CSS",
          "CSSGrid"
        ],
        "lastmod": "2018-03-01T00:00:00.000Z",
        "date": "2018-03-01",
        "time": "5 Minutes",
        "categories": [
          "Development"
        ],
        "slug": "css-grid-at-scale",
        "path": "/article/css-grid-at-scale/",
        "images": [
          "assets/og-css-grid-at-scale.jpg"
        ],
        "icon": "/assets/aico-css-grid-at-scale.svg",
        "comments": false,
        "_PARENT": "7a5a9d6d-4b46-5d78-85d2-28c35f37c4da"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nLast month we launched the redesign of [Thomasnet.com](https://www.thomasnet.com) — the backbone of the American manufacturing industry (and the company that happens to employ me full-time). A redesign in which we decided to go all-in with CSS Grid.\n\nThis is a website that in January alone received 100k+ visitors on Internet Explorer 11 — the main culprit of browsers without CSS Grid support.\n\nThe fact that CSS Grid is ready to use in production isn't <i>really</i> a secret — Rachel Andrew has been [telling us this since July of 2017](https://rachelandrew.co.uk/archives/2017/07/04/is-it-really-safe-to-start-using-css-grid-layout/). She’s even curated a [list of websites using CSS Grid in production today](https://cssgrid.design/).\n\nFrom team buy-in to fallbacks, here's the approach we took at Thomas with the implementation of CSS Grid.\n\n<!-- <h3>Table of Contents</h3>\n\n<ol>\n\t<li><a href=\"#why-css-grid\" class=\"smooth-scroll\">A quick primer on CSS Grid</a></li>\n\t<li><a href=\"#team-buy-in\" class=\"smooth-scroll\">Our Grid “aha” moment</a></li>\n    <li><a href=\"#css-grid-flexbox\" class=\"smooth-scroll\">Resolving the CSS Grid vs. Flexbox argument</a></li>\n\t<li><a href=\"#css-grid-foundation\" class=\"smooth-scroll\">Laying the Grid foundation</a></li>\n\t<li><a href=\"#css-grid-fallbacks\" class=\"smooth-scroll\">Fallbacks for browsers without support</a></li>\n\n\n\t<li><a href=\"#conclusion\" class=\"smooth-scroll\">To conclude</a></li>\n\n</ol> -->\n\n<!-- <h2 id=\"why-css-grid\">A quick primer on CSS Grid</h2> -->\n\n## A quick primer on CSS Grid\n\n(For all you know-it-alls, <a href=\"#team-buy-in\" class=\"smooth-scroll\">feel free to skip</a> the baseline knowledge stuff.)\n\nCSS Grid is a spec that standardizes the approach to layouts on the web — a spec which has been seven years in the making. It's a HUGE step forward for design on the web.\n\nIronically enough, [CSS Grid was originally proposed by Microsoft](https://blogs.msdn.microsoft.com/ie/2011/04/14/ie10-platform-preview-and-css-features-for-adaptive-layouts/) back in April of 2011.\n\nThe unprefixed version of the spec was first made available in Firefox, Chrome, and Safari on March of 2017. On October 16 2017, Microsoft finally released Edge 16 with full support — making this the day CSS Grid Layout was officially adopted by all major browsers (I warned you of the irony).\n\nDeciding on CSS Grid was pretty simple: We wanted to build a future-proof site with a lean front-end design foundation, aiming to leverage browser-native technology where possible in order to keep performance and efficiency at the forefront.\n\nI won't bore you with any additional details here, plenty has been written on the web explaining the [benefits of CSS Grid over existing solutions](https://hackernoon.com/how-css-grid-beats-bootstrap-85d5881cf163).\n\n<!-- <h2 id=\"team-buy-in\">Our CSS Grid “aha” moment</h2> -->\n\n## Our CSS Grid “aha” moment\n\nInitially, it was a difficult to get buy-in knowing that the spec had been available in major browsers for only a handful of months. It also didn't help that we had already chosen Bootstrap as our foundational framework — one that already comes packaged with a widely adopted grid system based on Flexbox.\n\nThe “aha” moment came when we were putting together the following component that required a change in the markup order for the alternating variation:\n\n<figure><video width=\"100%\" height=\"auto\" controls>\n  <source src=\"/assets/css-grid-template-areas.mp4\" type=\"video/mp4\">\n  Your browser does not support the video tag.\n</video>\n\n<figcaption><a href=\"https://www.thomasnet.com/network/\" target=\"_blank\">Simple example</a> of Grid Template Areas which won the team over</figcaption></figure>\n\nIt's not a groundbreaking design pattern, but keeping the markup consistent while alternating the design was crucial to the scalability and efficiency of the component-based design system we were putting together.\n\n[Grid Template Areas](https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-areas) — the feature that will convince most Flexbox fanatics that Grid is the superior layout approach (more on Grid vs. Flexbox further below). The ability to switch the order of elements without touching markup or implementing any JS wizardry immediately won the team over and made CSS Grid a no-brainer.\n\n(P.S. I'm sure you would've been able to recreate the same alternating set of patterns without making changes to the markup using only floats in 1.5 lines of code while typing blindfolded — I get it; you're a ninja. But this happened to be the example that worked for us.)\n\n<!-- <h2 id=\"css-grid-flexbox\">Resolving the CSS Grid vs. Flexbox argument</h2> -->\n\n## Resolving the CSS Grid vs. Flexbox argument\n\nWhen we began looking into CSS Grid, the same question surfaced over and over again:\n\n<blockquote class=\"text-aligncenter\">\n  <p>Can't you just do this with Flexbox?</p>\n  <cite>Every single developer on the team</cite>\n</blockquote>\n\nYes and no. At a basic level:\n\n- Flexbox allows you to setup rules in a single dimension, meaning you have to choose either rows or columns but not both.\n- CSS Grid on the other hand is two-dimensional, allowing you to simultaneously address both rows and columns in addition to providing a deeper set of rules specifically designed for layouts.\n\n(And as I mentioned above, CSS Grid has Grid Template Areas, which is the reason most developers I've spoken to have adopted Grid.)\n\nInstead of choosing one over the other, we agreed to use CSS Grid at the layout level and Flexbox at the component level (arranging child items of components). Although there's some overlap and in some cases both could be used interchangeably, abiding by this rule helped us avoid any confusion in gray areas.\n\nNow that the team was on board and different use cases were addressed, it was time to get to work and figure out how to we wanted to implement and scale CSS Grid.\n\n<!-- <h2 id=\"css-grid-foundation\">Laying the CSS Grid foundation</h2> -->\n\n## Laying the CSS Grid foundation\n\nWith five developers working simultaneously on the front-end of the website and an aggressive three month deadline, our foundation had to be spot on in order maintain a fast-paced coordinated effort.\n\n<h3>Sass mixin</h3>\n\nWe created a simple Sass mixin that would help us keep a consistent gutter across all instances of the grid.\n\n<pre class=\"language-markup\"><code>@mixin display-grid {\n    display: grid;\n    grid-template-rows: auto;\n    grid-gap: 1.5em;   \n}</code></pre>\n\nWe would include this mixin it at the container level of the sections we wanted to include to use grid on:\n\n<pre class=\"language-markup\"><code>.container {\n     @include display-grid;\n     grid-template-columns: repeat(2, 1fr);\n}</code></pre>\n\nHere's an example with breakpoints:\n\n<pre class=\"language-markup\"><code>.container {\n    @include media-breakpoint-up(md) {\n        @include display-grid;\n        grid-template-columns: repeat(2, 1fr);\n    }\n    @include media-breakpoint-up(lg) {\n        grid-template-columns: repeat(4, 1fr);\n    }\n}</code></pre>\n\nThat's it. No bloated dependencies, everything is in the browser.\n\n<h3>Reusable classes</h3>\n\nIn efforts to maintain a DRY approach, we created column classes that allowed us to easily apply grid rules to any container.\n\n<pre class=\"language-markup\"><code>%grid-helpers-base {\n    @include media-breakpoint-up(md) {\n        @include display-grid;\n        grid-template-columns: 1fr;\n    }\n}\n.cols-2 {\n    @extend %grid-helpers-base;\n    @include media-breakpoint-up(md) {\n        grid-template-columns: repeat(2, 1fr);\n    }\n}\n.cols-3 {\n    @extend %grid-helpers-base;\n    @include media-breakpoint-up(md) {\n        grid-template-columns: repeat(3, 1fr);\n    }\n}\n.cols-4 {\n    @extend %grid-helpers-base;\n    @include media-breakpoint-up(md) {\n        grid-template-columns: repeat(4, 1fr);\n    }\n}\n.cols-auto-fit {\n    @extend %grid-helpers-base;\n    @include media-breakpoint-up(md) {\n        grid-template-columns: repeat(auto-fit, minmax(15.625em, 1fr));\n    }\n}</code></pre>\n\nThis helped us out in about 75% of scenarios. For the rest we created custom CSS on a per layout basis.\n\n<!-- <h2 id=\"css-grid-fallbacks\">Fallbacks for browsers without support</h2> -->\n\n## Fallbacks for browsers without support\n\nWe decided not to make layouts identical in legacy browsers as this would only double our work. In some of the fancier layouts we put together, we defaulted to a standard two-column layout as a fallback. We've come to notice that as long as the website is usable and the experience isn't broken, users in legacy browsers don't really mind not being served the latest and greatest version of the layout.\n\n[Modernizr](https://modernizr.com/) was our fallback approach of choice — we found this to be the best option because we were able to cleanly separate fallback code from our base.\n\nWhen CSS Grid is not available, Modernizr adds <code>.no-cssgrid</code> to the <code>html</code> tag of the page. This allowed us to write nested rules of simple floats with percentages for browsers without support.\n\n<pre class=\"language-markup\"><code>.no-cssgrid {\n    .cols-2 {\n        @include media-breakpoint-up(md) {\n            >* {\n                width: 50%;\n                padding-right: $baseline*3;\n                float: left;\n                margin-bottom: $baseline*3;\n            }\n        }\n    }\n    .cols-3 {\n        @include media-breakpoint-up(md) {\n            >* {\n                width: 33.3%;\n                padding-right: $baseline*3;\n                float: left;\n                margin-bottom: $baseline*3;\n            }\n        }\n    }\n    .cols-4 {\n        @include media-breakpoint-up(md) {\n            >* {\n                width: 25%;\n                padding-right: $baseline*3;\n                float: left;\n                margin-bottom: $baseline*3;\n            }\n        }\n    }\n    .cols-auto-fit {\n        @include media-breakpoint-up(md) {\n            text-align: center;\n            >* {\n                min-width: 15.625em;\n                padding-right: $baseline*3;\n                display: inline-block;\n                margin-bottom: $baseline*3;\n            }\n        }\n    }\n}</code></pre>\n\nWe kept this simple by setting the limit to one set of rules in medium viewport sizes and up.\n\nAt the time of writing, the mobile agent Google uses to perform their [mobile-friendly test](https://search.google.com/test/mobile-friendly) does not support Grid — adding fallbacks without media queries returned all of our pages as “not mobile-friendly.\" (We learned this the hard way.)\n\nWe chose not to go the [Feature Query](https://hacks.mozilla.org/2016/08/using-feature-queries-in-css/) route since this lacks support in older browsers including IE11 and adding a fallback to a fallback defeats the purpose of the feature.\n\nIn the case of CSS Grid, rules that are added won't have any effect in browsers that don't have support.\n\nThere are some fallback methods that suggest adding floats within the same code as CSS Grid without using Modernizr. I'm not a fan of this approach since it mixes fallback code with the rest of your code, which makes it difficult for any developer to pick up and understand what's going on.\n\n<!-- <h2 id=\"conclusion\">To conclude</h2> -->\n\n## To conclude\n\nRisk aversion is a big part of what holds decision-makers back from adopting any new technology or features at larger scale. We need to make sure that decisions made on technology are efficient and maintainable, and they won't put the organization at risk by tanking important metrics.\n\nIn the weeks since launching the website, maintenance has been smooth and key metrics of the website for users on IE11 and other legacy browsers have surprisingly gone up. Is CSS Grid ready for production? I'll leave that up to you to decide.\n\nCSS Grid provides a standardized approach to layouts on the web, and we should celebrate this.\n\n<!-- <h2>Resources</h2> -->\n\n## Resources\n\n- [Learn CSS Grid](http://jensimmons.com/post/feb-27-2017/learn-css-grid) - A good primer article by Jen Simmons with a ton of resources\n- [Grid By Example](https://gridbyexample.com/) - Examples, patterns, and resources - the hub for everything CSS Grid related\n- [A Complete Guide to Grid](https://css-tricks.com/snippets/css/complete-guide-grid/) - My cheat sheet for CSS Grid\n- [Using CSS Grid: Supporting Browsers Without Grid](https://www.smashingmagazine.com/2017/11/css-grid-supporting-browsers-without-grid/) - Thorough Article by Rachel Andrew on CSS Grid fallbacks\n- [The New CSS Layout (Book)](https://abookapart.com/products/the-new-css-layout) - Book written by Rachel Andrew (part of the A Book Apart series)\n- [Can I Use CSS Grid Layout](https://caniuse.com/#feat=css-grid) - Browser support for CSS Grid globally is at 82% at the time of writing\n\nA very special thanks to [Jen Simmons](http://jensimmons.com) and [Rachel Andrew](https://rachelandrew.co.uk) for providing the resources and spearheading the CSS Grid movement over the past seven years — they’re the reason this article was able to come together.\n",
      "fileAbsolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2018-02-18-css-grid-ready-for-production.md"
    },
    "2acf5ef5-8c6f-569b-836b-b5c43ad8525a": {
      "id": "2acf5ef5-8c6f-569b-836b-b5c43ad8525a",
      "children": [],
      "parent": "b070e167-0c0f-5084-9b74-65939791d129",
      "internal": {
        "content": "\nIf you’ve read any of my other articles, it's pretty obvious that I’m obsessed with design, performance, and iterative A/B testing.\n\nFor the past year, I’ve taken a deep dive into server-side split testing, and I’ll be honest, the obsession is real. A server-side split test is an A/B testing technique where the changes and traffic allocations of any given test take place at the server level before the web page is delivered to the browser.\n\nWhat makes this approach attractive are the huge performance gains and the user experience improvements when implemented correctly. Below I’ll run you through some of my findings as well as how to go about setting up your own testing stack.\n\n(Looking for more on A/B testing? Here's an article I wrote recently on [what I've learned throughout my years of A/B testing](/article/ab-testing-lessons-learned/).)\n\n## The Problem with Client-Side Split Testing\n\nTraditional client-side A/B testing works by including a snippet of JS at the head of your website. This snippet is supposed to load before anything else on the page does in order to carry out the correct DOM changes of the test at hand.\n\nI have two major issues with this:\n\n1. The entire library of third-party JS is supposed to load before the changes of your test take place, which causes page elements to “blink” and jump around while the rest of the test loads. You can always block the page from displaying before the respective client-side JS snippet is loaded to avoid the blink, but this adds 2 to 3 seconds of load time to your page. I’ve seen cases where website traffic has tanked due to the misuse of this — so don’t do it.\n2. The original version of the page and its respective assets will always load. That’s right, if you’re testing removing images from a blog post, these images will always load on the variation where you’ve removed them (given the scenario that you’re removing and not adding them).\n\nHere’s what happens when I set up a client-side test to remove all images from one of my articles:\n\n<figure style=\"max-width:30em;\"><video width=\"100%\" height=\"auto\" controls>\n  <source src=\"/assets/client-side-split-testing.mp4\" type=\"video/mp4\">\n  Your browser does not support the video tag.\n</video>\n\n<figcaption class=\"text-aligncenter\"><a href=\"https://www.webpagetest.org/result/180811_RB_8cd743453a4b4fd83c44ba91431f26e2/\" target=\"_blank\">Client-side performance results from Webpagetest.org </a></figcaption></figure>\n\nAs you can see, for a brief moment, before the test’s JS loads, the images are visible to the user. This doesn’t bother me due to my OCD regarding aesthetics — this bothers me because it directly affects the results of tests (but the OCD part plays a big role). In this situation, the user’s focus will now be on “Where did the image go?” and most likely dismissing the page as broken once they’re unable to locate it.\n\n## How Server-Side Split Testing Solves This\n\nThe difference between server-side and client side split-testing is where the changes take place and the performance effect it has on the end user. Instead of downloading all assets and changing the layout on page load, a server-side test makes the changes at the server level before the assets get downloaded by the user. This means that two or more versions of that page exist at the server level but the user will only get served one without the overhead of the rest — huge performance gains.\n\nHere’s the same A/B test but now taking the server-side approach:\n\n<figure style=\"max-width:30em;\" class=\"text-aligncenter\"><video width=\"100%\" height=\"auto\" controls>\n  <source src=\"/assets/server-side-split-testing.mp4\" type=\"video/mp4\">\n  Your browser does not support the video tag.\n</video>\n\n<figcaption><a href=\"https://www.webpagetest.org/result/180811_R0_e721c60abb1bec31c7527685d29b5eec/\" target=\"_blank\">Server-side performance results from Webpagetest.org  </a></figcaption></figure>\n\nThe content stayed in place without any notice to the end user of their participation in a split test. Not only is the content not having a dance party, the images being removed are not being loaded by the browser — this decreased load time, on average, by 30%.\n\nSo now that we know that server-side split testing kicks butt, I'm going to run you through how I setup the low cost testing stack for this site by splitting traffic through Netlify and tracking test results in Google Optimize with the help of the Google Tag Manager Data Layer.\n\n## Splitting Traffic at the Server Level\n\nYou’re going to need a way of splitting traffic at the server level. Personally, I have zero familiarity with configuring servers, and it’s not really where I want to spend my time. I’ve been hosting my website on Netlify for about a year now, and they take care of all the complicated server-side configurations, allowing me to split traffic to different versions of my website via Git branches. If you know how to use Git, this will be second nature to you.\n\n(For those that do like to get into the weeds with AWS: [A/B testing on AWS CloudFront with Lambda@Edge](https://medium.com/buildit/a-b-testing-on-aws-cloudfront-with-lambda-edge-a22dd82e9d12))\n\nOnce [you’re up and running with Netlify and you’re deploying via Git](https://www.netlify.com/blog/2016/09/29/a-step-by-step-guide-deploying-on-netlify/), navigate over to the split testing page from the admin’s main nav. You’ll get prompted to activate split testing. Click “activate.” Once activated, you’ll be presented with the controls for your split test.\n\n<figure>\n\t<img src=\"/assets/netlify-server-side-split-test-controls.jpg\" alt=\"Netlify's split test controls\" class=\"img-border\">\n\t<figcaption>Netlify's split test controls</figcaption>\n</figure>\n\nIf you’re not seeing any of your other branches here or you’re getting the “This feature requires a repository with at least 2 branches” error, check your Build & Deploy settings and make sure that branch deploys are set to all.\n\nPick your branches that you want to test against, set the amount of traffic you want to send to each branch, and start your test. All traffic to your website is now being split into the branches you’ve chosen. Boom — you’re set. Now we need to figure out how to track how each variation performs.\n\n## Tracking Experiment Results\n\nIn order to track how each variation performs, we’ll need to choose a application that provides an intuitive dashboard with the ability to determine statistically significant winners. Most client-side A/B testing vendors provide the functionality to track server-side tests, but for this example we’ll be focusing on Google Optimize. If you’re not familiar with Google Optimize, [this is an in-depth article with everything you need to know](https://conversionxl.com/blog/google-optimize/).\n\n<h3>Creating an A/B test in Google Optimize</h3>\n\nOnce you have Google Optimize on your website or [PWA](https://julian.is/article/progressive-web-apps/), create an “A/B test” that mirrors that variations you have running on the server-side. The test can be created as a regular A/B test with the only discrepancy being under “Targeting,” where you’re going to create a rule of URL equals = SERVER_SIDE (what tells Google Optimize that this will be a server-side test).\n\n<figure>\n\t<img src=\"/assets/google-optimize-targeting.jpg\" alt=\"Google Optimize Targeting\" class=\"img-border\">\n\t<figcaption>Google Optimize Targeting</figcaption>\n</figure>\n\nCool, we now have an A/B test running on Google Optimize and traffic being split at the server level — the next step is the connect the two.\n\n<h3>Connect Variations via Google Tag Manager's Data Layer</h3>\n\nIn order to make a direct connection between the variations we set up in Google Optimize and the branch variations we’re splitting traffic to at the server level, we’ll need to add the unique experiment ID and the respective variation ID provided by Google Optimize to each branch variation using Google Tag Manager’s Data Layer.\n\nIn Google Tag Manager, navigate over to your Google Analytics tag and under “More Settings > Fields to Set” add the following two fields:\n\n<figure>\n\t<img src=\"/assets/google-tag-manager-experiment-variation-ids.jpg\" alt=\"Google Tag Manager Data Layer Fields\" class=\"img-border\">\n\t<figcaption>Google Tag Manager Data Layer Fields</figcaption>\n</figure>\n\nYou’ll be able to obtain the experiment ID from the info column in Google Optimize once you publish the experiment — it’ll look something along the lines of <i>OX7o3nkrR-ChTxqNJMA1nw</i>.\n\nYou won’t be able to easily find the variation ID, but there’s a numeric value assigned to each variation created starting at 0 for the original variation and increases by 1 for subsequent variations as illustrated below.\n\n<figure>\n\t<img src=\"/assets/google-optimize-variation-id.jpg\" alt=\"Google Optimize Variation IDs\" class=\"img-border\">\n\t<figcaption>Google Optimize Variation IDs</figcaption>\n</figure>\n\nFire up your code editor and, above your Google Tag Manager Script, add the values to the respective branches:\n\n<pre class=\"language-markup\"><code>dataLayer = [{\n     'experimentId': 'experimentidgoeshere',\n     'variationId': 'variationidgoeshere'\n  }];</code></pre>\n\nTriple check that this is placed before your GTM script and not after — placing it after will disable your entire tracking GTM script for whatever no-so-obvious reason (not cool Google).\n\n## In Conclusion\n\nBetween server-side and client-side, which approach should you stick with?\n\nBoth, really. With server-side testing being the clear winner on the performance side, client-side testing still is and will continue to be the preferred approach due to the ease of setup. It only takes me a few minutes to open up Optimizely and create a test changing the home page h1 of [Thomasnet.com](https://www.thomasnet.com). Not only am I able to efficiently do this but so can anyone else in the organization without taking up engineering hours.\n\nLet’s face it, the reality is that engineers are a limited resource, and being able to empower non-engineers with tools to automate some processes and save on engineering time will still be the preferred approach. (In an ideal world, everyone could code as well as they can write — but we’re not there yet.) This means most surface-level UI and messaging experiments should still be created on the client-side while leaving server-side testing for deeper experiments such as product features, search algorithms, etc.\n\nAdd server-side testing to your optimization tool belt, build some cool tests, and [let me know about it](https://twitter.com/juliangav).\n\n## Resources\n\n- [Should you run experimentation client-side or server-side?](https://www.optimizely.com/resources/client-vs-server-side-testing-infographic/)\n- [Server-Side Vs. Client-Side A/B Testing Tools: What’s The Difference?](https://conversionxl.com/blog/server-side-vs-client-side-ab-testing-tools-whats-the-difference/)\n- [Running a Server-side Experiment](https://developers.google.com/analytics/solutions/experiments-server-side)\n- [Split Testing on Netlify](https://www.netlify.com/docs/split-testing/)\n- [The Beginner’s Guide to Google Optimize](https://conversionxl.com/blog/google-optimize/)\n- [A Step-by-Step Guide: Deploying on Netlify](https://www.netlify.com/blog/2016/09/29/a-step-by-step-guide-deploying-on-netlify/)\n- [A/B testing on AWS CloudFront with Lambda@Edge](https://medium.com/buildit/a-b-testing-on-aws-cloudfront-with-lambda-edge-a22dd82e9d12)\n- [GoodIU.org](https://goodui.org/) — Well curated list of A/B testing patterns for both client and server-side.\n",
        "type": "MarkdownRemark",
        "contentDigest": "8c95212adc94b167193329585df1d496",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "Server-Side Split Testing for Static Websites",
        "description": "When to use, when to avoid, and setting up your A/B testing stack.",
        "tags": [
          "ABtest",
          "JAMstack",
          "WebPerf",
          "StaticWebsites",
          "CRO"
        ],
        "lastmod": "2018-10-28T00:00:00.000Z",
        "date": "2018-10-28",
        "time": "5 Minutes",
        "categories": [
          "Development"
        ],
        "slug": "server-side-split-testing",
        "path": "/article/server-side-split-testing/",
        "images": [
          "assets/og-server-side-split-testing.jpg"
        ],
        "icon": "/assets/aico-serverside-split-testing.svg",
        "comments": false,
        "_PARENT": "b070e167-0c0f-5084-9b74-65939791d129"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nIf you’ve read any of my other articles, it's pretty obvious that I’m obsessed with design, performance, and iterative A/B testing.\n\nFor the past year, I’ve taken a deep dive into server-side split testing, and I’ll be honest, the obsession is real. A server-side split test is an A/B testing technique where the changes and traffic allocations of any given test take place at the server level before the web page is delivered to the browser.\n\nWhat makes this approach attractive are the huge performance gains and the user experience improvements when implemented correctly. Below I’ll run you through some of my findings as well as how to go about setting up your own testing stack.\n\n(Looking for more on A/B testing? Here's an article I wrote recently on [what I've learned throughout my years of A/B testing](/article/ab-testing-lessons-learned/).)\n\n## The Problem with Client-Side Split Testing\n\nTraditional client-side A/B testing works by including a snippet of JS at the head of your website. This snippet is supposed to load before anything else on the page does in order to carry out the correct DOM changes of the test at hand.\n\nI have two major issues with this:\n\n1. The entire library of third-party JS is supposed to load before the changes of your test take place, which causes page elements to “blink” and jump around while the rest of the test loads. You can always block the page from displaying before the respective client-side JS snippet is loaded to avoid the blink, but this adds 2 to 3 seconds of load time to your page. I’ve seen cases where website traffic has tanked due to the misuse of this — so don’t do it.\n2. The original version of the page and its respective assets will always load. That’s right, if you’re testing removing images from a blog post, these images will always load on the variation where you’ve removed them (given the scenario that you’re removing and not adding them).\n\nHere’s what happens when I set up a client-side test to remove all images from one of my articles:\n\n<figure style=\"max-width:30em;\"><video width=\"100%\" height=\"auto\" controls>\n  <source src=\"/assets/client-side-split-testing.mp4\" type=\"video/mp4\">\n  Your browser does not support the video tag.\n</video>\n\n<figcaption class=\"text-aligncenter\"><a href=\"https://www.webpagetest.org/result/180811_RB_8cd743453a4b4fd83c44ba91431f26e2/\" target=\"_blank\">Client-side performance results from Webpagetest.org </a></figcaption></figure>\n\nAs you can see, for a brief moment, before the test’s JS loads, the images are visible to the user. This doesn’t bother me due to my OCD regarding aesthetics — this bothers me because it directly affects the results of tests (but the OCD part plays a big role). In this situation, the user’s focus will now be on “Where did the image go?” and most likely dismissing the page as broken once they’re unable to locate it.\n\n## How Server-Side Split Testing Solves This\n\nThe difference between server-side and client side split-testing is where the changes take place and the performance effect it has on the end user. Instead of downloading all assets and changing the layout on page load, a server-side test makes the changes at the server level before the assets get downloaded by the user. This means that two or more versions of that page exist at the server level but the user will only get served one without the overhead of the rest — huge performance gains.\n\nHere’s the same A/B test but now taking the server-side approach:\n\n<figure style=\"max-width:30em;\" class=\"text-aligncenter\"><video width=\"100%\" height=\"auto\" controls>\n  <source src=\"/assets/server-side-split-testing.mp4\" type=\"video/mp4\">\n  Your browser does not support the video tag.\n</video>\n\n<figcaption><a href=\"https://www.webpagetest.org/result/180811_R0_e721c60abb1bec31c7527685d29b5eec/\" target=\"_blank\">Server-side performance results from Webpagetest.org  </a></figcaption></figure>\n\nThe content stayed in place without any notice to the end user of their participation in a split test. Not only is the content not having a dance party, the images being removed are not being loaded by the browser — this decreased load time, on average, by 30%.\n\nSo now that we know that server-side split testing kicks butt, I'm going to run you through how I setup the low cost testing stack for this site by splitting traffic through Netlify and tracking test results in Google Optimize with the help of the Google Tag Manager Data Layer.\n\n## Splitting Traffic at the Server Level\n\nYou’re going to need a way of splitting traffic at the server level. Personally, I have zero familiarity with configuring servers, and it’s not really where I want to spend my time. I’ve been hosting my website on Netlify for about a year now, and they take care of all the complicated server-side configurations, allowing me to split traffic to different versions of my website via Git branches. If you know how to use Git, this will be second nature to you.\n\n(For those that do like to get into the weeds with AWS: [A/B testing on AWS CloudFront with Lambda@Edge](https://medium.com/buildit/a-b-testing-on-aws-cloudfront-with-lambda-edge-a22dd82e9d12))\n\nOnce [you’re up and running with Netlify and you’re deploying via Git](https://www.netlify.com/blog/2016/09/29/a-step-by-step-guide-deploying-on-netlify/), navigate over to the split testing page from the admin’s main nav. You’ll get prompted to activate split testing. Click “activate.” Once activated, you’ll be presented with the controls for your split test.\n\n<figure>\n\t<img src=\"/assets/netlify-server-side-split-test-controls.jpg\" alt=\"Netlify's split test controls\" class=\"img-border\">\n\t<figcaption>Netlify's split test controls</figcaption>\n</figure>\n\nIf you’re not seeing any of your other branches here or you’re getting the “This feature requires a repository with at least 2 branches” error, check your Build & Deploy settings and make sure that branch deploys are set to all.\n\nPick your branches that you want to test against, set the amount of traffic you want to send to each branch, and start your test. All traffic to your website is now being split into the branches you’ve chosen. Boom — you’re set. Now we need to figure out how to track how each variation performs.\n\n## Tracking Experiment Results\n\nIn order to track how each variation performs, we’ll need to choose a application that provides an intuitive dashboard with the ability to determine statistically significant winners. Most client-side A/B testing vendors provide the functionality to track server-side tests, but for this example we’ll be focusing on Google Optimize. If you’re not familiar with Google Optimize, [this is an in-depth article with everything you need to know](https://conversionxl.com/blog/google-optimize/).\n\n<h3>Creating an A/B test in Google Optimize</h3>\n\nOnce you have Google Optimize on your website or [PWA](https://julian.is/article/progressive-web-apps/), create an “A/B test” that mirrors that variations you have running on the server-side. The test can be created as a regular A/B test with the only discrepancy being under “Targeting,” where you’re going to create a rule of URL equals = SERVER_SIDE (what tells Google Optimize that this will be a server-side test).\n\n<figure>\n\t<img src=\"/assets/google-optimize-targeting.jpg\" alt=\"Google Optimize Targeting\" class=\"img-border\">\n\t<figcaption>Google Optimize Targeting</figcaption>\n</figure>\n\nCool, we now have an A/B test running on Google Optimize and traffic being split at the server level — the next step is the connect the two.\n\n<h3>Connect Variations via Google Tag Manager's Data Layer</h3>\n\nIn order to make a direct connection between the variations we set up in Google Optimize and the branch variations we’re splitting traffic to at the server level, we’ll need to add the unique experiment ID and the respective variation ID provided by Google Optimize to each branch variation using Google Tag Manager’s Data Layer.\n\nIn Google Tag Manager, navigate over to your Google Analytics tag and under “More Settings > Fields to Set” add the following two fields:\n\n<figure>\n\t<img src=\"/assets/google-tag-manager-experiment-variation-ids.jpg\" alt=\"Google Tag Manager Data Layer Fields\" class=\"img-border\">\n\t<figcaption>Google Tag Manager Data Layer Fields</figcaption>\n</figure>\n\nYou’ll be able to obtain the experiment ID from the info column in Google Optimize once you publish the experiment — it’ll look something along the lines of <i>OX7o3nkrR-ChTxqNJMA1nw</i>.\n\nYou won’t be able to easily find the variation ID, but there’s a numeric value assigned to each variation created starting at 0 for the original variation and increases by 1 for subsequent variations as illustrated below.\n\n<figure>\n\t<img src=\"/assets/google-optimize-variation-id.jpg\" alt=\"Google Optimize Variation IDs\" class=\"img-border\">\n\t<figcaption>Google Optimize Variation IDs</figcaption>\n</figure>\n\nFire up your code editor and, above your Google Tag Manager Script, add the values to the respective branches:\n\n<pre class=\"language-markup\"><code>dataLayer = [{\n     'experimentId': 'experimentidgoeshere',\n     'variationId': 'variationidgoeshere'\n  }];</code></pre>\n\nTriple check that this is placed before your GTM script and not after — placing it after will disable your entire tracking GTM script for whatever no-so-obvious reason (not cool Google).\n\n## In Conclusion\n\nBetween server-side and client-side, which approach should you stick with?\n\nBoth, really. With server-side testing being the clear winner on the performance side, client-side testing still is and will continue to be the preferred approach due to the ease of setup. It only takes me a few minutes to open up Optimizely and create a test changing the home page h1 of [Thomasnet.com](https://www.thomasnet.com). Not only am I able to efficiently do this but so can anyone else in the organization without taking up engineering hours.\n\nLet’s face it, the reality is that engineers are a limited resource, and being able to empower non-engineers with tools to automate some processes and save on engineering time will still be the preferred approach. (In an ideal world, everyone could code as well as they can write — but we’re not there yet.) This means most surface-level UI and messaging experiments should still be created on the client-side while leaving server-side testing for deeper experiments such as product features, search algorithms, etc.\n\nAdd server-side testing to your optimization tool belt, build some cool tests, and [let me know about it](https://twitter.com/juliangav).\n\n## Resources\n\n- [Should you run experimentation client-side or server-side?](https://www.optimizely.com/resources/client-vs-server-side-testing-infographic/)\n- [Server-Side Vs. Client-Side A/B Testing Tools: What’s The Difference?](https://conversionxl.com/blog/server-side-vs-client-side-ab-testing-tools-whats-the-difference/)\n- [Running a Server-side Experiment](https://developers.google.com/analytics/solutions/experiments-server-side)\n- [Split Testing on Netlify](https://www.netlify.com/docs/split-testing/)\n- [The Beginner’s Guide to Google Optimize](https://conversionxl.com/blog/google-optimize/)\n- [A Step-by-Step Guide: Deploying on Netlify](https://www.netlify.com/blog/2016/09/29/a-step-by-step-guide-deploying-on-netlify/)\n- [A/B testing on AWS CloudFront with Lambda@Edge](https://medium.com/buildit/a-b-testing-on-aws-cloudfront-with-lambda-edge-a22dd82e9d12)\n- [GoodIU.org](https://goodui.org/) — Well curated list of A/B testing patterns for both client and server-side.\n",
      "fileAbsolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2018-08-28-server-side-split-testing.md"
    },
    "8983a814-0b7c-51f0-b01b-6700c9635cdc": {
      "id": "8983a814-0b7c-51f0-b01b-6700c9635cdc",
      "children": [],
      "parent": "635ef4f9-e070-5a78-83db-377e31e70511",
      "internal": {
        "content": "\nLate last week, Smashing Magazine, one of the largest and most influential online publications for web design, posted on Facebook that their website was “now running as a Progressive Web App.”\n\n<figure><img src=\"/assets/smashingmag-pwa-facebook.jpg\" alt=\"Smashing Magazine Facebook Post on PWA Screenshot\" class=\"img-border\"></figure>\n\nHonestly, I didn’t think much of it. Progressive Web Apps are for the hardcore web application developers creating the next online cloud-based Photoshop (complicated stuff), right? I scrolled on and went about my day.\n\n(Related: [Static Websites + JAMstack = <3](/article/static-websites-and-jamstack/))\n\nThen, I saw CSS wizard, Harry Roberts, [tweet](https://twitter.com/csswizardry/status/839814781326483456) about making some setting changes in CloudFlare and achieving the same. It might have been a coincidence that I stumbled across two influencers discussing the same topic, but it still caught my eye. So out of curiosity, I installed [Lighthouse](https://developers.google.com/web/tools/lighthouse/), the Chrome plugin that both Smashing Magazine and Harry Roberts had used, and ran my website through it.\n\n<figure><img src=\"/assets/pwa-lighthouse-initial-audit.jpg\" alt=\"Initial Lighthouse Audit\" class=\"img-border\"></figure>\n\nI wasn’t too impressed with the results. I figured I’d look into this, write about it, and save any developers who stumble across my website a bit of time. But I was really surprised with what I found.\n\nI sought out to see if PWAs could benefit the work I do daily with content marketing websites, and I was able to reach 100/100. You’ll see exactly what I did toward the end of this article, but I figured while I’m here, we could walk through it together.\n\nTo begin, let’s get on the same page and define exactly what a PWA is. Google (you might have heard of this company before) says:\n\n<blockquote>\n  <p><strong>Progressive Web Apps are user experiences that have the reach of the web, and are:</strong></p>\n  <ul>\n    <li><strong>Reliable</strong> - Load instantly and never show the downasaur, even in uncertain network conditions.</li>\n    <li><strong>Fast</strong> - Respond quickly to user interactions with silky smooth animations and no janky scrolling.</li>\n    <li><strong>Engaging</strong> - Feel like a natural app on the device, with an immersive user experience.\n  This new level of quality allows Progressive Web Apps to earn a place on the user’s home screen.</li>\n  </ul>\n</blockquote>\n\nIn other words, a PWA is the inbetween of a native app and a website. Using new technology being shipped with the latest browsers, we’re now able to create web apps, or in this case websites, that feature similar functionality as native iOS & Android apps (push notifications being a popular one).\n\nThe beauty of it is that we don’t need to be on a specific platform to be able to install a specific app — we just need a URL to point our mobile or desktop browsers to — but it is also one of the most challenging aspects of PWAs because ANY browser on ANY device could access the web app.\n\nThis means that we’ll be catering to users that probably won’t have the latest version of their browser with the latest features that you’re using. And that’s OK.\n\nPWAs are built with the core principle of the [progressive enhancement](https://www.smashingmagazine.com/2009/04/progressive-enhancement-what-it-is-and-how-to-use-it/). This means the app/website will focus on the core content or purpose, and it will use the latest and greatest features as an enhancement to the experience and not as a requirement. It won't break or render useless if a specific feature isn’t available in the browser/device accessing it.\n\n## Why Your Website Should Be a Progressive Web App\n\nAlthough you probably won’t be using any hardcore app-like features for your website, there are a handful of enhancements, such as offline accessibility and native browser notifications, that will immediately improve the overall usability and engagement of your audience. It’ll result in higher conversions and lower bounce rates.\n\nThere’s even more to it:\n\n<h3>Offline Accessibility with Service Workers</h3>\n\nUsing service workers, we’re able to “download” your website for offline use. Even with our tech-savvy way of life, there are plenty of use cases for this — subway riders with no internet access reading your blog, plant managers with spotty wifi looking up specs, those driving into more rural areas, etc.\n\n(Keep reading — I get a bit more detailed on this later on.)\n\n<h3>Native Browser Notifications</h3>\n\nIf the website validates as a PWA, certain browsers take the initiative of displaying notifications such as offering to add the website to the home screen of the user — the PWA equivalent of installing an app.\n\n<h3>Enabling Push Notifications</h3>\n\nPush notifications are every developer and marketer's favorite native app feature. When leveraging the Push API, you have the ability to re-engage your audience even when your website’s not being accessed.\n\n<h3>Performance</h3>\n\nWith service workers, we have granular control over caching static assets, which reduces network requests and results in improved performance.\n\n<h3>Google Likes it</h3>\n\nIf Google supports something, pay close attention. It won’t be long until Google starts favoring PWAs in certain search results. (You heard it here first!) Right now, there isn’t any evidence showing an increase in traffic; however, early adopters are usually the ones to reap the benefits.\n\n<h3>Still not convinced? Here’s some relevant proof:</h3>\n\n- [Housing.com increases conversions and lowers bounce rate by 40% with new PWA](https://developers.google.com/web/showcase/2016/housing)\n- [United eXtra Electronics grows eCommerce sales by 100% with Web Push Notifications](https://developers.google.com/web/showcase/2016/extra)\n- [5miles decreases bounce rate by 50% and increases conversions by 60% with new Progressive Web App](https://developers.google.com/web/showcase/2016/5miles)\n- [Alibaba.com increases conversions on the mobile web by 76% with Progressive Web App](https://developers.google.com/web/showcase/2016/alibaba)\n\n## Criteria for Progressive Web Apps\n\nYour website has to meet a baseline of standards in order to benefit from the PWA perks, but these are best practices you should already be considering and implementing on your website. If not, listen up.\n\n<h3>Site is served over HTTPS</h3>\n\nThis is the secure version of your website. Sending information over HTTPS ensure any data that’s being passed through your website gets encrypted. Yes, even if your website is a simple content-based website with no complicated features, you want and need HTTPS (lots of bad hombres out there).\n\nYou can test for this with Lighthouse or just look at the address bar of your website and if the URL starts with https:// and not http://, you’re good to go. I use [CloudFlare CDN](https://www.cloudflare.com/cdn/), which makes it relatively simple to enable HTTPS.\n\n<h3>Pages are responsive on tablets & mobile devices</h3>\n\nBy now, everyone should be building on a responsive foundation. Do I even need to elaborate here? Thinking no, but [let me know](https://www.twitter.com/juliangav) otherwise.\n\n<h3>The start URL (at least) loads while offline</h3>\n\nYour home page URL needs to be able to load if you don’t have access to the internet — use service workers (not as difficult as it sounds) to help. (I’ll show you how to do this shortly.)\n\n<h3>Metadata provided for add to home screen</h3>\n\nMobile browsers need basic information about your website such as an icon to represent your website on the home screen of a device, a short name (what gets displayed below your icon) and a browser theme color to match certain parts of the browser to the colors of your website (among many other options).\n\nThis gets accomplished through the [web app manifest file](https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/), which is a simple JSON file that contains all of the specifics. (Again, I run you through setting one of these up toward the end of this post.)\n\n<h3>First load is fast even on 3G</h3>\n\nYour website needs to render fast. It should load within the first 4 seconds and get a 85+ [PageSpeed Insights](https://developers.google.com/speed/pagespeed/insights/) score as a minimum. I recently wrote an article on [website speed performance](/article/baseline-for-fast-loading-websites/), which goes over a few basic steps you can take to make sure your website loads pretty darn quick.\n\n<h3>Site works cross-browser</h3>\n\nEvery single feature doesn’t have to work on every browser but being able to progressively enhance and using fallbacks where necessary should be the foundation of your website or app. Don’t target a specific browser or OS for your website/app to work on — it’s a big negative that goes against the progressive principle.\n\n<h3>Page transitions don't feel like they block on the network</h3>\n\nGoing from page to page should be a seamless experience — any type of render blocking delay deters you from achieving that. There are many ways to address this from making sure your website’s fast (two steps above) and using [perceived performance techniques such as Critical CSS](/article/baseline-for-fast-loading-websites/#perceived-performance).\n\n<h3>Each page has a URL</h3>\n\nIf you click on a page, make sure the website URL reflects that. Single Page Applications sometimes forget this and make it pretty difficult to share content across the web.\n\nSeems like a handful of steps, but if your website is already built on a foundation of best practices, it won’t be much work to have it validate.\n\n## Getting My Website to PWA Status in Two Hours\n\nCurious and determined, I went ahead and started addressing one by one the issues that [my initial Lighthouse report](/assets/pwa-initial-lighthouse-report.pdf) came back with.\n\nI had to address:\n\n1. App can load on offline/flaky connections\n2. User can be prompted to Add to Home screen\n3. Installed web app will launch with custom splash screen\n4. Address bar matches brand colors\n\nAnd off to optimization land I went.\n\n<h3>First Step: Enable Service Workers</h3>\n\nTo reach the baseline of a PWA, we’re looking to provide a rich offline experience with the caching capabilities of service workers. On top of regular file caching, Service workers goes the extra mile to cache network responses and pretend to still have internet access (even if you’re in the middle of an internet deadzone).\n\nTo start the installation of service workers, place the following script in your global footer (unless you only need/want service workers on a specific section of your website):\n\n<pre class=\"language-markup\"><code>if ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker.register('/sw.js').then(function(registration) {\n      // Registration was successful\n      console.log('ServiceWorker registration successful with scope: ', registration.scope);\n    }).catch(function(err) {\n      // registration failed :(\n      console.log('ServiceWorker registration failed: ', err);\n    });\n  });\n}</code>\n</pre>\n\nNext, create a JS file named sw.js and place it in the root directory of your website with the following code:\n\n(Note: Make sure that style.css and production.min.js are replaced with your site’s specific CSS and JS files.)\n\n<pre class=\"language-markup\"><code>var CACHE_NAME = 'site-cache';\nvar urlsToCache = [\n  '/',\n  '/style.css',\n  '/js/production.min.js'\n];\n\nself.addEventListener('install', function(event) {\n  // Perform install steps\n  event.waitUntil(\n    caches.open(CACHE_NAME)\n    .then(function(cache) {\n      console.log('Opened cache');\n      return cache.addAll(urlsToCache);\n    })\n  );\n});\n\nself.addEventListener('fetch', function(event) {\n  event.respondWith(\n    caches.match(event.request)\n    .then(function(response) {\n      // Cache hit - return response\n      if (response) {\n        return response;\n      }\n\n      // IMPORTANT: Clone the request. A request is a stream and\n      // can only be consumed once. Since we are consuming this\n      // once by cache and once by the browser for fetch, we need\n      // to clone the response.\n      var fetchRequest = event.request.clone();\n\n      return fetch(fetchRequest).then(\n        function(response) {\n          // Check if we received a valid response\n          if (!response || response.status !== 200 || response.type !== 'basic') {\n            return response;\n          }\n\n          // IMPORTANT: Clone the response. A response is a stream\n          // and because we want the browser to consume the response\n          // as well as the cache consuming the response, we need\n          // to clone it so we have two streams.\n          var responseToCache = response.clone();\n\n          caches.open(CACHE_NAME)\n            .then(function(cache) {\n              cache.put(event.request, responseToCache);\n            });\n\n          return response;\n        }\n      );\n    })\n  );\n});</code>\n</pre>\n\nFor now, this is exactly what we need to cache a 200 network response. I strongly recommend you get the specifics on the code above by going through the following documentation on the Google Developers website:\n\n- [Introduction to service workers](https://developers.google.com/web/fundamentals/getting-started/primers/service-workers)\n- [Service workers life cycle](https://developers.google.com/web/fundamentals/instant-and-offline/service-worker/lifecycle)\n\nIf you disconnect from the internet and refresh this page, the browser responds with a 200 (successfully connected) instead of a “no Internet connection”.\n\nThis took care of the “App can load on offline/flaky connections” error and bumped my score up to 65/100.\n\n<figure><img src=\"/assets/pwa-lighthouse-service-workers-audit.jpg\" alt=\"After service workers - Lighthouse Audit\" class=\"img-border\"></figure>\n\nWe’re getting there!\n\n<h3>Second Step: Add The Web App Manifest</h3>\n\nThe web app manifest is a JSON file that allows you to control the look and feel of your theme in areas that you would otherwise not be able to modify. You have options such as: changing the color of the browser chrome; not displaying any chrome at all in order to give your website/app the standalone app look and feel; providing additional metadata to devices for when a user “installs” it to their home screen.\n\nCreate a JSON file and name it manifest.json then add this file to the root of your domain. Mine looks like this:\n\n<pre class=\"language-markup\"><code>{\n  \"short_name\": \"julian\",\n  \"name\": \"Julian Gaviria — Web Designer\",\n  \"icons\": [\n    {\n      \"src\": \"img/jg-launcher-icon-1x.jpg\",\n      \"type\": \"image/png\",\n      \"sizes\": \"48x48\"\n    },\n    {\n      \"src\": \"img/jg-launcher-icon-2x.jpg\",\n      \"type\": \"image/png\",\n      \"sizes\": \"96x96\"\n    },\n    {\n      \"src\": \"img/jg-launcher-icon-4x.jpg\",\n      \"type\": \"image/png\",\n      \"sizes\": \"192x192\"\n    }\n  ],\n  \"start_url\": \"/?utm_source=homescreen\",\n  \"background_color\": \"#23507a\",\n  \"display\": \"standalone\",\n  \"theme_color\": \"#23507a\"\n}</code>\n</pre>\n\nLink to the file from within the &lt;head&gt; of your website with the link tag:\n\n<pre class=\"language-markup\"><code>&lt;link rel=\"manifest\" href=\"/manifest.json\"&gt;</code>\n</pre>\n\nWith this specific setup I’ve defined:\n\n- The name of the website\n- The icon that will be used when the website gets added to a home screen (in three different sizes)\n- The name that will sit below the icon\n- The URL that the website will open to if accessed from a device’s home screen\n- Background color for the device (instead of showing a blank white page when browsing between pages)\n- Theme color for the browser chrome (UI areas of the browser and not the website)\n\nYou can go ahead and copy the code above (obviously replacing my information with yours). Mozilla has provided detailed documentation of all the [attributes and values of web app manifest file](https://developer.mozilla.org/en-US/docs/Web/Manifest).\n\nThis addressed issues two through four and improved my Lighthouse score to 100/100.\n\n<figure><img src=\"/assets/pwa-lighthouse-manifest-audit.jpg\" alt=\"After Web App Manifest - Lighthouse Audit\" class=\"img-border\"></figure>\n\nMission accomplished! Told you it wasn't rocket science.\n\n## Additional Information and Things to be Wary of\n\n<h3>Browser Support: Who’s Backing This?</h3>\n\nGoogle and Mozilla are the main players here with strong support from Microsoft and Samsung. Apple’s being a bit stubborn and throwing their mobile weight around since this [presents a threat to their iOS ecosystem](https://medium.com/@isaac.scerri/why-apple-is-blocking-the-future-of-apps-4dfe634a1d27#.vkhlsar8r). (My original theory was that they’re upset they didn’t come up with the idea first… and I’m tempted to stick with it.)\n\nSince the strategy behind progressive enhancement is to start with an emphasis on the core content of a website and add features to enhance the experience, PWAs will just work on iOS devices. However, as of late, it seems like Apple is beginning to have a change of heart by considering [service workers as part of their 5 year plan](https://trac.webkit.org/wiki/FiveYearPlanFall2015); better than nothing, but the web will move forward without them.\n\n<h3>Difference between PWA and Google’s Advanced Mobile Pages</h3>\n\nThese are two different types of approaches solving two different types of problems:\n\nAMP is focused on providing content at lightning speeds to the user, regardless of the type of internet connection, mostly from search results and geared toward blogs and news articles.\n\nPWA is focused on providing rich and engaging experiences along with reliable performance to users on revisits regardless of the type of content.\n\nNothing’s stopping you from using both — actually, [PWAs and AMPs work really well together](https://developers.google.com/web/shows/google-io/2016/amp-progressive-web-apps-start-fast-stay-engaged-google-io-2016).\n\n<h3>Disproving a Few Myths</h3>\n\nI came across a few interesting statements while doing some research on the topic that I don’t agree with and don’t think you should either.\n\n<h4>Myth #1: </h4>\n\n<blockquote><p>Benefits don't outweigh the time it takes to implement the functionality at the moment</p></blockquote>\n\nIt took me about two hours to go from a 50/100 score to a 100/100 score. (Check the timestamp on the Lighthouse screenshots.) It’ll take you even less time to copy and paste code samples I provided onto your website. (Big thanks to me for doing your legwork — you’re welcome.) It’s safe to say that two hours seems like a worthy investment for reaping the engagement benefits.\n\n<h4>Myth #2:</h4>\n\n<blockquote><p>It's pretty much required that you're going to be using some form of JS framework or view library, like Angular or React.</p></blockquote>\n\nMy site runs on a [static site generator](/article/static-websites-and-jamstack/#ssgs) (just straight up HTML files). It’s made up of simple HTML, CSS and good ol’ jQuery. No component based, data binding, dynamic, complicated JS framework here.\n\nIf you skipped the beginning of this article, I’ve outlined exactly what the PWA criteria is (and it’s not React or Angular). Scroll back up!\n\n<h4>Myth #3:</h4>\n\n<blockquote><p>You'll need to be pre-rendering pages on the server then picking up with your application when it's loaded.</p></blockquote>\n\nI don’t even know what this means, but it didn’t seem like the author of that article did either.\n\n<h4>Myth #4:</h4>\n\n<blockquote>\n  <p>You're in the world of clever JS front-end technologies to make sure you do things the PWA way.</p>\n</blockquote>\n\nI’m actually a designer. I just happen to dig code.\n\nNot to discredit myself or to say that what I do is easy, but I hope it illustrates that the baseline for a PWA is relatively simple. Let’s not make things sound more complicated than what they are.\n\n(By the way, I copied and pasted the statements above from their sources.)\n\n## What Now?\n\nThis is just the tip of the iceberg. I want to see what the possibilities are with push notifications, test the boundaries and use cases with service workers and maybe even create a PWA/AMP hybrid version of my website.\n\nI believe these are the next steps in our journey for a unified and accessible web that started with responsive web design in 2011. I’m excited and by the looks of it, and you’re probably very excited as well. If not, I have no idea how or why you made it to the end of this very long article.\n\n## PWA Resources\n\nI put together a separate page for articles, videos, podcasts and tutorials that I came across. I hope this helps you out. Enjoy!\n\n[View PWA Resources &raquo;](/article/progressive-web-apps/resources)\n",
        "type": "MarkdownRemark",
        "contentDigest": "e7747d6d604d727b2db7461dbcdc5f8b",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "Progressive Web Apps — The Next Step in Responsive Web Design",
        "author": "Julian Gaviria",
        "description": "PWAs are here to stay, and using them today could improve the engagement, bounce rate, and conversion rates of your website.",
        "excerpt": "PWAs are here to stay, and using them today could improve the engagement, bounce rate, and conversion rates of your website.",
        "categories": [
          "Development",
          "UX"
        ],
        "tags": [
          "PWA",
          "WebPerf",
          "ServiceWorkers",
          "WebAppManifest"
        ],
        "images": [
          "assets/og-progressive-web-apps.jpg"
        ],
        "icon": "/assets/aico-progressive-web-apps.svg",
        "time": "8 Minutes",
        "comments": false,
        "slug": "progressive-web-apps",
        "path": "/article/progressive-web-apps/",
        "date": "2017-03-20",
        "_PARENT": "635ef4f9-e070-5a78-83db-377e31e70511"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nLate last week, Smashing Magazine, one of the largest and most influential online publications for web design, posted on Facebook that their website was “now running as a Progressive Web App.”\n\n<figure><img src=\"/assets/smashingmag-pwa-facebook.jpg\" alt=\"Smashing Magazine Facebook Post on PWA Screenshot\" class=\"img-border\"></figure>\n\nHonestly, I didn’t think much of it. Progressive Web Apps are for the hardcore web application developers creating the next online cloud-based Photoshop (complicated stuff), right? I scrolled on and went about my day.\n\n(Related: [Static Websites + JAMstack = <3](/article/static-websites-and-jamstack/))\n\nThen, I saw CSS wizard, Harry Roberts, [tweet](https://twitter.com/csswizardry/status/839814781326483456) about making some setting changes in CloudFlare and achieving the same. It might have been a coincidence that I stumbled across two influencers discussing the same topic, but it still caught my eye. So out of curiosity, I installed [Lighthouse](https://developers.google.com/web/tools/lighthouse/), the Chrome plugin that both Smashing Magazine and Harry Roberts had used, and ran my website through it.\n\n<figure><img src=\"/assets/pwa-lighthouse-initial-audit.jpg\" alt=\"Initial Lighthouse Audit\" class=\"img-border\"></figure>\n\nI wasn’t too impressed with the results. I figured I’d look into this, write about it, and save any developers who stumble across my website a bit of time. But I was really surprised with what I found.\n\nI sought out to see if PWAs could benefit the work I do daily with content marketing websites, and I was able to reach 100/100. You’ll see exactly what I did toward the end of this article, but I figured while I’m here, we could walk through it together.\n\nTo begin, let’s get on the same page and define exactly what a PWA is. Google (you might have heard of this company before) says:\n\n<blockquote>\n  <p><strong>Progressive Web Apps are user experiences that have the reach of the web, and are:</strong></p>\n  <ul>\n    <li><strong>Reliable</strong> - Load instantly and never show the downasaur, even in uncertain network conditions.</li>\n    <li><strong>Fast</strong> - Respond quickly to user interactions with silky smooth animations and no janky scrolling.</li>\n    <li><strong>Engaging</strong> - Feel like a natural app on the device, with an immersive user experience.\n  This new level of quality allows Progressive Web Apps to earn a place on the user’s home screen.</li>\n  </ul>\n</blockquote>\n\nIn other words, a PWA is the inbetween of a native app and a website. Using new technology being shipped with the latest browsers, we’re now able to create web apps, or in this case websites, that feature similar functionality as native iOS & Android apps (push notifications being a popular one).\n\nThe beauty of it is that we don’t need to be on a specific platform to be able to install a specific app — we just need a URL to point our mobile or desktop browsers to — but it is also one of the most challenging aspects of PWAs because ANY browser on ANY device could access the web app.\n\nThis means that we’ll be catering to users that probably won’t have the latest version of their browser with the latest features that you’re using. And that’s OK.\n\nPWAs are built with the core principle of the [progressive enhancement](https://www.smashingmagazine.com/2009/04/progressive-enhancement-what-it-is-and-how-to-use-it/). This means the app/website will focus on the core content or purpose, and it will use the latest and greatest features as an enhancement to the experience and not as a requirement. It won't break or render useless if a specific feature isn’t available in the browser/device accessing it.\n\n## Why Your Website Should Be a Progressive Web App\n\nAlthough you probably won’t be using any hardcore app-like features for your website, there are a handful of enhancements, such as offline accessibility and native browser notifications, that will immediately improve the overall usability and engagement of your audience. It’ll result in higher conversions and lower bounce rates.\n\nThere’s even more to it:\n\n<h3>Offline Accessibility with Service Workers</h3>\n\nUsing service workers, we’re able to “download” your website for offline use. Even with our tech-savvy way of life, there are plenty of use cases for this — subway riders with no internet access reading your blog, plant managers with spotty wifi looking up specs, those driving into more rural areas, etc.\n\n(Keep reading — I get a bit more detailed on this later on.)\n\n<h3>Native Browser Notifications</h3>\n\nIf the website validates as a PWA, certain browsers take the initiative of displaying notifications such as offering to add the website to the home screen of the user — the PWA equivalent of installing an app.\n\n<h3>Enabling Push Notifications</h3>\n\nPush notifications are every developer and marketer's favorite native app feature. When leveraging the Push API, you have the ability to re-engage your audience even when your website’s not being accessed.\n\n<h3>Performance</h3>\n\nWith service workers, we have granular control over caching static assets, which reduces network requests and results in improved performance.\n\n<h3>Google Likes it</h3>\n\nIf Google supports something, pay close attention. It won’t be long until Google starts favoring PWAs in certain search results. (You heard it here first!) Right now, there isn’t any evidence showing an increase in traffic; however, early adopters are usually the ones to reap the benefits.\n\n<h3>Still not convinced? Here’s some relevant proof:</h3>\n\n- [Housing.com increases conversions and lowers bounce rate by 40% with new PWA](https://developers.google.com/web/showcase/2016/housing)\n- [United eXtra Electronics grows eCommerce sales by 100% with Web Push Notifications](https://developers.google.com/web/showcase/2016/extra)\n- [5miles decreases bounce rate by 50% and increases conversions by 60% with new Progressive Web App](https://developers.google.com/web/showcase/2016/5miles)\n- [Alibaba.com increases conversions on the mobile web by 76% with Progressive Web App](https://developers.google.com/web/showcase/2016/alibaba)\n\n## Criteria for Progressive Web Apps\n\nYour website has to meet a baseline of standards in order to benefit from the PWA perks, but these are best practices you should already be considering and implementing on your website. If not, listen up.\n\n<h3>Site is served over HTTPS</h3>\n\nThis is the secure version of your website. Sending information over HTTPS ensure any data that’s being passed through your website gets encrypted. Yes, even if your website is a simple content-based website with no complicated features, you want and need HTTPS (lots of bad hombres out there).\n\nYou can test for this with Lighthouse or just look at the address bar of your website and if the URL starts with https:// and not http://, you’re good to go. I use [CloudFlare CDN](https://www.cloudflare.com/cdn/), which makes it relatively simple to enable HTTPS.\n\n<h3>Pages are responsive on tablets & mobile devices</h3>\n\nBy now, everyone should be building on a responsive foundation. Do I even need to elaborate here? Thinking no, but [let me know](https://www.twitter.com/juliangav) otherwise.\n\n<h3>The start URL (at least) loads while offline</h3>\n\nYour home page URL needs to be able to load if you don’t have access to the internet — use service workers (not as difficult as it sounds) to help. (I’ll show you how to do this shortly.)\n\n<h3>Metadata provided for add to home screen</h3>\n\nMobile browsers need basic information about your website such as an icon to represent your website on the home screen of a device, a short name (what gets displayed below your icon) and a browser theme color to match certain parts of the browser to the colors of your website (among many other options).\n\nThis gets accomplished through the [web app manifest file](https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/), which is a simple JSON file that contains all of the specifics. (Again, I run you through setting one of these up toward the end of this post.)\n\n<h3>First load is fast even on 3G</h3>\n\nYour website needs to render fast. It should load within the first 4 seconds and get a 85+ [PageSpeed Insights](https://developers.google.com/speed/pagespeed/insights/) score as a minimum. I recently wrote an article on [website speed performance](/article/baseline-for-fast-loading-websites/), which goes over a few basic steps you can take to make sure your website loads pretty darn quick.\n\n<h3>Site works cross-browser</h3>\n\nEvery single feature doesn’t have to work on every browser but being able to progressively enhance and using fallbacks where necessary should be the foundation of your website or app. Don’t target a specific browser or OS for your website/app to work on — it’s a big negative that goes against the progressive principle.\n\n<h3>Page transitions don't feel like they block on the network</h3>\n\nGoing from page to page should be a seamless experience — any type of render blocking delay deters you from achieving that. There are many ways to address this from making sure your website’s fast (two steps above) and using [perceived performance techniques such as Critical CSS](/article/baseline-for-fast-loading-websites/#perceived-performance).\n\n<h3>Each page has a URL</h3>\n\nIf you click on a page, make sure the website URL reflects that. Single Page Applications sometimes forget this and make it pretty difficult to share content across the web.\n\nSeems like a handful of steps, but if your website is already built on a foundation of best practices, it won’t be much work to have it validate.\n\n## Getting My Website to PWA Status in Two Hours\n\nCurious and determined, I went ahead and started addressing one by one the issues that [my initial Lighthouse report](/assets/pwa-initial-lighthouse-report.pdf) came back with.\n\nI had to address:\n\n1. App can load on offline/flaky connections\n2. User can be prompted to Add to Home screen\n3. Installed web app will launch with custom splash screen\n4. Address bar matches brand colors\n\nAnd off to optimization land I went.\n\n<h3>First Step: Enable Service Workers</h3>\n\nTo reach the baseline of a PWA, we’re looking to provide a rich offline experience with the caching capabilities of service workers. On top of regular file caching, Service workers goes the extra mile to cache network responses and pretend to still have internet access (even if you’re in the middle of an internet deadzone).\n\nTo start the installation of service workers, place the following script in your global footer (unless you only need/want service workers on a specific section of your website):\n\n<pre class=\"language-markup\"><code>if ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker.register('/sw.js').then(function(registration) {\n      // Registration was successful\n      console.log('ServiceWorker registration successful with scope: ', registration.scope);\n    }).catch(function(err) {\n      // registration failed :(\n      console.log('ServiceWorker registration failed: ', err);\n    });\n  });\n}</code>\n</pre>\n\nNext, create a JS file named sw.js and place it in the root directory of your website with the following code:\n\n(Note: Make sure that style.css and production.min.js are replaced with your site’s specific CSS and JS files.)\n\n<pre class=\"language-markup\"><code>var CACHE_NAME = 'site-cache';\nvar urlsToCache = [\n  '/',\n  '/style.css',\n  '/js/production.min.js'\n];\n\nself.addEventListener('install', function(event) {\n  // Perform install steps\n  event.waitUntil(\n    caches.open(CACHE_NAME)\n    .then(function(cache) {\n      console.log('Opened cache');\n      return cache.addAll(urlsToCache);\n    })\n  );\n});\n\nself.addEventListener('fetch', function(event) {\n  event.respondWith(\n    caches.match(event.request)\n    .then(function(response) {\n      // Cache hit - return response\n      if (response) {\n        return response;\n      }\n\n      // IMPORTANT: Clone the request. A request is a stream and\n      // can only be consumed once. Since we are consuming this\n      // once by cache and once by the browser for fetch, we need\n      // to clone the response.\n      var fetchRequest = event.request.clone();\n\n      return fetch(fetchRequest).then(\n        function(response) {\n          // Check if we received a valid response\n          if (!response || response.status !== 200 || response.type !== 'basic') {\n            return response;\n          }\n\n          // IMPORTANT: Clone the response. A response is a stream\n          // and because we want the browser to consume the response\n          // as well as the cache consuming the response, we need\n          // to clone it so we have two streams.\n          var responseToCache = response.clone();\n\n          caches.open(CACHE_NAME)\n            .then(function(cache) {\n              cache.put(event.request, responseToCache);\n            });\n\n          return response;\n        }\n      );\n    })\n  );\n});</code>\n</pre>\n\nFor now, this is exactly what we need to cache a 200 network response. I strongly recommend you get the specifics on the code above by going through the following documentation on the Google Developers website:\n\n- [Introduction to service workers](https://developers.google.com/web/fundamentals/getting-started/primers/service-workers)\n- [Service workers life cycle](https://developers.google.com/web/fundamentals/instant-and-offline/service-worker/lifecycle)\n\nIf you disconnect from the internet and refresh this page, the browser responds with a 200 (successfully connected) instead of a “no Internet connection”.\n\nThis took care of the “App can load on offline/flaky connections” error and bumped my score up to 65/100.\n\n<figure><img src=\"/assets/pwa-lighthouse-service-workers-audit.jpg\" alt=\"After service workers - Lighthouse Audit\" class=\"img-border\"></figure>\n\nWe’re getting there!\n\n<h3>Second Step: Add The Web App Manifest</h3>\n\nThe web app manifest is a JSON file that allows you to control the look and feel of your theme in areas that you would otherwise not be able to modify. You have options such as: changing the color of the browser chrome; not displaying any chrome at all in order to give your website/app the standalone app look and feel; providing additional metadata to devices for when a user “installs” it to their home screen.\n\nCreate a JSON file and name it manifest.json then add this file to the root of your domain. Mine looks like this:\n\n<pre class=\"language-markup\"><code>{\n  \"short_name\": \"julian\",\n  \"name\": \"Julian Gaviria — Web Designer\",\n  \"icons\": [\n    {\n      \"src\": \"img/jg-launcher-icon-1x.jpg\",\n      \"type\": \"image/png\",\n      \"sizes\": \"48x48\"\n    },\n    {\n      \"src\": \"img/jg-launcher-icon-2x.jpg\",\n      \"type\": \"image/png\",\n      \"sizes\": \"96x96\"\n    },\n    {\n      \"src\": \"img/jg-launcher-icon-4x.jpg\",\n      \"type\": \"image/png\",\n      \"sizes\": \"192x192\"\n    }\n  ],\n  \"start_url\": \"/?utm_source=homescreen\",\n  \"background_color\": \"#23507a\",\n  \"display\": \"standalone\",\n  \"theme_color\": \"#23507a\"\n}</code>\n</pre>\n\nLink to the file from within the &lt;head&gt; of your website with the link tag:\n\n<pre class=\"language-markup\"><code>&lt;link rel=\"manifest\" href=\"/manifest.json\"&gt;</code>\n</pre>\n\nWith this specific setup I’ve defined:\n\n- The name of the website\n- The icon that will be used when the website gets added to a home screen (in three different sizes)\n- The name that will sit below the icon\n- The URL that the website will open to if accessed from a device’s home screen\n- Background color for the device (instead of showing a blank white page when browsing between pages)\n- Theme color for the browser chrome (UI areas of the browser and not the website)\n\nYou can go ahead and copy the code above (obviously replacing my information with yours). Mozilla has provided detailed documentation of all the [attributes and values of web app manifest file](https://developer.mozilla.org/en-US/docs/Web/Manifest).\n\nThis addressed issues two through four and improved my Lighthouse score to 100/100.\n\n<figure><img src=\"/assets/pwa-lighthouse-manifest-audit.jpg\" alt=\"After Web App Manifest - Lighthouse Audit\" class=\"img-border\"></figure>\n\nMission accomplished! Told you it wasn't rocket science.\n\n## Additional Information and Things to be Wary of\n\n<h3>Browser Support: Who’s Backing This?</h3>\n\nGoogle and Mozilla are the main players here with strong support from Microsoft and Samsung. Apple’s being a bit stubborn and throwing their mobile weight around since this [presents a threat to their iOS ecosystem](https://medium.com/@isaac.scerri/why-apple-is-blocking-the-future-of-apps-4dfe634a1d27#.vkhlsar8r). (My original theory was that they’re upset they didn’t come up with the idea first… and I’m tempted to stick with it.)\n\nSince the strategy behind progressive enhancement is to start with an emphasis on the core content of a website and add features to enhance the experience, PWAs will just work on iOS devices. However, as of late, it seems like Apple is beginning to have a change of heart by considering [service workers as part of their 5 year plan](https://trac.webkit.org/wiki/FiveYearPlanFall2015); better than nothing, but the web will move forward without them.\n\n<h3>Difference between PWA and Google’s Advanced Mobile Pages</h3>\n\nThese are two different types of approaches solving two different types of problems:\n\nAMP is focused on providing content at lightning speeds to the user, regardless of the type of internet connection, mostly from search results and geared toward blogs and news articles.\n\nPWA is focused on providing rich and engaging experiences along with reliable performance to users on revisits regardless of the type of content.\n\nNothing’s stopping you from using both — actually, [PWAs and AMPs work really well together](https://developers.google.com/web/shows/google-io/2016/amp-progressive-web-apps-start-fast-stay-engaged-google-io-2016).\n\n<h3>Disproving a Few Myths</h3>\n\nI came across a few interesting statements while doing some research on the topic that I don’t agree with and don’t think you should either.\n\n<h4>Myth #1: </h4>\n\n<blockquote><p>Benefits don't outweigh the time it takes to implement the functionality at the moment</p></blockquote>\n\nIt took me about two hours to go from a 50/100 score to a 100/100 score. (Check the timestamp on the Lighthouse screenshots.) It’ll take you even less time to copy and paste code samples I provided onto your website. (Big thanks to me for doing your legwork — you’re welcome.) It’s safe to say that two hours seems like a worthy investment for reaping the engagement benefits.\n\n<h4>Myth #2:</h4>\n\n<blockquote><p>It's pretty much required that you're going to be using some form of JS framework or view library, like Angular or React.</p></blockquote>\n\nMy site runs on a [static site generator](/article/static-websites-and-jamstack/#ssgs) (just straight up HTML files). It’s made up of simple HTML, CSS and good ol’ jQuery. No component based, data binding, dynamic, complicated JS framework here.\n\nIf you skipped the beginning of this article, I’ve outlined exactly what the PWA criteria is (and it’s not React or Angular). Scroll back up!\n\n<h4>Myth #3:</h4>\n\n<blockquote><p>You'll need to be pre-rendering pages on the server then picking up with your application when it's loaded.</p></blockquote>\n\nI don’t even know what this means, but it didn’t seem like the author of that article did either.\n\n<h4>Myth #4:</h4>\n\n<blockquote>\n  <p>You're in the world of clever JS front-end technologies to make sure you do things the PWA way.</p>\n</blockquote>\n\nI’m actually a designer. I just happen to dig code.\n\nNot to discredit myself or to say that what I do is easy, but I hope it illustrates that the baseline for a PWA is relatively simple. Let’s not make things sound more complicated than what they are.\n\n(By the way, I copied and pasted the statements above from their sources.)\n\n## What Now?\n\nThis is just the tip of the iceberg. I want to see what the possibilities are with push notifications, test the boundaries and use cases with service workers and maybe even create a PWA/AMP hybrid version of my website.\n\nI believe these are the next steps in our journey for a unified and accessible web that started with responsive web design in 2011. I’m excited and by the looks of it, and you’re probably very excited as well. If not, I have no idea how or why you made it to the end of this very long article.\n\n## PWA Resources\n\nI put together a separate page for articles, videos, podcasts and tutorials that I came across. I hope this helps you out. Enjoy!\n\n[View PWA Resources &raquo;](/article/progressive-web-apps/resources)\n",
      "fileAbsolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2017-03-20-progressive-web-apps.md"
    },
    "417f3349-660e-5809-af1a-55b88ead378a": {
      "id": "417f3349-660e-5809-af1a-55b88ead378a",
      "children": [],
      "parent": "a8bbdf14-408c-5ed4-9d4b-10247be9a35f",
      "internal": {
        "content": "\nI've made it all the way out to Barcelona for my second <a href=\"http://smashingconf.com\" target=\"_blank\" rel=\"noopener\">SmashingConf</a>. I've attended plenty of conferences in the states but I wanted to learn something new in regards to both culture and web design. Needless to say, the first day at SmashingConf and my second day in Barcelona did not fall short of expectations.\n\nBelow are some of the notes I've taken during the first day of talks. Keep in mind that these notes weren't edited and they were added just as they were jotted down. Some information may be missing (I didn't jot everything down); if I've misquoted something or something needs fixing, please let me know and I'll address. Enjoy!\n\n## Marcin Wichary - To Hell for Type\n\n<a href=\"https://twitter.com/mwichary\" target=\"_blank\" rel=\"noopener\">@mwichary</a>\n\n<h3>Talk Notes</h3>\n<ul><li>Poland did not have it’s own keyboards when computers began hitting mainstream. Most of the computers in Poland were individually imported from other countries (main the USA). </li>\n<li>So many types of quotation marks. What Medium has to take into consideration for their platform</li>\n<li>Tabular numbers (supported feature of open type).</li>\n<li>Chromes spellchecker learns typography. Did not recognize the different apostrophes that medium has.\nMarcin fixed chrome and created patch that chrome has now implemented (awesome).</li>\n<li>All the underlines you see in medium are gradients on each word. </li>\n<li>Uses letter outlines of the same color of the background to show spaces in the underline for each letter that overlaps.</li>\n<li>“Slightly worse is better than nothing”</li>\n<li>Typography has always been messy. Typewriters were always so limited. Hacks have been around since day one. To show negative margins, letters would bleed out of the letter block to overlap other blocks.</li>\n<li>If you go to Medium and search for C:\\Windows you will see the website in the System font.</li>\n<li>Open sourcing his type tool</li>\n</ul>\n\n<h3>Q&A</h3>\n\n<b>Q:</b> How did the system fonts (bug) make it into production?<br>\n<b>A:</b> It happened in a small amount of setups that only a few of the users had. Better to get things out there quicker and then adjust rather than wait until everything is perfect.\n\n<b>Q:</b> Do you think that the use of comic sans should be punishable by law?\n<br><b>A:</b> No! Look up the history of comic sans (pretty interesting). It's great for people to be able to choose fonts (even if they choose the wrong ones), it shows personality.\n\n<b>Q:</b> What did you use for your presentation with all the animations and what seemed to be live type?\n<br><b>A:</b> Webapp for the presentation. <i>\\*I'll try and provide the link; I wasn't able to write it down.</i>\n\n<b>Q:</b> (I did not write it down)\n<br><b>A:</b> Keyboards are around 150 years old. Writing a book on keyboards.\n\n<h3>My Takeaway</h3>\n\nTypography on the web is way more complicated than it's perceived. Just by the quotation example that Marcin presented, and this seems to be just the tip of the iceberg. There's a book that has been sitting on my bookshelf for quite some time now called <a href=\"https://abookapart.com/products/on-web-typography\" target=\"_blank\" rel=\"noopener\">\"On Web Typography\"</a> by Jason Santamaria. Even though it's a couple of years old now, I'll be dusting it off when I get home and give it a go.\n\n## Val Head - Designing Meaningful Animation\n\n<a href=\"https://twitter.com/vlh\" target=\"_blank\" rel=\"noopener\">@vlh</a>\n\n<ul>\n\t<li>We should use animation more on the web. Not everyone agrees.</li>\n\t<li>Don’t over do it, please (showed overdone example).</li>\n\t<li>Stripe checkout. The reason stripe animations feel good is because they’re put there intentionally. The reason the flipping paragraphs where in the previous example is because we can do it in CSS (no real reason). </li>\n\t<li>Great UI animations have purpose and style.</li>\n\t<li>The core principles: the 12 principles of Animation by Disney  (book). the12prciniples.tumblr.com. Sometimes also summarized as the 10 principles of motion-design.</li>\n\t<li>Animation Principle - Timing & Spacing (most important principle)\n\t<ul>\n\t\t<li>Timing - The amount of time it takes of an action to happen. The duration. (bouncing ball is the hello world of animation).</li>\n\t\t<li>Spacing - The changes in speed over the duration of the action’s timing.</li>\n\t\t<li>Benefits of timing and spacing - makes animated object to obey the laws of physics / establishes mood, emotion and reaction.</li>\n\t\t<li>What sort of physical traits fit our modal?</li>\n\t\t<li>What sort of mood or emotion should it show now?</li>\n\t</ul>\t</li>\n\t<li>By the way we make things move, we say so much.</li>\n\t<li>CSS easing keyboard is limited. That’s why we have Cubic Bezier (cubic-bezier.com); everything is better with cubic-beziers. Use custom cubic-beziers than the defaults.</li>\n\t<li>Animation Principle - Follow through - Not everything comes to a stop at once; easiest way to get follow through, choose a bezier curve that goes outside of the graph</li>\n\t<li>Animation Principle - Secondary Action (twitter heart animation)</li>\n\t<li>Choreography - Designing all your UI animations to feel logical and related; similar objects animate in similar ways; Entrances informs exits (be consistent by how things come in and out); match velocities (instead of durations).  </li>\n\t<li>Sites for finding good examples of animation: \n\t<ul>\n\t\t<li><a href=\"http://artofthetitle.com\" target=\"_blank\" rel=\"noopener\">artofthetitle.com</a> - title animations (behind the scenes)</li>\n\t\t<li><a href=\"http://capptivate.co\" target=\"_blank\" rel=\"noopener\">capptivate.co</a> - gallery site of good iOS animations</li>\n\t\t<li><a href=\"http://uyi.io\" target=\"_blank\" rel=\"noopener\">uyi.io</a> - collects good examples of web animations and categorizes them on how they work</li>\n\t</ul></li>\n\t<li>Book Val Wrote - Designing Interface Animation - <a href=\"https://designinginterfaceanimation.com\" target=\"_blank\" rel=\"noopener\">https://designinginterfaceanimation.com</a> </li>\n</ul>\n\n<b>Q:</b> What about accessibility - it is aiding or is it confusing?\n<br><b>A:</b> It can be both. If you have animation that’s placed for good purpose, it can help people understand what’s happening. But if you get a bit too crazy it can hurt the experience. (google safer animation of the web)\n\n<b>Q:</b> Who owns animation? Is it a UX person, UI Person, programming skill?\n<br><b>A:</b> You need everyone, good code, good ux intention, it needs to be affected by your entire team. You have to work together. The earlier the better (where it comes up in the process). As soon as possible and everyone needs to help.\n\n<b>Q:</b> Good example of a design guide for animation?\n<br><b>A:</b> Google style guide. Material Design; IBM has a good one.\n\n<b>Q:</b> CSS, SVG, JS, all battling for the animation spotlight. Your thoughts?\n<br><b>A:</b> Simple animations, CSS; Complex animations JS; SVGs, manipulating shapes; they each have their own strengths.\n\n<h3>My Takeaway</h3>\n\nThere's a science to animation and I'm going head first into the 12 principles of Animation by Disney that Val referenced.\n\nCubic bezier has always been a bit of a mystery to me. But from Val's talk, it's simply the manual way of creating animations in comparison to the defaults that CSS comes with; you have more control over the specifics. Motivated to look into this a bit more since I've recently been doing A/B testing on animations and their impact on conversions. The tool reference, <a href=\"http://cubic-bezier.com\" target=\"_blank\" rel=\"noopener\">cubic-bezier.com</a> seems like an awesome starting point.\n\n## Jessica Svendsen - Designing for Display\n\n<a href=\"https://twitter.com/jessicasvendsen\" target=\"_blank\" rel=\"noopener\">@jessicasvendsen</a> / <a href=\"http://jessicasvendsen.com\" target=\"_blank\" rel=\"noopener\">jessicasvendsen.com</a>\n\n<ul>\n\t<li>\"I am interested in imperfections, quirkiness, insanity, unpredictability. That’s what we really pay attention to anyway.”</li>\n\t<li>\"There are two types of designers, those who design systems and those who design content.\"</li>\n\t<li><a href=\"http://charlierose.com\">charlierose.com</a></li>\n\t<li>\"Clarifying is our business, obscuring is our pleasure.” Sulki and Min</li>\n\t<li>\"Modernism is the result of design by committee\"</li>\n\t<li>“I’m always trying to turn things upside down to see if they look any better.”</li>\n\t<li>“I am a real believer of the impractical in school. That’s not making things that are irrelevant. Impractical doesn’t mean irrelevant. But I don’t think that the restrictions of the commercial world are necessarily meaningful.” Michael Rock</li>\n\t<li>The best jobs require the least amount of recruitment.</li>\n\t<li>Work with designers who have a point of view about design and are willing to fight for it.</li>\n\t<li>Be a generalist as long as possible. </li>\n\t<li>Avoid breifs</li>\n\t<li>If you want to create idea-driven work, don’t compile moldboards or swipe; when you start creating work, step away from the computer</li>\n\t<li>Just because you can, doesn’t mean you should.</li>\n\t<li>Make sure what you’re making is meaningful</li>\n\t<li>A worthy opportunity will never present itself at a convenient moment. </li>\n</ul>\n\n<h3>Q&A</h3>\n\n<b>Q:</b> How much time does it usually take you to get from nothing to an idea that works?\n<br><b>A:</b> Goes back to the central idea, it tends to be pretty fast. Other projects your iterating until your pushing your own boundaries. Those are the one’s that take long.\n\n<b>Q:</b> If we introduce unpredictably. Is there a predictable framework to produce unpredictability?\n<br><b>A:</b> Not for making something different for the purpose of making something difference, not a good strategy. Using the content at hand.\n\n<b>Q:</b> Is randomness a good thing?\n<br><b>A:</b> Randomness on the on screen experience has a huge potential in disrupting experience and creating something new. When you introduce too much randomization, you lose your own point of view. When you think about randomization, it still has to be in tandem with the idea of curation. There are limitations on how it could work.\n\n<b>Q:</b> Is generic always bad?\n<br><b>A:</b> On the one hand, there is design that is accesibile. Design is this invisible format that lends itself to communicating an idea. A lot of times design is still not considered in the process, so much opportunity to break outside the process. When it feels like it’s intended for everyone, you feel generic. When it’s something intended for something in specific, it feels intended.\n\n<h3>My Takeaway</h3>\n\nIt's refreshing seeing a graphic designer within a cast of web folks. What I most respect about graphic designers is how they come up with their ideas; and this is exactly what her talk was on. A recurring theme that I've noticed throughout the talks is addressing the design problem we're seeing right now on the web: all of our designs look the same. This is something we're all struggling with regardless of the industries. A good amount of designers on the web don't have a formal design background; this is the main reason designs are being copied over and over again. Jessica did a good job of giving insight to her process and how she comes up with her ideas. Very inspiring and helped me reflect on my current process.\n\n## Tammy Everts - How to Find What Design Factors Influence Conversion Rates\n\n<a href=\"https://twitter.com/tameverts\">@tameverts</a>\n\n<ul>\n\t<li>Performance affects peoples perception of a site and whether they return to the site or not.</li>\n\t<li>WPOstats.com (tool)</li>\n\t<li>Pages with more scripts are less likely to convert.</li>\n\t<li>The number of dom elements matter ALOT. Optimal 400-700</li>\n\t<li>Sessions that convert have fewer images than sessions that didn’t. (37% fewer images)</li>\n\t<li>Machine learning FTW! https://github.com/wpo-foundation/beacon-ml (tool)</li>\n\t<li>Dom ready (aka dom content loaded) and average session load time were the best combined indicators of bounce rate (at 4.5s bounce probability jumps to -60%)</li>\n\t<li>Start render is important (first paint is not start render / does not recommend first paint as a metric); Amazon's start render and repeat view are the same.</li>\n\t<li>People who come from search are less impatient; people coming from Facebook were more likely to drop off (Facebook is fast, link might’ve been misleading). Both google and Facebook are fast and perception might affect.</li>\n\t<li>6s conversion shrinks by 50% on browse pages (not checkout)</li>\n\t<li>Conversion Rate Impact Score</li>\n\t<li>User Timing - www.w3.org/TR/user-timing/</li>\n\t<li>2 second imporvemnt in median page load time almost doubled mobile conversions for fanatics.com</li>\n\t<li>User behavior is context sensitive and always changing</li>\n\t<li>Performance issues are unpredictable</li>\n\t<li>You can’t understand what you don’t measure</li>\n\t<li>You don’t have to optimize everything</li>\n\t<li>Even small design changes can make a big difference</li>\n\t<li><a href=\"http://performancebeacon.com\">performancebeacon.com</a> - web performance, analytics, and optimization blog</li>\n\t<li><a href=\"http://wpostats.com\">wpostats.com</a> - case studies and experiments demonstrating the impact of web performance optimization (WPO) on user experience and business metrics.</li>\n</ul>\n\n<h3>Q&amp;A</h3>\n\n<b>Q:</b> If you’re a small agency what are some free toolsets to find analysis and find info quickly?\n<br><b>A:</b> Webpagetest.org but won’t give you much user insight. RUM (real user monitoring) search on google and most have free trials.\n\n<b>Q:</b> Audience is diverse in RUM, new market?\n<br><b>A:</b> What I see happening are two different things, some companies are creating their own data science teams; tools are realizing that most companies won’t do this, the tool does the data science for you; building out algorithms to make 90% of data actionable.\n\n<b>Q:</b> Traffic source, opportunity with pre caching tools that are coming to the web, will this make a difference?\n<br><b>A:</b> Used to work for a company called rad that could predict next page based on previous user data. You could turn it off for mobile to avoid killing your data.\n\n<b>Q:</b> Website that asked you to say which one was faster. Are modals successful?\n<br><b>A:</b> Implemented properly, popups do help in terms of driving other areas of business. There’s been less done on how well they perform and their impact on those types of conversions.\n\n<h3>My Takeaway</h3>\n\nTesting is what my day to day job entails of nowadays. After many of the talks, I keep on asking myself the same question \"But has it been tested to help conversions?\". I was able to get a different and more insightful perspective on what I've been testing (and the way I've been testing) for the past year. Added two new resources to my arsenal, <a href=\"http://performancebeacon.com\">performancebeacon.com</a> &amp; <a href=\"http://wpostats.com\">wpostats.com</a>. What more can I ask for?\n\n## Stephen Hay - The Tail And Its Dog\n\n<a href=\"https://twitter.com/stephenhay\">@stephenhay</a>\n\n<ul>\n\t<li>Art direction is storytelling (well, that’s part of it anywhere)</li>\n\t<li>We’re wired for stories. When we get together with friends, we tell each other stories; we read stories to our children, etc.</li>\n\t<li>Wrote article on A List Apart <a href=\"http://alistapart.com/article/artdirweb\" target=\"_blank\" rel=\"noopener\">“Art direction and the web”</a></li>\n\t<li>Two questions that are important: 1) what story are we telling; 2) how are we telling that story?</li>\n\t<li>Author of Responsive Design Workflow</li>\n\t<li> <a href=\"http://hansbrinker.com\" target=\"_blank\" rel=\"noopener\">Hans Brinker Budge Hotel</a> website is an example of art direction / tells a story</li>\n\t<li>\"There’s no such thing as bad design, only inappropriate design\" - Neville Brody</li>\n\t<li>Why do we have bad art direction on the web? Lack of design foundation; Lack of critical thinking; Reliance on tools</li>\n\t<li>The Design Funnel Manifesto: Define - Values and goals; Discover - Moods and metaphors; Generate - Ideas, define a concept; Create - A visual language (this is where components live); Design</li>\n\t<li>When you don’t do the above, you’re putting the cart before the worse, or the tail is wagging the dog</li>\n\t<li>Start with the story, it’s more memorable. </li>\n\t<li>“We’re just going to tell you what we need to tell you and it will just look nice.” Utilitarian approach</li>\n\t<li>Ask yourself, what if… any kind of question that you ask yourself that gives an unreasonable constraint gets your creative juice flowing</li>\n\t<li>Card trick - Are there sections? Consider transitions. Is it finished? Emphasize the flaws</li>\n\t<li>Ask yourself “What problem does this solve?”; “Is this congruent with the story?”</li>\n\t<li>When you look at something from the same angle all the time, the inconsistencies start becoming invisible.</li>\n\t<li>“Where does this fail?”</li>\n\t<li>Don’t pick the low hanging fruit. Sketch past the first ideas that pop into your head.</li>\n\t<li>Zoom in, Zoom out. It’s important to zoom in to components, but you need to zoom out. (big picture)</li>\n\t<li>The Organized Mind by Daniel J. Levitin</li>\n\t<li>Focus on the problem - don’t let the tail wag the dog</li>\n\t<li>Your work does not define you. Make mistakes.</li>\n\t<li>Recognize your uniqueness </li>\n</ul>\n\n<h3>Q&amp;A</h3>\n\n<b>Q:</b> Do you think design patterns are bad?\n<br><b>A:</b> No\n\n<b>Q:</b> What do you think the reason is for designs on the web looking the same?\n<br><b>A:</b> Laziness. People have an idea that if Facebook does it, they must know what they’re doing, so let’s do that.\n\n<b>Q:</b> Isn’t sameness good for UX?\n<br><b>A:</b> I don’t they it’s either or, they’re not mutually exclusive. Tell a story and have something creative.\n\n<b>Q:</b> Do you think there’s a chance that there’s a emergence in what you see is what you get. Do you think these are responsible for sameness or design as the final product be in the hands of the user?\n<br><b>A:</b> With Squarespace you need to know the function of what they are. They enable people to create a quick website.\n\n<b>Q:</b> Is there a longevity thing? The best gig you could get as a web developer is a website for a movie. It will be useful for 4 weeks and then it will get removed.\n<br><b>A:</b> Creative doesn’t mean that you’re going to add a logo somewhere else other than the top left. Creative is telling a story with a website.\n\n<h3>My takeaway</h3>\n\nWe’re all struggling with sameness on the web. Story telling is the way to solve this crisis. Plain and simple.\n\n## Ulrika Malmgren - How testers can be a liability\n\n<a href=\"https://twitter.com/ulrikama\" target=\"_blank\" rel=\"noopener\">@ulrikama</a>\n\n<ul>\n\t<li>Don’t test quality in - you need to build it in (don’t rely on someone catching your bugs, build your code strong from the beginning)</li>\n\t<li>Testers break stuff - MYTH</li>\n\t<li>Testing is very creative, you have to think of so many different things and ways to break what your given</li>\n\t<li>Testing is about understanding why, for whom and how; visualizing what know and what we’re missing; performing actions to have more info.</li>\n\t<li>Programmers can’t test their own code MYTH</li>\n\t<li><a href=\"https://rework.withgoogle.com/blog/five-keys-to-a-successful-google-team/\" target=\"_blank\" rel=\"noopener\">The five keys to a successful Google Team</a> - Google</li>\n\t<li><a href=\"http://cci.mit.edu/mciresearchpage.html\" target=\"_blank\" rel=\"noopener\">Measuring Collective Intelligence</a> - MIT</li>\n\t<li><a href=\"http://www.satirworkshops.com/wp-content/uploads/2009/06/SatirTemperatureReading.pdf\" target=\"_blank\" rel=\"noopener\">Temperature Reading</a> - Virginia Satir</li>\n\t<li>How you communicate with your team is affecting how well you can perform</li>\n\t<li>If it’s always the loud persons ideas that get heard, are they always the best of ideas?</li>\n\t<li>User Story Mapping (book) - Looking at the users experience of something and having that as the baseline of how you organize your work.B2D - Behavior Driven Development</li>\n\t<li>B2D - Behavior Driven Development</li>\n\t<li>How you understand the complexity, the goal and everyone part in achieving it will impact your success. </li>\n\t<li>Unit test vs. Integration test</li>\n\t<li>Programmers - test your own stuff; focus and learn</li>\n\t<li>All team members - Don’t frown on soft values and exercises</li>\n\t<li>See testers as ambassadors for quality; raise the knowledge level of your team; reflect on communication; work with understanding; sharpen your tools.</li>\n\t\n</ul>\n\n<b>Q:</b> You made a good point about everyone being involved in testing. How does that work with planning of a project. When we got over budget, testing was always cut. How can we make sure that QA and testing of our product becomes an integral part of the product\n<br><b>A:</b> Invite testers/QA team members in the early conversations; during actual development during the small feedback slices so it doesn’t have to be in the end.\n\n<b>Q:</b> When there’s a disparagement of design and development is there a better way to make those align better?\n<br><b>A:</b> When things are worked on simultaneously everyone is on the same page. Pairing designers with developers early on will give better feedback.\n\n<b>Q:</b> What are your thoughts on traditional user testing; behind mirror scenarios.\n<br><b>A:</b> Two completely different purposes; when you talk to users is to get information from them, the automation is to make sure that nothing is broken. Automation is good for the purpose of giving reliability. User testing is more about learning things and the problem area\n\n<b>Q:</b> Complexity of tests will give more respect to testers?\n<br><b>A:</b> There are separate areas in a sense, I like the idea of not having testers doing monkey work. Having those people be able to do more creative work would be nice.\n\n<h3>My takeaway</h3>\n\nTesting (QA) is highly underrated. What I've realized recently is that, as developers, we use QA as a safety net (it's cool if it doesn't really work the way it should, QA will let me know); this is something that Ulrika touched on and something that I'll make a conscious improvement on with my team as well as myself. Another interesting point is involving the QA team/person from the beginning will help you avoid bigger headaches down the road.\n\n## Sara Soueidan - SVG in Motion (A Case Study)\n\n<a href=\"https://twitter.com/SaraSoueidan\" target=\"_blank\" rel=\"noopener\">@SaraSoueidan</a>\n\n<ul>\n<li>She's the front-end developer behind the new Smashing Magazine website</li>\n<li>Every time design needs to be changed because CSS is shit, a kitten dies somehwere - Lea Verou</li>\n<li>Awesome CSS hack (too long to jot down)</li>\n<li>box-decoration-break - not supported in all bowsers yet</li>\n<li>dowebsitesneedtolookthesameineverybrowser.com (NO)</li>\n<li>Creating links that down overlap the descendents of the link</li>\n<li>Custom list bullets / CSS Counters allow us to number a list of items of any type (headings, figures, etc), numbers are then incremented per element. </li>\n<li>Not only should the image be a good candidate for SVG, but SVG should also be a good candidate for the image.</li>\n<li>Some screen readers read uppercase words as individual letters (use text-transform:uppercase)</li>\n<li>The web is accessibly and we are the ones who break it. If we break it, we should fix it.</li>\n<li>font-size: calc(16px + 3vw); - for responsive headers</li>\n</ul>\n\n<b>Q:</b> In what form and grade of completion did dan deliver mockups\n<br><b>A:</b> He delivered photoshop files, but those were useless because I don’t have photoshop. I just opened the images and started coding.\n\n<b>Q:</b> What browser and operating systems are supported and how (for the new Smashing Magazine website)?\n<br><b>A:</b> We didn’t care about IE8. We’re not optimizing for old browsers but we’re providing the basic functionality. We might remove js from IE8. Progressive enhancement is good for your health.\n\n<b>Q:</b> Impact on performance (calc)\n<br><b>A:</b> I’ve asked a few experts and it has no impact on performance at all.\n\n<h3>My takeaway</h3>\n\nMind blown. The calc example for responsive typography was something I wasn't aware of before and will definitely be implmenting as soon as I get back to New York. I wasn't able to take as many notes because I was too busy being amazed (I did take plenty of screenshots though). Sara's the front-end developer behind the new Smashing Magazine being created. Hands down my favorite talk so far.\n\n## Jeremy Keith - Resilience\n\n<ul>\n\t<li>Pastels law</li>\n\t<li>If you receive a packet and it’s badly formed, do what you have to do with it and don’t be a dick about it.</li>\n\t<li>But if you’re going to be sending these packets, make it as organized as possible.</li>\n\t<li>Be liberal in what you accept.</li>\n\t<li>3 step approach\n\t<ul>\n\t<li>Step 1 identify core functionality</li>\n\t<li>Step 2 Make that functionality available using the simplest technology</li>\n\t<li>Step 3 enhance!</li>\n\t</ul>\n\t</li>\n\t<li>Services workers - websites that work off line</li>\n\n</ul>\n\n<h3>No Q+A</h3>\n\n<h3>My takeaway</h3>\n\nLet’s make a web that’s resilient in the way it works. Yup, got it.\n\nView <a href=\"http://julian.is/article/smashingconf-barcelona-2016-day-2/\">day 2 notes</a>\n",
        "type": "MarkdownRemark",
        "contentDigest": "52b027530535d9f1a1d7bcecf14144de",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "SmashingConf Barcelona 2016 Day 1 Notes",
        "author": "Julian Gaviria",
        "description": "Marcin Wichary with Typography, Val Head and animation, & Jessica Svendsen being so darn original, need I say more?",
        "excerpt": "Marcin Wichary with Typography, Val Head and animation, & Jessica Svendsen being so darn original, need I say more?",
        "time": "13 Minutes",
        "comments": false,
        "icon": "/assets/aico-smashing-magazine.svg",
        "slug": "smashingconf-barcelona-2016-day-1",
        "path": "/article/smashingconf-barcelona-2016-day-1/",
        "date": "2016-10-25",
        "_PARENT": "a8bbdf14-408c-5ed4-9d4b-10247be9a35f"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nI've made it all the way out to Barcelona for my second <a href=\"http://smashingconf.com\" target=\"_blank\" rel=\"noopener\">SmashingConf</a>. I've attended plenty of conferences in the states but I wanted to learn something new in regards to both culture and web design. Needless to say, the first day at SmashingConf and my second day in Barcelona did not fall short of expectations.\n\nBelow are some of the notes I've taken during the first day of talks. Keep in mind that these notes weren't edited and they were added just as they were jotted down. Some information may be missing (I didn't jot everything down); if I've misquoted something or something needs fixing, please let me know and I'll address. Enjoy!\n\n## Marcin Wichary - To Hell for Type\n\n<a href=\"https://twitter.com/mwichary\" target=\"_blank\" rel=\"noopener\">@mwichary</a>\n\n<h3>Talk Notes</h3>\n<ul><li>Poland did not have it’s own keyboards when computers began hitting mainstream. Most of the computers in Poland were individually imported from other countries (main the USA). </li>\n<li>So many types of quotation marks. What Medium has to take into consideration for their platform</li>\n<li>Tabular numbers (supported feature of open type).</li>\n<li>Chromes spellchecker learns typography. Did not recognize the different apostrophes that medium has.\nMarcin fixed chrome and created patch that chrome has now implemented (awesome).</li>\n<li>All the underlines you see in medium are gradients on each word. </li>\n<li>Uses letter outlines of the same color of the background to show spaces in the underline for each letter that overlaps.</li>\n<li>“Slightly worse is better than nothing”</li>\n<li>Typography has always been messy. Typewriters were always so limited. Hacks have been around since day one. To show negative margins, letters would bleed out of the letter block to overlap other blocks.</li>\n<li>If you go to Medium and search for C:\\Windows you will see the website in the System font.</li>\n<li>Open sourcing his type tool</li>\n</ul>\n\n<h3>Q&A</h3>\n\n<b>Q:</b> How did the system fonts (bug) make it into production?<br>\n<b>A:</b> It happened in a small amount of setups that only a few of the users had. Better to get things out there quicker and then adjust rather than wait until everything is perfect.\n\n<b>Q:</b> Do you think that the use of comic sans should be punishable by law?\n<br><b>A:</b> No! Look up the history of comic sans (pretty interesting). It's great for people to be able to choose fonts (even if they choose the wrong ones), it shows personality.\n\n<b>Q:</b> What did you use for your presentation with all the animations and what seemed to be live type?\n<br><b>A:</b> Webapp for the presentation. <i>\\*I'll try and provide the link; I wasn't able to write it down.</i>\n\n<b>Q:</b> (I did not write it down)\n<br><b>A:</b> Keyboards are around 150 years old. Writing a book on keyboards.\n\n<h3>My Takeaway</h3>\n\nTypography on the web is way more complicated than it's perceived. Just by the quotation example that Marcin presented, and this seems to be just the tip of the iceberg. There's a book that has been sitting on my bookshelf for quite some time now called <a href=\"https://abookapart.com/products/on-web-typography\" target=\"_blank\" rel=\"noopener\">\"On Web Typography\"</a> by Jason Santamaria. Even though it's a couple of years old now, I'll be dusting it off when I get home and give it a go.\n\n## Val Head - Designing Meaningful Animation\n\n<a href=\"https://twitter.com/vlh\" target=\"_blank\" rel=\"noopener\">@vlh</a>\n\n<ul>\n\t<li>We should use animation more on the web. Not everyone agrees.</li>\n\t<li>Don’t over do it, please (showed overdone example).</li>\n\t<li>Stripe checkout. The reason stripe animations feel good is because they’re put there intentionally. The reason the flipping paragraphs where in the previous example is because we can do it in CSS (no real reason). </li>\n\t<li>Great UI animations have purpose and style.</li>\n\t<li>The core principles: the 12 principles of Animation by Disney  (book). the12prciniples.tumblr.com. Sometimes also summarized as the 10 principles of motion-design.</li>\n\t<li>Animation Principle - Timing & Spacing (most important principle)\n\t<ul>\n\t\t<li>Timing - The amount of time it takes of an action to happen. The duration. (bouncing ball is the hello world of animation).</li>\n\t\t<li>Spacing - The changes in speed over the duration of the action’s timing.</li>\n\t\t<li>Benefits of timing and spacing - makes animated object to obey the laws of physics / establishes mood, emotion and reaction.</li>\n\t\t<li>What sort of physical traits fit our modal?</li>\n\t\t<li>What sort of mood or emotion should it show now?</li>\n\t</ul>\t</li>\n\t<li>By the way we make things move, we say so much.</li>\n\t<li>CSS easing keyboard is limited. That’s why we have Cubic Bezier (cubic-bezier.com); everything is better with cubic-beziers. Use custom cubic-beziers than the defaults.</li>\n\t<li>Animation Principle - Follow through - Not everything comes to a stop at once; easiest way to get follow through, choose a bezier curve that goes outside of the graph</li>\n\t<li>Animation Principle - Secondary Action (twitter heart animation)</li>\n\t<li>Choreography - Designing all your UI animations to feel logical and related; similar objects animate in similar ways; Entrances informs exits (be consistent by how things come in and out); match velocities (instead of durations).  </li>\n\t<li>Sites for finding good examples of animation: \n\t<ul>\n\t\t<li><a href=\"http://artofthetitle.com\" target=\"_blank\" rel=\"noopener\">artofthetitle.com</a> - title animations (behind the scenes)</li>\n\t\t<li><a href=\"http://capptivate.co\" target=\"_blank\" rel=\"noopener\">capptivate.co</a> - gallery site of good iOS animations</li>\n\t\t<li><a href=\"http://uyi.io\" target=\"_blank\" rel=\"noopener\">uyi.io</a> - collects good examples of web animations and categorizes them on how they work</li>\n\t</ul></li>\n\t<li>Book Val Wrote - Designing Interface Animation - <a href=\"https://designinginterfaceanimation.com\" target=\"_blank\" rel=\"noopener\">https://designinginterfaceanimation.com</a> </li>\n</ul>\n\n<b>Q:</b> What about accessibility - it is aiding or is it confusing?\n<br><b>A:</b> It can be both. If you have animation that’s placed for good purpose, it can help people understand what’s happening. But if you get a bit too crazy it can hurt the experience. (google safer animation of the web)\n\n<b>Q:</b> Who owns animation? Is it a UX person, UI Person, programming skill?\n<br><b>A:</b> You need everyone, good code, good ux intention, it needs to be affected by your entire team. You have to work together. The earlier the better (where it comes up in the process). As soon as possible and everyone needs to help.\n\n<b>Q:</b> Good example of a design guide for animation?\n<br><b>A:</b> Google style guide. Material Design; IBM has a good one.\n\n<b>Q:</b> CSS, SVG, JS, all battling for the animation spotlight. Your thoughts?\n<br><b>A:</b> Simple animations, CSS; Complex animations JS; SVGs, manipulating shapes; they each have their own strengths.\n\n<h3>My Takeaway</h3>\n\nThere's a science to animation and I'm going head first into the 12 principles of Animation by Disney that Val referenced.\n\nCubic bezier has always been a bit of a mystery to me. But from Val's talk, it's simply the manual way of creating animations in comparison to the defaults that CSS comes with; you have more control over the specifics. Motivated to look into this a bit more since I've recently been doing A/B testing on animations and their impact on conversions. The tool reference, <a href=\"http://cubic-bezier.com\" target=\"_blank\" rel=\"noopener\">cubic-bezier.com</a> seems like an awesome starting point.\n\n## Jessica Svendsen - Designing for Display\n\n<a href=\"https://twitter.com/jessicasvendsen\" target=\"_blank\" rel=\"noopener\">@jessicasvendsen</a> / <a href=\"http://jessicasvendsen.com\" target=\"_blank\" rel=\"noopener\">jessicasvendsen.com</a>\n\n<ul>\n\t<li>\"I am interested in imperfections, quirkiness, insanity, unpredictability. That’s what we really pay attention to anyway.”</li>\n\t<li>\"There are two types of designers, those who design systems and those who design content.\"</li>\n\t<li><a href=\"http://charlierose.com\">charlierose.com</a></li>\n\t<li>\"Clarifying is our business, obscuring is our pleasure.” Sulki and Min</li>\n\t<li>\"Modernism is the result of design by committee\"</li>\n\t<li>“I’m always trying to turn things upside down to see if they look any better.”</li>\n\t<li>“I am a real believer of the impractical in school. That’s not making things that are irrelevant. Impractical doesn’t mean irrelevant. But I don’t think that the restrictions of the commercial world are necessarily meaningful.” Michael Rock</li>\n\t<li>The best jobs require the least amount of recruitment.</li>\n\t<li>Work with designers who have a point of view about design and are willing to fight for it.</li>\n\t<li>Be a generalist as long as possible. </li>\n\t<li>Avoid breifs</li>\n\t<li>If you want to create idea-driven work, don’t compile moldboards or swipe; when you start creating work, step away from the computer</li>\n\t<li>Just because you can, doesn’t mean you should.</li>\n\t<li>Make sure what you’re making is meaningful</li>\n\t<li>A worthy opportunity will never present itself at a convenient moment. </li>\n</ul>\n\n<h3>Q&A</h3>\n\n<b>Q:</b> How much time does it usually take you to get from nothing to an idea that works?\n<br><b>A:</b> Goes back to the central idea, it tends to be pretty fast. Other projects your iterating until your pushing your own boundaries. Those are the one’s that take long.\n\n<b>Q:</b> If we introduce unpredictably. Is there a predictable framework to produce unpredictability?\n<br><b>A:</b> Not for making something different for the purpose of making something difference, not a good strategy. Using the content at hand.\n\n<b>Q:</b> Is randomness a good thing?\n<br><b>A:</b> Randomness on the on screen experience has a huge potential in disrupting experience and creating something new. When you introduce too much randomization, you lose your own point of view. When you think about randomization, it still has to be in tandem with the idea of curation. There are limitations on how it could work.\n\n<b>Q:</b> Is generic always bad?\n<br><b>A:</b> On the one hand, there is design that is accesibile. Design is this invisible format that lends itself to communicating an idea. A lot of times design is still not considered in the process, so much opportunity to break outside the process. When it feels like it’s intended for everyone, you feel generic. When it’s something intended for something in specific, it feels intended.\n\n<h3>My Takeaway</h3>\n\nIt's refreshing seeing a graphic designer within a cast of web folks. What I most respect about graphic designers is how they come up with their ideas; and this is exactly what her talk was on. A recurring theme that I've noticed throughout the talks is addressing the design problem we're seeing right now on the web: all of our designs look the same. This is something we're all struggling with regardless of the industries. A good amount of designers on the web don't have a formal design background; this is the main reason designs are being copied over and over again. Jessica did a good job of giving insight to her process and how she comes up with her ideas. Very inspiring and helped me reflect on my current process.\n\n## Tammy Everts - How to Find What Design Factors Influence Conversion Rates\n\n<a href=\"https://twitter.com/tameverts\">@tameverts</a>\n\n<ul>\n\t<li>Performance affects peoples perception of a site and whether they return to the site or not.</li>\n\t<li>WPOstats.com (tool)</li>\n\t<li>Pages with more scripts are less likely to convert.</li>\n\t<li>The number of dom elements matter ALOT. Optimal 400-700</li>\n\t<li>Sessions that convert have fewer images than sessions that didn’t. (37% fewer images)</li>\n\t<li>Machine learning FTW! https://github.com/wpo-foundation/beacon-ml (tool)</li>\n\t<li>Dom ready (aka dom content loaded) and average session load time were the best combined indicators of bounce rate (at 4.5s bounce probability jumps to -60%)</li>\n\t<li>Start render is important (first paint is not start render / does not recommend first paint as a metric); Amazon's start render and repeat view are the same.</li>\n\t<li>People who come from search are less impatient; people coming from Facebook were more likely to drop off (Facebook is fast, link might’ve been misleading). Both google and Facebook are fast and perception might affect.</li>\n\t<li>6s conversion shrinks by 50% on browse pages (not checkout)</li>\n\t<li>Conversion Rate Impact Score</li>\n\t<li>User Timing - www.w3.org/TR/user-timing/</li>\n\t<li>2 second imporvemnt in median page load time almost doubled mobile conversions for fanatics.com</li>\n\t<li>User behavior is context sensitive and always changing</li>\n\t<li>Performance issues are unpredictable</li>\n\t<li>You can’t understand what you don’t measure</li>\n\t<li>You don’t have to optimize everything</li>\n\t<li>Even small design changes can make a big difference</li>\n\t<li><a href=\"http://performancebeacon.com\">performancebeacon.com</a> - web performance, analytics, and optimization blog</li>\n\t<li><a href=\"http://wpostats.com\">wpostats.com</a> - case studies and experiments demonstrating the impact of web performance optimization (WPO) on user experience and business metrics.</li>\n</ul>\n\n<h3>Q&amp;A</h3>\n\n<b>Q:</b> If you’re a small agency what are some free toolsets to find analysis and find info quickly?\n<br><b>A:</b> Webpagetest.org but won’t give you much user insight. RUM (real user monitoring) search on google and most have free trials.\n\n<b>Q:</b> Audience is diverse in RUM, new market?\n<br><b>A:</b> What I see happening are two different things, some companies are creating their own data science teams; tools are realizing that most companies won’t do this, the tool does the data science for you; building out algorithms to make 90% of data actionable.\n\n<b>Q:</b> Traffic source, opportunity with pre caching tools that are coming to the web, will this make a difference?\n<br><b>A:</b> Used to work for a company called rad that could predict next page based on previous user data. You could turn it off for mobile to avoid killing your data.\n\n<b>Q:</b> Website that asked you to say which one was faster. Are modals successful?\n<br><b>A:</b> Implemented properly, popups do help in terms of driving other areas of business. There’s been less done on how well they perform and their impact on those types of conversions.\n\n<h3>My Takeaway</h3>\n\nTesting is what my day to day job entails of nowadays. After many of the talks, I keep on asking myself the same question \"But has it been tested to help conversions?\". I was able to get a different and more insightful perspective on what I've been testing (and the way I've been testing) for the past year. Added two new resources to my arsenal, <a href=\"http://performancebeacon.com\">performancebeacon.com</a> &amp; <a href=\"http://wpostats.com\">wpostats.com</a>. What more can I ask for?\n\n## Stephen Hay - The Tail And Its Dog\n\n<a href=\"https://twitter.com/stephenhay\">@stephenhay</a>\n\n<ul>\n\t<li>Art direction is storytelling (well, that’s part of it anywhere)</li>\n\t<li>We’re wired for stories. When we get together with friends, we tell each other stories; we read stories to our children, etc.</li>\n\t<li>Wrote article on A List Apart <a href=\"http://alistapart.com/article/artdirweb\" target=\"_blank\" rel=\"noopener\">“Art direction and the web”</a></li>\n\t<li>Two questions that are important: 1) what story are we telling; 2) how are we telling that story?</li>\n\t<li>Author of Responsive Design Workflow</li>\n\t<li> <a href=\"http://hansbrinker.com\" target=\"_blank\" rel=\"noopener\">Hans Brinker Budge Hotel</a> website is an example of art direction / tells a story</li>\n\t<li>\"There’s no such thing as bad design, only inappropriate design\" - Neville Brody</li>\n\t<li>Why do we have bad art direction on the web? Lack of design foundation; Lack of critical thinking; Reliance on tools</li>\n\t<li>The Design Funnel Manifesto: Define - Values and goals; Discover - Moods and metaphors; Generate - Ideas, define a concept; Create - A visual language (this is where components live); Design</li>\n\t<li>When you don’t do the above, you’re putting the cart before the worse, or the tail is wagging the dog</li>\n\t<li>Start with the story, it’s more memorable. </li>\n\t<li>“We’re just going to tell you what we need to tell you and it will just look nice.” Utilitarian approach</li>\n\t<li>Ask yourself, what if… any kind of question that you ask yourself that gives an unreasonable constraint gets your creative juice flowing</li>\n\t<li>Card trick - Are there sections? Consider transitions. Is it finished? Emphasize the flaws</li>\n\t<li>Ask yourself “What problem does this solve?”; “Is this congruent with the story?”</li>\n\t<li>When you look at something from the same angle all the time, the inconsistencies start becoming invisible.</li>\n\t<li>“Where does this fail?”</li>\n\t<li>Don’t pick the low hanging fruit. Sketch past the first ideas that pop into your head.</li>\n\t<li>Zoom in, Zoom out. It’s important to zoom in to components, but you need to zoom out. (big picture)</li>\n\t<li>The Organized Mind by Daniel J. Levitin</li>\n\t<li>Focus on the problem - don’t let the tail wag the dog</li>\n\t<li>Your work does not define you. Make mistakes.</li>\n\t<li>Recognize your uniqueness </li>\n</ul>\n\n<h3>Q&amp;A</h3>\n\n<b>Q:</b> Do you think design patterns are bad?\n<br><b>A:</b> No\n\n<b>Q:</b> What do you think the reason is for designs on the web looking the same?\n<br><b>A:</b> Laziness. People have an idea that if Facebook does it, they must know what they’re doing, so let’s do that.\n\n<b>Q:</b> Isn’t sameness good for UX?\n<br><b>A:</b> I don’t they it’s either or, they’re not mutually exclusive. Tell a story and have something creative.\n\n<b>Q:</b> Do you think there’s a chance that there’s a emergence in what you see is what you get. Do you think these are responsible for sameness or design as the final product be in the hands of the user?\n<br><b>A:</b> With Squarespace you need to know the function of what they are. They enable people to create a quick website.\n\n<b>Q:</b> Is there a longevity thing? The best gig you could get as a web developer is a website for a movie. It will be useful for 4 weeks and then it will get removed.\n<br><b>A:</b> Creative doesn’t mean that you’re going to add a logo somewhere else other than the top left. Creative is telling a story with a website.\n\n<h3>My takeaway</h3>\n\nWe’re all struggling with sameness on the web. Story telling is the way to solve this crisis. Plain and simple.\n\n## Ulrika Malmgren - How testers can be a liability\n\n<a href=\"https://twitter.com/ulrikama\" target=\"_blank\" rel=\"noopener\">@ulrikama</a>\n\n<ul>\n\t<li>Don’t test quality in - you need to build it in (don’t rely on someone catching your bugs, build your code strong from the beginning)</li>\n\t<li>Testers break stuff - MYTH</li>\n\t<li>Testing is very creative, you have to think of so many different things and ways to break what your given</li>\n\t<li>Testing is about understanding why, for whom and how; visualizing what know and what we’re missing; performing actions to have more info.</li>\n\t<li>Programmers can’t test their own code MYTH</li>\n\t<li><a href=\"https://rework.withgoogle.com/blog/five-keys-to-a-successful-google-team/\" target=\"_blank\" rel=\"noopener\">The five keys to a successful Google Team</a> - Google</li>\n\t<li><a href=\"http://cci.mit.edu/mciresearchpage.html\" target=\"_blank\" rel=\"noopener\">Measuring Collective Intelligence</a> - MIT</li>\n\t<li><a href=\"http://www.satirworkshops.com/wp-content/uploads/2009/06/SatirTemperatureReading.pdf\" target=\"_blank\" rel=\"noopener\">Temperature Reading</a> - Virginia Satir</li>\n\t<li>How you communicate with your team is affecting how well you can perform</li>\n\t<li>If it’s always the loud persons ideas that get heard, are they always the best of ideas?</li>\n\t<li>User Story Mapping (book) - Looking at the users experience of something and having that as the baseline of how you organize your work.B2D - Behavior Driven Development</li>\n\t<li>B2D - Behavior Driven Development</li>\n\t<li>How you understand the complexity, the goal and everyone part in achieving it will impact your success. </li>\n\t<li>Unit test vs. Integration test</li>\n\t<li>Programmers - test your own stuff; focus and learn</li>\n\t<li>All team members - Don’t frown on soft values and exercises</li>\n\t<li>See testers as ambassadors for quality; raise the knowledge level of your team; reflect on communication; work with understanding; sharpen your tools.</li>\n\t\n</ul>\n\n<b>Q:</b> You made a good point about everyone being involved in testing. How does that work with planning of a project. When we got over budget, testing was always cut. How can we make sure that QA and testing of our product becomes an integral part of the product\n<br><b>A:</b> Invite testers/QA team members in the early conversations; during actual development during the small feedback slices so it doesn’t have to be in the end.\n\n<b>Q:</b> When there’s a disparagement of design and development is there a better way to make those align better?\n<br><b>A:</b> When things are worked on simultaneously everyone is on the same page. Pairing designers with developers early on will give better feedback.\n\n<b>Q:</b> What are your thoughts on traditional user testing; behind mirror scenarios.\n<br><b>A:</b> Two completely different purposes; when you talk to users is to get information from them, the automation is to make sure that nothing is broken. Automation is good for the purpose of giving reliability. User testing is more about learning things and the problem area\n\n<b>Q:</b> Complexity of tests will give more respect to testers?\n<br><b>A:</b> There are separate areas in a sense, I like the idea of not having testers doing monkey work. Having those people be able to do more creative work would be nice.\n\n<h3>My takeaway</h3>\n\nTesting (QA) is highly underrated. What I've realized recently is that, as developers, we use QA as a safety net (it's cool if it doesn't really work the way it should, QA will let me know); this is something that Ulrika touched on and something that I'll make a conscious improvement on with my team as well as myself. Another interesting point is involving the QA team/person from the beginning will help you avoid bigger headaches down the road.\n\n## Sara Soueidan - SVG in Motion (A Case Study)\n\n<a href=\"https://twitter.com/SaraSoueidan\" target=\"_blank\" rel=\"noopener\">@SaraSoueidan</a>\n\n<ul>\n<li>She's the front-end developer behind the new Smashing Magazine website</li>\n<li>Every time design needs to be changed because CSS is shit, a kitten dies somehwere - Lea Verou</li>\n<li>Awesome CSS hack (too long to jot down)</li>\n<li>box-decoration-break - not supported in all bowsers yet</li>\n<li>dowebsitesneedtolookthesameineverybrowser.com (NO)</li>\n<li>Creating links that down overlap the descendents of the link</li>\n<li>Custom list bullets / CSS Counters allow us to number a list of items of any type (headings, figures, etc), numbers are then incremented per element. </li>\n<li>Not only should the image be a good candidate for SVG, but SVG should also be a good candidate for the image.</li>\n<li>Some screen readers read uppercase words as individual letters (use text-transform:uppercase)</li>\n<li>The web is accessibly and we are the ones who break it. If we break it, we should fix it.</li>\n<li>font-size: calc(16px + 3vw); - for responsive headers</li>\n</ul>\n\n<b>Q:</b> In what form and grade of completion did dan deliver mockups\n<br><b>A:</b> He delivered photoshop files, but those were useless because I don’t have photoshop. I just opened the images and started coding.\n\n<b>Q:</b> What browser and operating systems are supported and how (for the new Smashing Magazine website)?\n<br><b>A:</b> We didn’t care about IE8. We’re not optimizing for old browsers but we’re providing the basic functionality. We might remove js from IE8. Progressive enhancement is good for your health.\n\n<b>Q:</b> Impact on performance (calc)\n<br><b>A:</b> I’ve asked a few experts and it has no impact on performance at all.\n\n<h3>My takeaway</h3>\n\nMind blown. The calc example for responsive typography was something I wasn't aware of before and will definitely be implmenting as soon as I get back to New York. I wasn't able to take as many notes because I was too busy being amazed (I did take plenty of screenshots though). Sara's the front-end developer behind the new Smashing Magazine being created. Hands down my favorite talk so far.\n\n## Jeremy Keith - Resilience\n\n<ul>\n\t<li>Pastels law</li>\n\t<li>If you receive a packet and it’s badly formed, do what you have to do with it and don’t be a dick about it.</li>\n\t<li>But if you’re going to be sending these packets, make it as organized as possible.</li>\n\t<li>Be liberal in what you accept.</li>\n\t<li>3 step approach\n\t<ul>\n\t<li>Step 1 identify core functionality</li>\n\t<li>Step 2 Make that functionality available using the simplest technology</li>\n\t<li>Step 3 enhance!</li>\n\t</ul>\n\t</li>\n\t<li>Services workers - websites that work off line</li>\n\n</ul>\n\n<h3>No Q+A</h3>\n\n<h3>My takeaway</h3>\n\nLet’s make a web that’s resilient in the way it works. Yup, got it.\n\nView <a href=\"http://julian.is/article/smashingconf-barcelona-2016-day-2/\">day 2 notes</a>\n",
      "fileAbsolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2016-10-25-smashingconf-barcelona-2016-day-1.md"
    },
    "5545757b-696a-59fc-966a-56f07d8cea19": {
      "id": "5545757b-696a-59fc-966a-56f07d8cea19",
      "children": [
        "49d5eb23-1334-5bf7-9d9b-879e0762c7ca"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "044a13437225a73bc9a3ed1aa6c95966",
        "type": "File",
        "mediaType": "image/jpeg",
        "description": "File \"src/images/julian-headshot.jpg\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "images",
      "absolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/images/julian-headshot.jpg",
      "relativePath": "julian-headshot.jpg",
      "extension": "jpg",
      "size": 2518,
      "prettySize": "2.52 kB",
      "modifiedTime": "2018-11-29T16:28:19.994Z",
      "accessTime": "2019-02-16T02:23:59.070Z",
      "changeTime": "2019-02-16T02:39:13.991Z",
      "birthTime": "2018-11-29T16:28:19.994Z",
      "root": "/",
      "dir": "/Users/jgaviria/Documents/Development/www.julian.is/src/images",
      "base": "julian-headshot.jpg",
      "ext": ".jpg",
      "name": "julian-headshot",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 123288241,
      "gid": 2044526916,
      "rdev": 0,
      "blksize": 4194304,
      "ino": 8636247956,
      "blocks": 8,
      "atimeMs": 1550283839070.393,
      "mtimeMs": 1543508899993.7712,
      "ctimeMs": 1550284753990.8904,
      "birthtimeMs": 1543508899993.678,
      "atime": "2019-02-16T02:23:59.070Z",
      "mtime": "2018-11-29T16:28:19.994Z",
      "ctime": "2019-02-16T02:39:13.991Z",
      "birthtime": "2018-11-29T16:28:19.994Z"
    },
    "49d5eb23-1334-5bf7-9d9b-879e0762c7ca": {
      "id": "49d5eb23-1334-5bf7-9d9b-879e0762c7ca",
      "children": [],
      "parent": "5545757b-696a-59fc-966a-56f07d8cea19",
      "internal": {
        "contentDigest": "044a13437225a73bc9a3ed1aa6c95966",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "80f02e41-0a1a-5701-8cdc-91e87d9343b1": {
      "id": "80f02e41-0a1a-5701-8cdc-91e87d9343b1",
      "children": [],
      "parent": "a3694107-b7a6-52c5-ad60-d043ec113ee3",
      "internal": {
        "content": "\nFirst day was a blast. Learned a ton of new stuff that I wasn't privy to before (and able to use in production). I'm surprised to say that the second day has been even better. Again, just a disclaimer that these notes weren't edited and they were added just as they were jotted down. Enjoy!\n\n## John Allsopp - The Mystery Speaker (<a href=\"http://alistapart.com/article/dao\" target=\"_blank\" rel=\"noopener\">Dao of Web Design</a>)\n\n<a href=\"https://twitter.com/johnallsopp\">@johnallsopp</a> / <a href=\"http://webdirections.org\">webdirections.org</a>\n\n<ul>\n\t<li>Predictions “Computers in the future may weigh no more than 1.5 tons”</li>\n\t<li>Humans are bad a predicting exponential growth</li>\n\t<li>‘How did you go bankrupt?’ Bill asked. ‘Two ways,’ Mike said. ‘Gradually and then suddenly’ - Hemingway, the Sun Also Rises</li>\n\t<li>Find the things that change exponentially, they are the things that really impact the world.</li>\n\t<li>Moore’s law - The complexity for minimum component costs increased at a rate of roughly a factor of two per year. Carnally over the short term this rate can be expected to continue, if not to increase.</li>\n\t<li>The best way to predict the future is to invent it - Alan Kay</li>\n\t<li>Prediction - “I think the browser is going to disappear” “Platforms are going to go away; computing will be everywhere because hardware will get cheaper and cheaper and cheaper” “The screen will disappear”</li>\n\t<li>Native apps are a remnant of the jurassic period of computer history, a local maximum that is holding us back..</li>\n\t<li>What is the one weird old trick about exponential growth? We need to act on our research & predictions. Carp Diem. Make good predictions, work on meaningful things and help invent that future.</li>\n\t\n</ul>\n\n<h3>Q&amp;A</h3>\n\n<b>Q:</b> We’re so obsessed with Browsers as community, but there isn’t a business there?\n<br><b>A:</b>The browsers are a way we can influence the web. Whichever platform donates will shape the web in their interest, even if those interests are very benign.\n\n<h3>My Takeaway</h3>\n\nPredicting the future is what John’s good at. He predicted responsive design about 10 years before Ethan discovered/coined it. His take on predicting the future is interesting: don’t just predict, take action on those predictions. I jotted down a few of his future predictions which will be interesting to come back to in 10 years to see what he got right.\n\n## Laura Elizabeth - Selling Design Systems\n\n<a href=\"https://twitter.com/laurium\" target=\"_blank\" rel=\"noopener\">@laurium</a> / <a href=\"http://lauraelizabeth.co\" target=\"_blank\" rel=\"noopener\">lauraelizabeth.co</a>\n\n<ul>\n\t<li>The smaller of the company, the less need for a fully fledged design system. </li>\n\t<li>Design systems are only valuable if they’re kept up to date.</li>\n\t<li>Company is large enough, brand is established enough, you have the time and mentality, you’re solving a real problem.</li>\n\t<li>\"Our design system with living UI components is the only way we can keep up with the fast growth of AWS offerings\" - Amazon</li>\n\t<li>\"Reusable components took 2-3x longer to create but gets justified  after rushing 2-3 times. And the value of that increases.”</li>\n\t<li>\"We collected components on a master sketch file. After a week or two we bung to see huge leaps in productivity using the library when iterating on designs” - Karri Saarinen, AirBnb</li>\n\t<li>We’re not selling a \"Design System” what we’re selling is a solution to a problem. And if you don’t have a problem, you’re just selling an artifact (costly and time consuming artifact).</li>\n\t<li>“You don’t need to get the clients blessing to follow your craft’s best practices” - Brad Frost</li>\n\n</ul>\n\n<h3>Q&amp;A</h3>\n\n<b>Q:</b> What are the most common objections from stakeholders?\n<br><b>A:</b> They don’t see the value in it, you’re not selling it well enough.\n\n<b>Q:</b> Shouldn’t they already be a part of our process? As a developer I don’t really need a specific tool to do my job, why do we need to sell them in the first place?\n<br><b>A:</b> In a lot of cases, yeah, having a modular design mind set is really good. But if you want to do something like Salesforce, something that’s really big and requires a budget, you’ll have to be able to justify that spend if you’re going down that route.\n\n<b>Q:</b> Should we encourage more inconsistency?\n<br><b>A:</b> Design systems don’t have a big impact on creativity. You can still have a very creative and imaginative website with a design system.\n\n<h3>My takeway</h3>\n\nIt's interesting to see how little data there is in regards to how pattern libraries affect the bottom line for companies. While this seems difficult, it's for sure possible. A/B testing a website with an inconsistant design vs a website with a consistant design should give you a good understanding of what the effect of pattern libraries are (while not directly testing pattern libraries, you're testing the outcome of a pattern library). I'll be playing around with some ideas when I get back home.\n\n## Jen Simmons - Revolutionize your page: Real Art Direction on the web\n\n<a href=\"https://twitter.com/jensimmons\" target=\"_blank\" rel=\"noopener\">@jensimmons</a> / <a href=\"http://jensimmons.com/\" target=\"_blank\" rel=\"noopener\">jensimmons.com</a>\n\n<ul>\n\t<li>Art direction is a conversation</li>\n\t<li>You can never create a new font, a new layout, a new color scheme; what you can do is associate different elements</li>\n\t<li>Layout should not be a multiple choice question - it should be an essay question</li>\n\t<li>Don’t make a frame work out of CSS Grid. CSS grid is a framework built right into the browser.</li>\n\t<li>We have 100 years worth of graphic design inspiration. </li>\n\t<li><a href=\"http://labs.jensimmons.com\" target=\"_blank\" rel=\"noopener\">labs.jensimmons.com</a> - The Experimental Layout Lab of Jen Simmons</li>\n\t<li>Initial letter (drop caps) - property pp::first-letter {} (right now is only is safari 9 and 10)</li>\n\t<li>Feature queries - for browsers that don’t support use support queries: @supports (initial-letter: 4) or (-webkit-iniital-letter: 4 ) {codehere} <a href=\"https://hacks.mozilla.org/2016/08/using-feature-queries-in-css/\" target=\"_blank\" rel=\"noopener\">https://hacks.mozilla.org/2016/08/using-feature-queries-in-css/</a></li>\n\t<li>margin: auto; in flexport will give you vertical centering</li>\n\t<li>Dropped and raised caps; Non-rectangular shapes; Images specified in both dimensions; Sizing based on edges;</li>\n\t<li><a href=\"http://flexboxdefense.com\" target=\"_blank\" rel=\"noopener\">flexboxdefense.com</a> &amp; <a href=\"http://flexboxfroggy.com\" target=\"_blank\" rel=\"noopener\">flexboxfroggy.com</a> - games to play to familiarize yourself with flex box</li>\n\t<li>Think about the HTML only experience. Not only for screenreaders, but what happens when Siri or Cortana wake up in a few years and start reading websites to people?</li>\n\t<li><a href=\"http://www.layout.land\" target=\"_blank\" rel=\"noopener\">layout.land</a> - website Jen's building similar to CSS Garden</li>\n\t\n</ul>\n\n<h3>Q&amp;A</h3>\n\n<b>Q:</b> How did we go back to print design for inspiration?\n<br><b>A:</b> The last thing we want to do is take things from print and add them on the web. We need to take ideas from other places and print is one of them. I frequently look at film and other places, take those ideas and transform them over.\n\n<b>Q:</b> How do we get a company to understand that we have to come up with different designs for different ways?\n<br><b>A:</b> The idea that that there is one solution is a problem.\n\n<b>Q:</b> Thoughts on tools?\n<br><b>A:</b> There is an ongoing conversion about designers learning to code, which tool, which process is the best, etc. Use any tool that’s going to get you to where it’s going to be. At some point you’ll need to hop on the browser.\n\n<h3>My Takeaway</h3>\n\nA good amount of detail into how making your website look less generic through art direction and what’s currently possible through CSS. It seems like CSS Grid Layouts have evolved since the last time I gave them ago; definitely worth giving them a second try. I had no idea that support queries were a thing. So what’s the point of using modernizr? This talk definitely disrupts my current process and one that I’m anxious to pick apart and implement once I get home.\n\n<a href=\"https://speakerdeck.com/jensimmons/revolutionize-your-page-40min-fall-2016?utm_content=buffer4d7b8&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer\" target=\"_blank\" rel=\"noopener\">Slide Deck</a>\n\n## Adrian Zumbrunner - Designing Choice\n\n<a href=\"https://twitter.com/azumbrunnen_\">@azumbrunnen\\_</a> / <a href=\"http://azumbrunnen.me\" target=\"_blank\" rel=\"noopener\">azumbrunnen.me</a>\n\n<ul>\n\t<li>Good design is about making choices.</li>\n\t<li>\"Not choosing or letting the user decide is an abdication of the designer’s responsibility\"  - Dan Saffer</li>\n\t<li>\"We cherish the idea of having options, but we’re often better off with less choice\" - Barry Schwartz</li>\n\t<li>Less options equals more focus and easier decision making.</li>\n\t<li>The value of an option is defined by it’s surroundings.</li>\n\t<li>Placebo choices - Deliberately adding an option can make people more decisive</li>\n\t<li>Importance of moments - The right moment can change the way people think about an interface</li>\n\t<li>Role of Friction - Design is about removing friction from interfaces to people can focus on their tasks rather than their tools.</li>\n\t<li>\"The holistic experience that people feel when they act with total involvement\" - Mihaly Csikszentmihalyi</li>\n\t<li>Friction can improve design and make people more deliberate</li>\n\t<li>Defaults can make or break the experience</li>\n\t\n</ul>\n\n<h3>Q&amp;A</h3>\n\n<b>Q:</b> When it comes when trying to be unique/standout; is it just the matter of getting things right where most people fail?\n<br><b>A:</b> Utilitarian and the icing on the cake.\n\n<b>Q:</b> <i>Missed the question, but the answer was too good to not add.</i>\n<br><b>A:</b> Simple rule that you can apply, if you were that user, in the same position, how would you like to be treated. It’s your responsibility on how you would like to approach this.\n\n<h3>My Takeaway</h3>\n\nThis talk gave me some insight as to way Apple over simplifies their products to the point where they leave some of us wanting more options; this explains in part why they're one of our generation's most popular brands. However, we sometimes have to provide placebo choices in order to influence the user and making a choice.\n\n## Christian Holst - Conversion Rate Optimization Techniques in Ecommerce\n\n<a href=\"https://twitter.com/KiehnHolst\" target=\"_blank\" rel=\"noopener\">@KiehnHolst</a> / <a href=\"http://baymard.com\" target=\"_blank\" rel=\"noopener\">baymard.com</a>\n\n<ul>\n\t<li>68.81% cart abandonment rate (avg. across 34 different studies)</li>\n\t<li>35% increase in conversion rate (average site potential for checkout optimization)</li>\n\t<li>$260 billion opportunity in the EU and US (35% increase in conversion rate)</li>\n\t<li>134 checkout design parameters in order to obtain the 35% increase in conversion rate</li>\n\t<li>Average site has 39 checkout usability issues in production</li>\n\t<li>5.08 checkout steps in 2012 > 5.42 steps in 2016</li>\n\t<li>Number of steps alone does not constitute a good or a bad checkout / no direct correlation</li>\n\t<li>14.88 fields on average, this could just be 7</li>\n\t<li>Home Depot: 15 form fields / Dell: 45 fields / Crutchfield: 8 form fields</li>\n\t<li>Focus less on the number of steps and focus more on what you users have to accomplish</li>\n\t<li>Date of Birth 34%, Phone, Gender - form fields that will cause uses to abandon - Make it optional</li>\n\t<li>Explain why certain information is required to alleviate privacy concerns.11.6% of tests subjects misinterpreted a review step for an order receipt</li>\n\t<li>11.6% of test subjects misinterpreted a review step for an order receipt</li>\n\t<li>Adaptive Error Messages - adapting the actual error message to the specific rule that caused the error message (4-10 instead of 1-2)</li>\n\t<li>18.75% of all account users abandoned cart</li>\n\t<li>Set fewer password creating options</li>\n\n</ul>\n\n<b>Q:</b> Scrolling, pagination, load more button?\n<br><b>A:</b> Load more works the most, natural pause in that flow.\n\n<b>Q:</b> \"Secured by\" msgs?\n<br><b>A:</b> Users perceive different parts of a page to be more sensitive; they perceive different parts due to visual design more secure. Users have small technical understanding of this.\n\n<b>Q:</b> Best practices for email verification fields? What would be a better way to make sure that the email is right?\n<br><b>A:</b> It’s above 50% of all users that copy and paste their email address. Disable copy and paste\n\n<h3>My Takeaway</h3>\n\nThis was pretty good insight in regards to user testing in ecommerce sites (the majority of my testing is for content marketing websites). THere are a few things that I could transfer over; e.g. form fields that convert less, infinit scrolling vs pagination vs load more button, etc.\n\n## Maciej Ceglowski - The Website Obesity Crisis\n\n<a href=\"https://twitter.com/baconmeteor\" target=\"_blank\" rel=\"noopener\">@baconmeteor</a> / <a href=\"http://idlewords.com\" target=\"_blank\" rel=\"noopener\">idlewords.com</a>\n\n<ul>\n\t<li>Chickenshit Minimalism </li>\n\t<li>Taft test - if images on a website are replaced with Taft and it improves the experience, you don’t need the images.</li>\n\t<li><a href=\"http://www.webbloatscore.com/\">www.webbloatscore.com</a> Web bloat score calculator </li>\n</ul>\n\n<b>Q:</b> Keep inventing random things to feel inventive?\n<br><b>A:</b> Maybe not to let the stupidity overwhelm, but that’s how i keep myself from drinking.\n\n<b>Q:</b> The bubble is quivering do you think there’s a chance of a burst?\n<br><b>A:</b> I don’t think of it as a bubble, but as a blister. Even 5 years ago a lot of us thought the bubble was going to end, but it hasn’t. Now we’re in this long endless period of easy money and it hasn’t been healthy.\n\n<h3>My takeaway</h3>\n\nBy this time my fingers were already hurting from taking so many notes. But the gist of it is, we do a lot of dumb stuff on the web just because we can; this is how the internet of things came to be. Things that are created with the purpose of simplifying our life are actually complicating it. Lets be conscious of not overdoing it with unneeded functionality.\n",
        "type": "MarkdownRemark",
        "contentDigest": "8e121ae127189bd80c1af212f13d9d5c",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "SmashingConf Barcelona 2016 Day 2 Notes",
        "author": "Julian Gaviria",
        "description": "First day was a blast. I'm surprised to say that the second day has been even better.",
        "excerpt": "John Allsopp (Dao of Web Design) runs us through predictions, Jen Simmons amazes with CSS, and Christian Holst with conversion rate optimization techniques in ecommerce.",
        "tags": [
          "ExitIntent",
          "CRO",
          "ABTest",
          "Code"
        ],
        "time": "7 Minutes",
        "comments": false,
        "icon": "/assets/aico-smashing-magazine.svg",
        "slug": "smashingconf-barcelona-2016-day-2",
        "path": "/article/smashingconf-barcelona-2016-day-2/",
        "date": "2016-10-26",
        "_PARENT": "a3694107-b7a6-52c5-ad60-d043ec113ee3"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nFirst day was a blast. Learned a ton of new stuff that I wasn't privy to before (and able to use in production). I'm surprised to say that the second day has been even better. Again, just a disclaimer that these notes weren't edited and they were added just as they were jotted down. Enjoy!\n\n## John Allsopp - The Mystery Speaker (<a href=\"http://alistapart.com/article/dao\" target=\"_blank\" rel=\"noopener\">Dao of Web Design</a>)\n\n<a href=\"https://twitter.com/johnallsopp\">@johnallsopp</a> / <a href=\"http://webdirections.org\">webdirections.org</a>\n\n<ul>\n\t<li>Predictions “Computers in the future may weigh no more than 1.5 tons”</li>\n\t<li>Humans are bad a predicting exponential growth</li>\n\t<li>‘How did you go bankrupt?’ Bill asked. ‘Two ways,’ Mike said. ‘Gradually and then suddenly’ - Hemingway, the Sun Also Rises</li>\n\t<li>Find the things that change exponentially, they are the things that really impact the world.</li>\n\t<li>Moore’s law - The complexity for minimum component costs increased at a rate of roughly a factor of two per year. Carnally over the short term this rate can be expected to continue, if not to increase.</li>\n\t<li>The best way to predict the future is to invent it - Alan Kay</li>\n\t<li>Prediction - “I think the browser is going to disappear” “Platforms are going to go away; computing will be everywhere because hardware will get cheaper and cheaper and cheaper” “The screen will disappear”</li>\n\t<li>Native apps are a remnant of the jurassic period of computer history, a local maximum that is holding us back..</li>\n\t<li>What is the one weird old trick about exponential growth? We need to act on our research & predictions. Carp Diem. Make good predictions, work on meaningful things and help invent that future.</li>\n\t\n</ul>\n\n<h3>Q&amp;A</h3>\n\n<b>Q:</b> We’re so obsessed with Browsers as community, but there isn’t a business there?\n<br><b>A:</b>The browsers are a way we can influence the web. Whichever platform donates will shape the web in their interest, even if those interests are very benign.\n\n<h3>My Takeaway</h3>\n\nPredicting the future is what John’s good at. He predicted responsive design about 10 years before Ethan discovered/coined it. His take on predicting the future is interesting: don’t just predict, take action on those predictions. I jotted down a few of his future predictions which will be interesting to come back to in 10 years to see what he got right.\n\n## Laura Elizabeth - Selling Design Systems\n\n<a href=\"https://twitter.com/laurium\" target=\"_blank\" rel=\"noopener\">@laurium</a> / <a href=\"http://lauraelizabeth.co\" target=\"_blank\" rel=\"noopener\">lauraelizabeth.co</a>\n\n<ul>\n\t<li>The smaller of the company, the less need for a fully fledged design system. </li>\n\t<li>Design systems are only valuable if they’re kept up to date.</li>\n\t<li>Company is large enough, brand is established enough, you have the time and mentality, you’re solving a real problem.</li>\n\t<li>\"Our design system with living UI components is the only way we can keep up with the fast growth of AWS offerings\" - Amazon</li>\n\t<li>\"Reusable components took 2-3x longer to create but gets justified  after rushing 2-3 times. And the value of that increases.”</li>\n\t<li>\"We collected components on a master sketch file. After a week or two we bung to see huge leaps in productivity using the library when iterating on designs” - Karri Saarinen, AirBnb</li>\n\t<li>We’re not selling a \"Design System” what we’re selling is a solution to a problem. And if you don’t have a problem, you’re just selling an artifact (costly and time consuming artifact).</li>\n\t<li>“You don’t need to get the clients blessing to follow your craft’s best practices” - Brad Frost</li>\n\n</ul>\n\n<h3>Q&amp;A</h3>\n\n<b>Q:</b> What are the most common objections from stakeholders?\n<br><b>A:</b> They don’t see the value in it, you’re not selling it well enough.\n\n<b>Q:</b> Shouldn’t they already be a part of our process? As a developer I don’t really need a specific tool to do my job, why do we need to sell them in the first place?\n<br><b>A:</b> In a lot of cases, yeah, having a modular design mind set is really good. But if you want to do something like Salesforce, something that’s really big and requires a budget, you’ll have to be able to justify that spend if you’re going down that route.\n\n<b>Q:</b> Should we encourage more inconsistency?\n<br><b>A:</b> Design systems don’t have a big impact on creativity. You can still have a very creative and imaginative website with a design system.\n\n<h3>My takeway</h3>\n\nIt's interesting to see how little data there is in regards to how pattern libraries affect the bottom line for companies. While this seems difficult, it's for sure possible. A/B testing a website with an inconsistant design vs a website with a consistant design should give you a good understanding of what the effect of pattern libraries are (while not directly testing pattern libraries, you're testing the outcome of a pattern library). I'll be playing around with some ideas when I get back home.\n\n## Jen Simmons - Revolutionize your page: Real Art Direction on the web\n\n<a href=\"https://twitter.com/jensimmons\" target=\"_blank\" rel=\"noopener\">@jensimmons</a> / <a href=\"http://jensimmons.com/\" target=\"_blank\" rel=\"noopener\">jensimmons.com</a>\n\n<ul>\n\t<li>Art direction is a conversation</li>\n\t<li>You can never create a new font, a new layout, a new color scheme; what you can do is associate different elements</li>\n\t<li>Layout should not be a multiple choice question - it should be an essay question</li>\n\t<li>Don’t make a frame work out of CSS Grid. CSS grid is a framework built right into the browser.</li>\n\t<li>We have 100 years worth of graphic design inspiration. </li>\n\t<li><a href=\"http://labs.jensimmons.com\" target=\"_blank\" rel=\"noopener\">labs.jensimmons.com</a> - The Experimental Layout Lab of Jen Simmons</li>\n\t<li>Initial letter (drop caps) - property pp::first-letter {} (right now is only is safari 9 and 10)</li>\n\t<li>Feature queries - for browsers that don’t support use support queries: @supports (initial-letter: 4) or (-webkit-iniital-letter: 4 ) {codehere} <a href=\"https://hacks.mozilla.org/2016/08/using-feature-queries-in-css/\" target=\"_blank\" rel=\"noopener\">https://hacks.mozilla.org/2016/08/using-feature-queries-in-css/</a></li>\n\t<li>margin: auto; in flexport will give you vertical centering</li>\n\t<li>Dropped and raised caps; Non-rectangular shapes; Images specified in both dimensions; Sizing based on edges;</li>\n\t<li><a href=\"http://flexboxdefense.com\" target=\"_blank\" rel=\"noopener\">flexboxdefense.com</a> &amp; <a href=\"http://flexboxfroggy.com\" target=\"_blank\" rel=\"noopener\">flexboxfroggy.com</a> - games to play to familiarize yourself with flex box</li>\n\t<li>Think about the HTML only experience. Not only for screenreaders, but what happens when Siri or Cortana wake up in a few years and start reading websites to people?</li>\n\t<li><a href=\"http://www.layout.land\" target=\"_blank\" rel=\"noopener\">layout.land</a> - website Jen's building similar to CSS Garden</li>\n\t\n</ul>\n\n<h3>Q&amp;A</h3>\n\n<b>Q:</b> How did we go back to print design for inspiration?\n<br><b>A:</b> The last thing we want to do is take things from print and add them on the web. We need to take ideas from other places and print is one of them. I frequently look at film and other places, take those ideas and transform them over.\n\n<b>Q:</b> How do we get a company to understand that we have to come up with different designs for different ways?\n<br><b>A:</b> The idea that that there is one solution is a problem.\n\n<b>Q:</b> Thoughts on tools?\n<br><b>A:</b> There is an ongoing conversion about designers learning to code, which tool, which process is the best, etc. Use any tool that’s going to get you to where it’s going to be. At some point you’ll need to hop on the browser.\n\n<h3>My Takeaway</h3>\n\nA good amount of detail into how making your website look less generic through art direction and what’s currently possible through CSS. It seems like CSS Grid Layouts have evolved since the last time I gave them ago; definitely worth giving them a second try. I had no idea that support queries were a thing. So what’s the point of using modernizr? This talk definitely disrupts my current process and one that I’m anxious to pick apart and implement once I get home.\n\n<a href=\"https://speakerdeck.com/jensimmons/revolutionize-your-page-40min-fall-2016?utm_content=buffer4d7b8&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer\" target=\"_blank\" rel=\"noopener\">Slide Deck</a>\n\n## Adrian Zumbrunner - Designing Choice\n\n<a href=\"https://twitter.com/azumbrunnen_\">@azumbrunnen\\_</a> / <a href=\"http://azumbrunnen.me\" target=\"_blank\" rel=\"noopener\">azumbrunnen.me</a>\n\n<ul>\n\t<li>Good design is about making choices.</li>\n\t<li>\"Not choosing or letting the user decide is an abdication of the designer’s responsibility\"  - Dan Saffer</li>\n\t<li>\"We cherish the idea of having options, but we’re often better off with less choice\" - Barry Schwartz</li>\n\t<li>Less options equals more focus and easier decision making.</li>\n\t<li>The value of an option is defined by it’s surroundings.</li>\n\t<li>Placebo choices - Deliberately adding an option can make people more decisive</li>\n\t<li>Importance of moments - The right moment can change the way people think about an interface</li>\n\t<li>Role of Friction - Design is about removing friction from interfaces to people can focus on their tasks rather than their tools.</li>\n\t<li>\"The holistic experience that people feel when they act with total involvement\" - Mihaly Csikszentmihalyi</li>\n\t<li>Friction can improve design and make people more deliberate</li>\n\t<li>Defaults can make or break the experience</li>\n\t\n</ul>\n\n<h3>Q&amp;A</h3>\n\n<b>Q:</b> When it comes when trying to be unique/standout; is it just the matter of getting things right where most people fail?\n<br><b>A:</b> Utilitarian and the icing on the cake.\n\n<b>Q:</b> <i>Missed the question, but the answer was too good to not add.</i>\n<br><b>A:</b> Simple rule that you can apply, if you were that user, in the same position, how would you like to be treated. It’s your responsibility on how you would like to approach this.\n\n<h3>My Takeaway</h3>\n\nThis talk gave me some insight as to way Apple over simplifies their products to the point where they leave some of us wanting more options; this explains in part why they're one of our generation's most popular brands. However, we sometimes have to provide placebo choices in order to influence the user and making a choice.\n\n## Christian Holst - Conversion Rate Optimization Techniques in Ecommerce\n\n<a href=\"https://twitter.com/KiehnHolst\" target=\"_blank\" rel=\"noopener\">@KiehnHolst</a> / <a href=\"http://baymard.com\" target=\"_blank\" rel=\"noopener\">baymard.com</a>\n\n<ul>\n\t<li>68.81% cart abandonment rate (avg. across 34 different studies)</li>\n\t<li>35% increase in conversion rate (average site potential for checkout optimization)</li>\n\t<li>$260 billion opportunity in the EU and US (35% increase in conversion rate)</li>\n\t<li>134 checkout design parameters in order to obtain the 35% increase in conversion rate</li>\n\t<li>Average site has 39 checkout usability issues in production</li>\n\t<li>5.08 checkout steps in 2012 > 5.42 steps in 2016</li>\n\t<li>Number of steps alone does not constitute a good or a bad checkout / no direct correlation</li>\n\t<li>14.88 fields on average, this could just be 7</li>\n\t<li>Home Depot: 15 form fields / Dell: 45 fields / Crutchfield: 8 form fields</li>\n\t<li>Focus less on the number of steps and focus more on what you users have to accomplish</li>\n\t<li>Date of Birth 34%, Phone, Gender - form fields that will cause uses to abandon - Make it optional</li>\n\t<li>Explain why certain information is required to alleviate privacy concerns.11.6% of tests subjects misinterpreted a review step for an order receipt</li>\n\t<li>11.6% of test subjects misinterpreted a review step for an order receipt</li>\n\t<li>Adaptive Error Messages - adapting the actual error message to the specific rule that caused the error message (4-10 instead of 1-2)</li>\n\t<li>18.75% of all account users abandoned cart</li>\n\t<li>Set fewer password creating options</li>\n\n</ul>\n\n<b>Q:</b> Scrolling, pagination, load more button?\n<br><b>A:</b> Load more works the most, natural pause in that flow.\n\n<b>Q:</b> \"Secured by\" msgs?\n<br><b>A:</b> Users perceive different parts of a page to be more sensitive; they perceive different parts due to visual design more secure. Users have small technical understanding of this.\n\n<b>Q:</b> Best practices for email verification fields? What would be a better way to make sure that the email is right?\n<br><b>A:</b> It’s above 50% of all users that copy and paste their email address. Disable copy and paste\n\n<h3>My Takeaway</h3>\n\nThis was pretty good insight in regards to user testing in ecommerce sites (the majority of my testing is for content marketing websites). THere are a few things that I could transfer over; e.g. form fields that convert less, infinit scrolling vs pagination vs load more button, etc.\n\n## Maciej Ceglowski - The Website Obesity Crisis\n\n<a href=\"https://twitter.com/baconmeteor\" target=\"_blank\" rel=\"noopener\">@baconmeteor</a> / <a href=\"http://idlewords.com\" target=\"_blank\" rel=\"noopener\">idlewords.com</a>\n\n<ul>\n\t<li>Chickenshit Minimalism </li>\n\t<li>Taft test - if images on a website are replaced with Taft and it improves the experience, you don’t need the images.</li>\n\t<li><a href=\"http://www.webbloatscore.com/\">www.webbloatscore.com</a> Web bloat score calculator </li>\n</ul>\n\n<b>Q:</b> Keep inventing random things to feel inventive?\n<br><b>A:</b> Maybe not to let the stupidity overwhelm, but that’s how i keep myself from drinking.\n\n<b>Q:</b> The bubble is quivering do you think there’s a chance of a burst?\n<br><b>A:</b> I don’t think of it as a bubble, but as a blister. Even 5 years ago a lot of us thought the bubble was going to end, but it hasn’t. Now we’re in this long endless period of easy money and it hasn’t been healthy.\n\n<h3>My takeaway</h3>\n\nBy this time my fingers were already hurting from taking so many notes. But the gist of it is, we do a lot of dumb stuff on the web just because we can; this is how the internet of things came to be. Things that are created with the purpose of simplifying our life are actually complicating it. Lets be conscious of not overdoing it with unneeded functionality.\n",
      "fileAbsolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2016-10-26-smashingconf-barcelona-2016-day-2.md"
    },
    "f2a39ed8-9e0f-5a5a-bb42-377da720d62e": {
      "id": "f2a39ed8-9e0f-5a5a-bb42-377da720d62e",
      "children": [],
      "parent": "5dcc1451-d2d6-5467-8e10-2b4a6d684de6",
      "internal": {
        "content": "\nI'm sure that by now you've heard about how static websites are the best thing since sliced bread. If you're the type to stay on top of the latest, then you've also heard about Smashing Magazine [ditching WordPress and moving to a JAMstack](https://next.smashingmagazine.com/2017/03/a-little-surprise-is-waiting-for-you-here--meet-the-next-smashing-magazine/) (probably how you ended up here).\n\nJAMstack stands for JavaScript, APIs, & Markup; it’s an approach to building websites that allows you to have all the web performance and security benefits of a static website along with the dynamic capabilities of a database-driven CMS.\n\n(Related: [Server-Side Split Testing for Static Websites](/article/server-side-split-testing/))\n\nTo present this in context, I’ll run you through the problems with dynamic websites, how we’re solving them with a static approach, and how to start putting together your own JAMstack.\n\n<!-- <h2 id=\"dynamic\">Problems Dynamic Websites Are Facing</h2> -->\n\n## Problems Dynamic Websites Are Facing\n\nLet's start with web performance. Regardless of [how well we optimize everything](/article/baseline-for-fast-loading-websites/) or how good of a job we do with with perceived performance, dynamic websites are SLOW. This is due to the amount of steps that have to take place in order to display the requested content everytime someone visits a web page.\n\nWe’re also at a point where every website being built on [enter popular CMS name here] is being overwhelmingly loaded with plugins, scripts, and a ton of other overhead that just slows the crap out of what we ship to production.\n\nThis is in addition to security concerns, expensive hosting, and the ever-changing landscape of different languages a developer must learn to build a website.\n\nSo let's rethink our approach to building dynamic websites and start from <s>scratch</s> static.\n\n<!-- <h2 id=\"static\">What's a Static Website?</h2> -->\n\n## What's a Static Website?\n\nThat Dreamweaver website you created back in college? That’s a static website — a website made up of HTML pages with pre-populated content.\n\nWhen a browser requests the URL of a static page, the server returns the static page in its entirety. There aren't calls to a database being made nor content being generated on the fly — the content is already there.\n\nThat doesn't mean we're putting together every page by hand (no way). There are different tools that address different layers of this technology stack. Yes, I'll run you through what these tools are, but first, let's go through some of the basic benefits:\n\n<h3>Faster loading times</h3>\n\nThe fact that JAMstack websites don’t have to make any calls to a database makes the loading time exponentially quicker.\n\n[Matt Biilmann](https://twitter.com/biilmann), founder of Netlify, ran a test of the Smashing Magazine website (which currently runs on WordPress) against a static counterpart he cloned and deployed on Netlify. It resulted in [a website that loaded six times faster](https://www.smashingmagazine.com/2015/11/modern-static-website-generators-next-big-thing/#dynamic-websites-and-caching) than the original.\n\nIf you’re not sold, keep reading (or just keep reading anyway).\n\n<h3>Solid Security</h3>\n\nIf you’re using a popular CMS, you know about the necessary security measures. This is mostly due to the login page being available to anyone with access to the website and some basic knowledge of the specific CMS. With a static website, a login page doesn’t exist.\n\nIf you do integrate a headless CMS (more on what a headless CMS is further down) to your static website, tracking the website back to its CMS isn’t as straightforward as it is with a traditional CMS.\n\n<h3>Front-End and CMS are Decoupled</h3>\n\nYou don't have a CMS dictating the way you should structure your content and pages. Not having a CMS tied in to the presentation layer gives you the flexibility of creating anything you want on the front-end while using the API endpoints to pull in content.\n\n<h3>Lower cost of scaling</h3>\n\nWe’re not dealing with expensive runtimes or complicated server setups — we’re only dealing with static files being served on the client side. For smaller sites, you can get away with cheap hosting as long as you pair it with a [fast CDN](/article/baseline-for-fast-loading-websites/#cdn).\n\n<h3>Seamless developer experience</h3>\n\nFrom the developer’s perspective, the JAMstack methodology doesn’t require us to learn a different backend language to build a data-driven website. We’re able to build on our foundation of HTML, CSS, and JS to build complex websites.\n\nYes, I know, static sites are awesome, and I promise that setting up your JAMstack isn't all that difficult. Let's get started!\n\n<!-- <h2 id=\"hosting\">Step 1: Choose a Host &amp; CDN</h2> -->\n\n## Step 1: Choose a Host &amp; CDN\n\nThe beauty of static websites is that you’re able to host them anywhere. ANYWHERE.\n\nYou don’t need a list of server requirements with a certain version of PHP or a specific database. All you need is a host that allows you serve HTML, CSS, and JS for a straightforward development workflow, especially when dealing with staging environments.\n\nI recently started playing around with the idea of moving to Amazon Web Services. I zipped up my website, uploaded it to their server, and boom, my website was ready to go live by just pointing the DNS. Because my website is static, I didn’t have to worry about transferring a database or server requirements. (It took me about 10 minutes to set this up.)\n\nAlthough you are going to enjoy the flexibility (and affordability) of hosting, specially with larger scale websites, you want to make sure that you’re using a host with a fast CDN to deliver your static files. You have a bunch of options:\n\n<h3>Netlify</h3>\n\nBuilt from the ground up to host modern static websites, [Netlify](https://www.netlify.com/) (they actually coined the term “JAMstack”) understands the static concept and provide a full suite of open source products that are focused around static websites (sorta like the WP Engine of static websites). They’re also the hosting platform behind the new redesign of Smashing Magazine. Plans are relatively affordable, but if you have an open source project, they’ll host it for free.\n\n<h3>Amazon Web Services (AWS) S3</h3>\n\n[Amazon S3](https://aws.amazon.com/s3/) is a utility storage service that’s used for backups and content storage as well as static websites. This is an ideal [hosting setup for a JAMstack website](https://habd.as/zero-to-http-2-aws-hugo/). If it’s your first time creating an AWS account, they’ll provide free hosting for the first 12 months.\n\n<h3>Custom Setups with CloudFlare</h3>\n\nIf you like your current host, you can use [CloudFlare CDN](https://www.cloudflare.com/cdn/) to delegate content delivery. This gives you the flexibility to keep what you have and enjoy the benefits of a fast CDN. Setup is straight forward and not too pricey.\n\n<!-- <h2 id=\"ssgs\">Step 2: Decide on a Static Site Generator</h2> -->\n\n## Step 2: Decide on a Static Site Generator\n\nIn order to avoid creating static html pages manually, you’re going to need a sturdy static site generator (SSG). An SSG is a command line interface (CLI) application — don’t run away yet, it’s a simple setup — that does all of the dynamic page generation legwork for you. (Need a primer? Here's a good [intro article on SSGs](https://davidwalsh.name/introduction-static-site-generators).)\n\nAt the time of writing, there are [457 static site generators](https://staticsitegenerators.net/) to choose from. But I’ll help you narrow down the list to the top two contenders below.\n\n<h3>Jekyll</h3>\n\nBuilt on Ruby and using Liquid as a templating engine; [Jekyll](https://jekyllrb.com/) was created eight years ago when Github founder, Tom Preston-Werner, was looking to write his own blogging engine. A very well documented SSG with the support of a massive community. It has been the de facto choice for static site generators since static websites began regaining popularity around four to five years ago.\n\nAlthough Jekyll is simple to setup, the workflow begins slow down when working on larger websites; static pages will still load fast once on the server, but the time for them to get generated locally during development starts becoming painful.\n\n[Healthcare.gov](https://developmentseed.org/blog/new-healthcare-gov-is-open-and-cms-free/) is one of the early high-profile websites built on Jekyll.\n\n<h3>Hugo</h3>\n\nBuilt on GoLang using it’s own templating engine; Hugo was created in 2013 by Steve Francia, Docker’s Chief Operator. Although relatively young, Hugo has the support of Smashing Magazine and its immense community; Smashing Magazine announced that [they would be ditching WordPress for Hugo](https://next.smashingmagazine.com/2017/03/a-little-surprise-is-waiting-for-you-here--meet-the-next-smashing-magazine/#the-almighty-smashing-magazine-s-redesign) in the new iteration of their website. The main reason for choosing Hugo as their SSG was the [speed in which Hugo generates its pages](https://www.youtube.com/watch?v=CdiDYZ51a2o). This was something that co-founder, Vitaly Friedman, needed to carefully take into consideration for the large number of posts the website has published since 2006.\n\nTransparency: I’ve used Jekyll over the past few years, and it been excellent for projects at hand; however, I tried Hugo recently and the simplicity of the installation (no complicated dependencies to get up and running) and the speed it was able to generate pages immediately won me over. I’m in the process of moving this website from Jekyll to Hugo.\n\nThat said, plenty of people who are not me have [compared the top SSGs](https://www.smashingmagazine.com/2015/11/static-website-generators-jekyll-middleman-roots-hugo-review/) available. An SSG is the foundation of your JAMstack site, so take your time, do your homework, and choose wisely.\n\nAs awesome as SSGs are, there are a few problems rooted in the fact that it gets a bit complex for the everyday admin user that’s just looking to publish content. It’s unrealistic for us in the agency world to get non-technical team members and clients to publish content and deploy websites via CLI.\n\nIn order to make this appealing to the masses, we need a dynamic layer in our current stack that provides a friendly admin UI…\n\n<!-- <h2 id=\"headless-cms\">Step 3: Select a headless CMS</h2> -->\n\n## Step 3: Select a headless CMS\n\nCMS-based websites consist of:\n\n- <strong>An admin UI</strong>, where the editor of the website makes content and admin changes — think of the WordPress admin.\n- <strong>A database</strong>, where the content and settings of the website are stored — think of the MySQL database that you usually don’t care much about.\n- <strong>An API</strong>, the endpoints that allow you to connect the content of the website to the front-end of the website — the PHP snippets that allow you to call different parts of the content at hand (e.g. the_content();).\n- <strong>The front-end (the head)</strong>, the beautifully crafted website that visitors see — what you’re looking at right now is the front-end/head of my website.\n\nTake WordPress for example. You publish content through the admin that then gets stored in a MySQL database. This content becomes available via PHP endpoints (the API), and you can then use these endpoints to grab the content you’ve created via admin and populate throughout the pages of your website.\n\nIt’s pretty convenient, but the limitations surface instantly — the scope of these PHP endpoints is your website. (They won’t work anywhere else.)\n\nA headless CMS removes the front-end/head (Get it? Headless!) of a website while still providing the efficiency and convenience of an admin, database, and API. It allows you to publish content without wedding you to a website/layout/template. The front-end doesn’t exist and that’s the beauty of it.\n\nWe could grab the JS-based API endpoints provided by your headless CMS of choice and publish that content anywhere where JS is available — kind of like the Mastercard of APIs. You could also share those API endpoints with other publishers or developers that could ultimately serve as a large megaphone for your content. The possibilities are endless. (Cue inspirational music.)\n\n<h3>Choosing between a Git-based CMS or an API-driven CMS</h3>\n\nWith a Git-based CMS you can publish content every time you push changes to Git, allowing for a seamless development workflow. This approach is a bit difficult to scale with content that you want to publish across different platforms, but it will allow for you to have a purely static website. Since it runs on Git, you won’t have a problem finding an open source CMS to work with.\n\nWith an API-driven CMS, you’re creating content that will be strictly delivered via APIs. Although you won’t be able to keep track of content changes through Git, you’ll be able to scale your content through flexible APIs. But since you are working on a platform that hosts these APIs (server bandwidth ain’t cheap) these tend to not be open-sourced and rather pricey, but some offer freemium pricing models.\n\nHead over to [headlesscms.org](https://headlesscms.org/) for a full list of what’s currently available.\n\n<!-- <h2 id=\"resources\">Now What?</h2> -->\n\n## Now What?\n\nCongrats! You’re well on your way to adopting the JAMstack and reaping the benefits of static websites. This is just the beginning; developers along with stakeholders are just beginning to acknowledge the benefits and flexibility of going static; agencies are starting to break the mold by introducing the [JAMstack approach to client websites](https://snipcart.com/blog/jamstack-clients-static-site-cms); and a plethora of tools and resources are becoming available on a daily basis. Make good use of this approach and let's make the internet better.\n\n## JAMstack Resources\n\nI've put together the entire list of articles, tools, videos, tutorials & other resources I came across when writing this article. Enjoy!\n\n[View Static Websites &amp; the JAMstack Resources &raquo;](/article/static-websites-and-jamstack/resources)\n",
        "type": "MarkdownRemark",
        "contentDigest": "cad1f8a3eeac836a6d24a8742f85ad82",
        "owner": "gatsby-transformer-remark"
      },
      "frontmatter": {
        "title": "Static Websites + JAMstack = <3",
        "description": "Let's rethink the way we build websites with a more fast, secure, and flexible approach.",
        "tags": [
          "JAMstack",
          "HeadlessCMS",
          "StaticSiteGenerators",
          "StaticWebsites",
          "WebPerf"
        ],
        "lastmod": "2017-04-25T00:00:00.000Z",
        "date": "2017-04-25",
        "time": "7.5 Minutes",
        "categories": [
          "Development"
        ],
        "slug": "static-websites-and-jamstack",
        "path": "/article/static-websites-and-jamstack/",
        "images": [
          "assets/og-static-jamstack.jpg"
        ],
        "icon": "/assets/aico-static-jamstack.svg",
        "comments": false,
        "_PARENT": "5dcc1451-d2d6-5467-8e10-2b4a6d684de6"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nI'm sure that by now you've heard about how static websites are the best thing since sliced bread. If you're the type to stay on top of the latest, then you've also heard about Smashing Magazine [ditching WordPress and moving to a JAMstack](https://next.smashingmagazine.com/2017/03/a-little-surprise-is-waiting-for-you-here--meet-the-next-smashing-magazine/) (probably how you ended up here).\n\nJAMstack stands for JavaScript, APIs, & Markup; it’s an approach to building websites that allows you to have all the web performance and security benefits of a static website along with the dynamic capabilities of a database-driven CMS.\n\n(Related: [Server-Side Split Testing for Static Websites](/article/server-side-split-testing/))\n\nTo present this in context, I’ll run you through the problems with dynamic websites, how we’re solving them with a static approach, and how to start putting together your own JAMstack.\n\n<!-- <h2 id=\"dynamic\">Problems Dynamic Websites Are Facing</h2> -->\n\n## Problems Dynamic Websites Are Facing\n\nLet's start with web performance. Regardless of [how well we optimize everything](/article/baseline-for-fast-loading-websites/) or how good of a job we do with with perceived performance, dynamic websites are SLOW. This is due to the amount of steps that have to take place in order to display the requested content everytime someone visits a web page.\n\nWe’re also at a point where every website being built on [enter popular CMS name here] is being overwhelmingly loaded with plugins, scripts, and a ton of other overhead that just slows the crap out of what we ship to production.\n\nThis is in addition to security concerns, expensive hosting, and the ever-changing landscape of different languages a developer must learn to build a website.\n\nSo let's rethink our approach to building dynamic websites and start from <s>scratch</s> static.\n\n<!-- <h2 id=\"static\">What's a Static Website?</h2> -->\n\n## What's a Static Website?\n\nThat Dreamweaver website you created back in college? That’s a static website — a website made up of HTML pages with pre-populated content.\n\nWhen a browser requests the URL of a static page, the server returns the static page in its entirety. There aren't calls to a database being made nor content being generated on the fly — the content is already there.\n\nThat doesn't mean we're putting together every page by hand (no way). There are different tools that address different layers of this technology stack. Yes, I'll run you through what these tools are, but first, let's go through some of the basic benefits:\n\n<h3>Faster loading times</h3>\n\nThe fact that JAMstack websites don’t have to make any calls to a database makes the loading time exponentially quicker.\n\n[Matt Biilmann](https://twitter.com/biilmann), founder of Netlify, ran a test of the Smashing Magazine website (which currently runs on WordPress) against a static counterpart he cloned and deployed on Netlify. It resulted in [a website that loaded six times faster](https://www.smashingmagazine.com/2015/11/modern-static-website-generators-next-big-thing/#dynamic-websites-and-caching) than the original.\n\nIf you’re not sold, keep reading (or just keep reading anyway).\n\n<h3>Solid Security</h3>\n\nIf you’re using a popular CMS, you know about the necessary security measures. This is mostly due to the login page being available to anyone with access to the website and some basic knowledge of the specific CMS. With a static website, a login page doesn’t exist.\n\nIf you do integrate a headless CMS (more on what a headless CMS is further down) to your static website, tracking the website back to its CMS isn’t as straightforward as it is with a traditional CMS.\n\n<h3>Front-End and CMS are Decoupled</h3>\n\nYou don't have a CMS dictating the way you should structure your content and pages. Not having a CMS tied in to the presentation layer gives you the flexibility of creating anything you want on the front-end while using the API endpoints to pull in content.\n\n<h3>Lower cost of scaling</h3>\n\nWe’re not dealing with expensive runtimes or complicated server setups — we’re only dealing with static files being served on the client side. For smaller sites, you can get away with cheap hosting as long as you pair it with a [fast CDN](/article/baseline-for-fast-loading-websites/#cdn).\n\n<h3>Seamless developer experience</h3>\n\nFrom the developer’s perspective, the JAMstack methodology doesn’t require us to learn a different backend language to build a data-driven website. We’re able to build on our foundation of HTML, CSS, and JS to build complex websites.\n\nYes, I know, static sites are awesome, and I promise that setting up your JAMstack isn't all that difficult. Let's get started!\n\n<!-- <h2 id=\"hosting\">Step 1: Choose a Host &amp; CDN</h2> -->\n\n## Step 1: Choose a Host &amp; CDN\n\nThe beauty of static websites is that you’re able to host them anywhere. ANYWHERE.\n\nYou don’t need a list of server requirements with a certain version of PHP or a specific database. All you need is a host that allows you serve HTML, CSS, and JS for a straightforward development workflow, especially when dealing with staging environments.\n\nI recently started playing around with the idea of moving to Amazon Web Services. I zipped up my website, uploaded it to their server, and boom, my website was ready to go live by just pointing the DNS. Because my website is static, I didn’t have to worry about transferring a database or server requirements. (It took me about 10 minutes to set this up.)\n\nAlthough you are going to enjoy the flexibility (and affordability) of hosting, specially with larger scale websites, you want to make sure that you’re using a host with a fast CDN to deliver your static files. You have a bunch of options:\n\n<h3>Netlify</h3>\n\nBuilt from the ground up to host modern static websites, [Netlify](https://www.netlify.com/) (they actually coined the term “JAMstack”) understands the static concept and provide a full suite of open source products that are focused around static websites (sorta like the WP Engine of static websites). They’re also the hosting platform behind the new redesign of Smashing Magazine. Plans are relatively affordable, but if you have an open source project, they’ll host it for free.\n\n<h3>Amazon Web Services (AWS) S3</h3>\n\n[Amazon S3](https://aws.amazon.com/s3/) is a utility storage service that’s used for backups and content storage as well as static websites. This is an ideal [hosting setup for a JAMstack website](https://habd.as/zero-to-http-2-aws-hugo/). If it’s your first time creating an AWS account, they’ll provide free hosting for the first 12 months.\n\n<h3>Custom Setups with CloudFlare</h3>\n\nIf you like your current host, you can use [CloudFlare CDN](https://www.cloudflare.com/cdn/) to delegate content delivery. This gives you the flexibility to keep what you have and enjoy the benefits of a fast CDN. Setup is straight forward and not too pricey.\n\n<!-- <h2 id=\"ssgs\">Step 2: Decide on a Static Site Generator</h2> -->\n\n## Step 2: Decide on a Static Site Generator\n\nIn order to avoid creating static html pages manually, you’re going to need a sturdy static site generator (SSG). An SSG is a command line interface (CLI) application — don’t run away yet, it’s a simple setup — that does all of the dynamic page generation legwork for you. (Need a primer? Here's a good [intro article on SSGs](https://davidwalsh.name/introduction-static-site-generators).)\n\nAt the time of writing, there are [457 static site generators](https://staticsitegenerators.net/) to choose from. But I’ll help you narrow down the list to the top two contenders below.\n\n<h3>Jekyll</h3>\n\nBuilt on Ruby and using Liquid as a templating engine; [Jekyll](https://jekyllrb.com/) was created eight years ago when Github founder, Tom Preston-Werner, was looking to write his own blogging engine. A very well documented SSG with the support of a massive community. It has been the de facto choice for static site generators since static websites began regaining popularity around four to five years ago.\n\nAlthough Jekyll is simple to setup, the workflow begins slow down when working on larger websites; static pages will still load fast once on the server, but the time for them to get generated locally during development starts becoming painful.\n\n[Healthcare.gov](https://developmentseed.org/blog/new-healthcare-gov-is-open-and-cms-free/) is one of the early high-profile websites built on Jekyll.\n\n<h3>Hugo</h3>\n\nBuilt on GoLang using it’s own templating engine; Hugo was created in 2013 by Steve Francia, Docker’s Chief Operator. Although relatively young, Hugo has the support of Smashing Magazine and its immense community; Smashing Magazine announced that [they would be ditching WordPress for Hugo](https://next.smashingmagazine.com/2017/03/a-little-surprise-is-waiting-for-you-here--meet-the-next-smashing-magazine/#the-almighty-smashing-magazine-s-redesign) in the new iteration of their website. The main reason for choosing Hugo as their SSG was the [speed in which Hugo generates its pages](https://www.youtube.com/watch?v=CdiDYZ51a2o). This was something that co-founder, Vitaly Friedman, needed to carefully take into consideration for the large number of posts the website has published since 2006.\n\nTransparency: I’ve used Jekyll over the past few years, and it been excellent for projects at hand; however, I tried Hugo recently and the simplicity of the installation (no complicated dependencies to get up and running) and the speed it was able to generate pages immediately won me over. I’m in the process of moving this website from Jekyll to Hugo.\n\nThat said, plenty of people who are not me have [compared the top SSGs](https://www.smashingmagazine.com/2015/11/static-website-generators-jekyll-middleman-roots-hugo-review/) available. An SSG is the foundation of your JAMstack site, so take your time, do your homework, and choose wisely.\n\nAs awesome as SSGs are, there are a few problems rooted in the fact that it gets a bit complex for the everyday admin user that’s just looking to publish content. It’s unrealistic for us in the agency world to get non-technical team members and clients to publish content and deploy websites via CLI.\n\nIn order to make this appealing to the masses, we need a dynamic layer in our current stack that provides a friendly admin UI…\n\n<!-- <h2 id=\"headless-cms\">Step 3: Select a headless CMS</h2> -->\n\n## Step 3: Select a headless CMS\n\nCMS-based websites consist of:\n\n- <strong>An admin UI</strong>, where the editor of the website makes content and admin changes — think of the WordPress admin.\n- <strong>A database</strong>, where the content and settings of the website are stored — think of the MySQL database that you usually don’t care much about.\n- <strong>An API</strong>, the endpoints that allow you to connect the content of the website to the front-end of the website — the PHP snippets that allow you to call different parts of the content at hand (e.g. the_content();).\n- <strong>The front-end (the head)</strong>, the beautifully crafted website that visitors see — what you’re looking at right now is the front-end/head of my website.\n\nTake WordPress for example. You publish content through the admin that then gets stored in a MySQL database. This content becomes available via PHP endpoints (the API), and you can then use these endpoints to grab the content you’ve created via admin and populate throughout the pages of your website.\n\nIt’s pretty convenient, but the limitations surface instantly — the scope of these PHP endpoints is your website. (They won’t work anywhere else.)\n\nA headless CMS removes the front-end/head (Get it? Headless!) of a website while still providing the efficiency and convenience of an admin, database, and API. It allows you to publish content without wedding you to a website/layout/template. The front-end doesn’t exist and that’s the beauty of it.\n\nWe could grab the JS-based API endpoints provided by your headless CMS of choice and publish that content anywhere where JS is available — kind of like the Mastercard of APIs. You could also share those API endpoints with other publishers or developers that could ultimately serve as a large megaphone for your content. The possibilities are endless. (Cue inspirational music.)\n\n<h3>Choosing between a Git-based CMS or an API-driven CMS</h3>\n\nWith a Git-based CMS you can publish content every time you push changes to Git, allowing for a seamless development workflow. This approach is a bit difficult to scale with content that you want to publish across different platforms, but it will allow for you to have a purely static website. Since it runs on Git, you won’t have a problem finding an open source CMS to work with.\n\nWith an API-driven CMS, you’re creating content that will be strictly delivered via APIs. Although you won’t be able to keep track of content changes through Git, you’ll be able to scale your content through flexible APIs. But since you are working on a platform that hosts these APIs (server bandwidth ain’t cheap) these tend to not be open-sourced and rather pricey, but some offer freemium pricing models.\n\nHead over to [headlesscms.org](https://headlesscms.org/) for a full list of what’s currently available.\n\n<!-- <h2 id=\"resources\">Now What?</h2> -->\n\n## Now What?\n\nCongrats! You’re well on your way to adopting the JAMstack and reaping the benefits of static websites. This is just the beginning; developers along with stakeholders are just beginning to acknowledge the benefits and flexibility of going static; agencies are starting to break the mold by introducing the [JAMstack approach to client websites](https://snipcart.com/blog/jamstack-clients-static-site-cms); and a plethora of tools and resources are becoming available on a daily basis. Make good use of this approach and let's make the internet better.\n\n## JAMstack Resources\n\nI've put together the entire list of articles, tools, videos, tutorials & other resources I came across when writing this article. Enjoy!\n\n[View Static Websites &amp; the JAMstack Resources &raquo;](/article/static-websites-and-jamstack/resources)\n",
      "fileAbsolutePath": "/Users/jgaviria/Documents/Development/www.julian.is/src/articles/2017-04-25-static-websites-and-jamstack.md"
    },
    "SitePage /article/server-side-split-testing/": {
      "jsonName": "article-server-side-split-testing-f1f",
      "internalComponentName": "ComponentArticleServerSideSplitTesting",
      "path": "/article/server-side-split-testing/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "componentChunkName": "component---src-templates-article-template-js",
      "context": {},
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "id": "SitePage /article/server-side-split-testing/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "bd59eefa57daef746b5cd127b3746804",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /article/css-grid-at-scale/": {
      "jsonName": "article-css-grid-at-scale-64d",
      "internalComponentName": "ComponentArticleCssGridAtScale",
      "path": "/article/css-grid-at-scale/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "componentChunkName": "component---src-templates-article-template-js",
      "context": {},
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "id": "SitePage /article/css-grid-at-scale/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c735c29924a0914824e43c9f6c21ad62",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /article/iphone-x-notch/": {
      "jsonName": "article-iphone-x-notch-1ef",
      "internalComponentName": "ComponentArticleIphoneXNotch",
      "path": "/article/iphone-x-notch/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "componentChunkName": "component---src-templates-article-template-js",
      "context": {},
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "id": "SitePage /article/iphone-x-notch/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "890bb8407e89023275c2d937da09c4f5",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /article/ab-testing-lessons-learned/": {
      "jsonName": "article-ab-testing-lessons-learned-e09",
      "internalComponentName": "ComponentArticleAbTestingLessonsLearned",
      "path": "/article/ab-testing-lessons-learned/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "componentChunkName": "component---src-templates-article-template-js",
      "context": {},
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "id": "SitePage /article/ab-testing-lessons-learned/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "b0cc5716bf426d050a2062414eb88141",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /article/static-websites-and-jamstack/": {
      "jsonName": "article-static-websites-and-jamstack-850",
      "internalComponentName": "ComponentArticleStaticWebsitesAndJamstack",
      "path": "/article/static-websites-and-jamstack/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "componentChunkName": "component---src-templates-article-template-js",
      "context": {},
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "id": "SitePage /article/static-websites-and-jamstack/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "cef4f5b5107bf9f802d8b8d3f49ee84c",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /article/progressive-web-apps/": {
      "jsonName": "article-progressive-web-apps-969",
      "internalComponentName": "ComponentArticleProgressiveWebApps",
      "path": "/article/progressive-web-apps/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "componentChunkName": "component---src-templates-article-template-js",
      "context": {},
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "id": "SitePage /article/progressive-web-apps/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "455bdf2c145c6cd01fb86b05233bb419",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /article/exit-intent-popups/": {
      "jsonName": "article-exit-intent-popups-1b6",
      "internalComponentName": "ComponentArticleExitIntentPopups",
      "path": "/article/exit-intent-popups/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "componentChunkName": "component---src-templates-article-template-js",
      "context": {},
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "id": "SitePage /article/exit-intent-popups/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "bac7bc6e6617ac7adc7c31d565642af1",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /article/baseline-for-fast-loading-websites/": {
      "jsonName": "article-baseline-for-fast-loading-websites-1b2",
      "internalComponentName": "ComponentArticleBaselineForFastLoadingWebsites",
      "path": "/article/baseline-for-fast-loading-websites/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "componentChunkName": "component---src-templates-article-template-js",
      "context": {},
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "id": "SitePage /article/baseline-for-fast-loading-websites/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "2511403a04c8943047e08d5f2911da03",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /article/hubspot-inbound-2016-designers-perspective/": {
      "jsonName": "article-hubspot-inbound-2016-designers-perspective-fe3",
      "internalComponentName": "ComponentArticleHubspotInbound2016DesignersPerspective",
      "path": "/article/hubspot-inbound-2016-designers-perspective/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "componentChunkName": "component---src-templates-article-template-js",
      "context": {},
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "id": "SitePage /article/hubspot-inbound-2016-designers-perspective/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "32747c377372c42a5b33c693dc8464bd",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /article/conversion-rate-optimization-case-study/": {
      "jsonName": "article-conversion-rate-optimization-case-study-310",
      "internalComponentName": "ComponentArticleConversionRateOptimizationCaseStudy",
      "path": "/article/conversion-rate-optimization-case-study/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "componentChunkName": "component---src-templates-article-template-js",
      "context": {},
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "id": "SitePage /article/conversion-rate-optimization-case-study/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "368aad22bf697a023ea662c2fecc1a9c",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /article/smashingconf-barcelona-2016-day-2/": {
      "jsonName": "article-smashingconf-barcelona-2016-day-2-e68",
      "internalComponentName": "ComponentArticleSmashingconfBarcelona2016Day2",
      "path": "/article/smashingconf-barcelona-2016-day-2/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "componentChunkName": "component---src-templates-article-template-js",
      "context": {},
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "id": "SitePage /article/smashingconf-barcelona-2016-day-2/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "33eaf5e6f14673e7905ffcecf89ad7f2",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /article/smashingconf-barcelona-2016-day-1/": {
      "jsonName": "article-smashingconf-barcelona-2016-day-1-c75",
      "internalComponentName": "ComponentArticleSmashingconfBarcelona2016Day1",
      "path": "/article/smashingconf-barcelona-2016-day-1/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "componentChunkName": "component---src-templates-article-template-js",
      "context": {},
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "id": "SitePage /article/smashingconf-barcelona-2016-day-1/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "805b00b338b2d0215a6298041f66e5e3",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /article/why-ive-started-writing/": {
      "jsonName": "article-why-ive-started-writing-4a9",
      "internalComponentName": "ComponentArticleWhyIveStartedWriting",
      "path": "/article/why-ive-started-writing/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "componentChunkName": "component---src-templates-article-template-js",
      "context": {},
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js",
      "id": "SitePage /article/why-ive-started-writing/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "0208c66d631df8322a9546c15c486767",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/a-btest/": {
      "jsonName": "tags-a-btest-7f5",
      "internalComponentName": "ComponentTagsABtest",
      "path": "/tags/a-btest/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "ABtest"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/a-btest/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "1177baacec450cb7319adc2e7c0da6d0",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/ja-mstack/": {
      "jsonName": "tags-ja-mstack-4e6",
      "internalComponentName": "ComponentTagsJaMstack",
      "path": "/tags/ja-mstack/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "JAMstack"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/ja-mstack/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "0bbe50557546cf830d00a0dae9da4551",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/web-perf/": {
      "jsonName": "tags-web-perf-56d",
      "internalComponentName": "ComponentTagsWebPerf",
      "path": "/tags/web-perf/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "WebPerf"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/web-perf/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "dd82933c2137ca5b69046162c1c28a1a",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/static-websites/": {
      "jsonName": "tags-static-websites-8f0",
      "internalComponentName": "ComponentTagsStaticWebsites",
      "path": "/tags/static-websites/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "StaticWebsites"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/static-websites/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "4bda7588c7723fafd7a45789e77bcb6c",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/cro/": {
      "jsonName": "tags-cro-b1c",
      "internalComponentName": "ComponentTagsCro",
      "path": "/tags/cro/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "CRO"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/cro/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "1030d6c02bccb3ed070fa2e43c55d708",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/css/": {
      "jsonName": "tags-css-51e",
      "internalComponentName": "ComponentTagsCss",
      "path": "/tags/css/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "CSS"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/css/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "1982d9926d7756730ad18dd42ff6667d",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/css-grid/": {
      "jsonName": "tags-css-grid-ed7",
      "internalComponentName": "ComponentTagsCssGrid",
      "path": "/tags/css-grid/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "CSSGrid"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/css-grid/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "8722288f3f54716afb59a58b7d913324",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/mobile/": {
      "jsonName": "tags-mobile-111",
      "internalComponentName": "ComponentTagsMobile",
      "path": "/tags/mobile/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "Mobile"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/mobile/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "029a6bf5902d56c004d443580c6d8254",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/headless-cms/": {
      "jsonName": "tags-headless-cms-f03",
      "internalComponentName": "ComponentTagsHeadlessCms",
      "path": "/tags/headless-cms/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "HeadlessCMS"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/headless-cms/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "f8d1e97c5af84f1d17dff62976bc8454",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/static-site-generators/": {
      "jsonName": "tags-static-site-generators-c46",
      "internalComponentName": "ComponentTagsStaticSiteGenerators",
      "path": "/tags/static-site-generators/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "StaticSiteGenerators"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/static-site-generators/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "100eccb3d12ec145a527b2fa6962c573",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/pwa/": {
      "jsonName": "tags-pwa-c99",
      "internalComponentName": "ComponentTagsPwa",
      "path": "/tags/pwa/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "PWA"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/pwa/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "be908ee224bd53b3a26094da3dcbc32c",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/service-workers/": {
      "jsonName": "tags-service-workers-72e",
      "internalComponentName": "ComponentTagsServiceWorkers",
      "path": "/tags/service-workers/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "ServiceWorkers"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/service-workers/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "f4ebc448cc45d3e8f9af7282f5ded3ca",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/web-app-manifest/": {
      "jsonName": "tags-web-app-manifest-79d",
      "internalComponentName": "ComponentTagsWebAppManifest",
      "path": "/tags/web-app-manifest/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "WebAppManifest"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/web-app-manifest/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "a74472db7d9d6714f380ad9755cd7dbf",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/exit-intent/": {
      "jsonName": "tags-exit-intent-304",
      "internalComponentName": "ComponentTagsExitIntent",
      "path": "/tags/exit-intent/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "ExitIntent"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/exit-intent/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "0513fa8f08035f36c58043aba88737e2",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/modals/": {
      "jsonName": "tags-modals-2d2",
      "internalComponentName": "ComponentTagsModals",
      "path": "/tags/modals/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "Modals"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/modals/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "dd6baa583a26e94b670b81bff6114a3c",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/ab-test/": {
      "jsonName": "tags-ab-test-703",
      "internalComponentName": "ComponentTagsAbTest",
      "path": "/tags/ab-test/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "ABTest"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/ab-test/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "f2a36cfb3a6d1e9fd208ca1b00074239",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/code/": {
      "jsonName": "tags-code-32f",
      "internalComponentName": "ComponentTagsCode",
      "path": "/tags/code/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "Code"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/code/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "5d33243ebb64be375eed96b3ae33fbe0",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/optimization/": {
      "jsonName": "tags-optimization-097",
      "internalComponentName": "ComponentTagsOptimization",
      "path": "/tags/optimization/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "Optimization"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/optimization/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "784fcbda40870fb0d86bdf3d95bd833f",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/perceived-performance/": {
      "jsonName": "tags-perceived-performance-c6f",
      "internalComponentName": "ComponentTagsPerceivedPerformance",
      "path": "/tags/perceived-performance/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "PerceivedPerformance"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/perceived-performance/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "7e1c5966ed7ee62ba9f6033639dee081",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/gdd/": {
      "jsonName": "tags-gdd-311",
      "internalComponentName": "ComponentTagsGdd",
      "path": "/tags/gdd/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "GDD"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/gdd/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "38fd9482d444aa52ca3ec66b83627dea",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/case-study/": {
      "jsonName": "tags-case-study-d77",
      "internalComponentName": "ComponentTagsCaseStudy",
      "path": "/tags/case-study/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "componentChunkName": "component---src-templates-tags-js",
      "context": {
        "tag": "CaseStudy"
      },
      "pluginCreator___NODE": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "pluginCreatorId": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js",
      "id": "SitePage /tags/case-study/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "45ce60fafdca126ff2fddcda69fac862",
        "description": "7374ebf2-d961-52ee-92a2-c25e7cb387a9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /404/": {
      "jsonName": "404-22d",
      "internalComponentName": "Component404",
      "path": "/404/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/404.js",
      "componentChunkName": "component---src-pages-404-js",
      "context": {},
      "pluginCreator___NODE": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
      "pluginCreatorId": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/404.js",
      "id": "SitePage /404/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "2b28383104d3b9d38a239b8ce8f58a36",
        "description": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /about/": {
      "jsonName": "about-f34",
      "internalComponentName": "ComponentAbout",
      "path": "/about/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/about.js",
      "componentChunkName": "component---src-pages-about-js",
      "context": {},
      "pluginCreator___NODE": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
      "pluginCreatorId": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/about.js",
      "id": "SitePage /about/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "7f94a87bea13841fdc871f78cbb7130f",
        "description": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /articles/": {
      "jsonName": "articles-18f",
      "internalComponentName": "ComponentArticles",
      "path": "/articles/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/articles.js",
      "componentChunkName": "component---src-pages-articles-js",
      "context": {},
      "pluginCreator___NODE": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
      "pluginCreatorId": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/articles.js",
      "id": "SitePage /articles/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "85be1ea5cc95ac0755ef92d16ddb5ede",
        "description": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /": {
      "jsonName": "index",
      "internalComponentName": "ComponentIndex",
      "path": "/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/index.js",
      "componentChunkName": "component---src-pages-index-js",
      "context": {},
      "pluginCreator___NODE": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
      "pluginCreatorId": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/index.js",
      "id": "SitePage /",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "a95c033bffb6c8d0cff90b4e0c0202c8",
        "description": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /page-2/": {
      "jsonName": "page-2-fbc",
      "internalComponentName": "ComponentPage2",
      "path": "/page-2/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/page-2.js",
      "componentChunkName": "component---src-pages-page-2-js",
      "context": {},
      "pluginCreator___NODE": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
      "pluginCreatorId": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/page-2.js",
      "id": "SitePage /page-2/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "beb45a4da74ee503485974a36a466bb8",
        "description": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/": {
      "jsonName": "tags-275",
      "internalComponentName": "ComponentTags",
      "path": "/tags/",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/tags.js",
      "componentChunkName": "component---src-pages-tags-js",
      "context": {},
      "pluginCreator___NODE": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
      "pluginCreatorId": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/tags.js",
      "id": "SitePage /tags/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "8ae50485d8b7a0052c38d116fe5483c6",
        "description": "7c89b2f8-3f2f-584e-841e-d31bcc86ef78",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /404.html": {
      "jsonName": "404-html-516",
      "internalComponentName": "Component404Html",
      "path": "/404.html",
      "component": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/404.js",
      "componentChunkName": "component---src-pages-404-js",
      "context": {},
      "pluginCreator___NODE": "f795702c-a3b8-5a88-88ee-5d06019d44fa",
      "pluginCreatorId": "f795702c-a3b8-5a88-88ee-5d06019d44fa",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/404.js",
      "id": "SitePage /404.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "b3b6e1a5930c9047031204082432802b",
        "description": "f795702c-a3b8-5a88-88ee-5d06019d44fa",
        "owner": "internal-data-bridge"
      }
    }
  },
  "status": {
    "plugins": {},
    "PLUGINS_HASH": "5ed638d7920d76b31d196dfd3d222f43"
  },
  "componentDataDependencies": {
    "nodes": {
      "Site": [
        "/tags/",
        "sq--src-components-layout-js"
      ],
      "a6937b6d-e0cd-5650-89d5-7a25ac97a8df": [
        "sq--src-components-image-js"
      ],
      "2acf5ef5-8c6f-569b-836b-b5c43ad8525a": [
        "/article/server-side-split-testing/"
      ],
      "75f7a969-ed25-5d56-9fbd-a183f0b6938e": [
        "sq--src-components-image-js"
      ],
      "656c4525-4f6d-574f-a1b5-c54eea5b62ed": [
        "/article/css-grid-at-scale/"
      ],
      "1458e982-feeb-5a6e-96fa-161a5b63fa3e": [
        "/article/iphone-x-notch/"
      ],
      "2c8dc667-140d-5eaa-b0ad-3640c497ec7e": [
        "/article/ab-testing-lessons-learned/"
      ],
      "f2a39ed8-9e0f-5a5a-bb42-377da720d62e": [
        "/article/static-websites-and-jamstack/"
      ],
      "8983a814-0b7c-51f0-b01b-6700c9635cdc": [
        "/article/progressive-web-apps/"
      ],
      "2dfd9e99-2a14-53cf-9d96-0c0ad436577f": [
        "/article/exit-intent-popups/"
      ],
      "8f2ec885-a6bd-5555-8edb-956b912bda0b": [
        "/article/baseline-for-fast-loading-websites/"
      ],
      "c422d22e-a4a4-598a-96ba-06ff3abd933f": [
        "/article/hubspot-inbound-2016-designers-perspective/"
      ],
      "5865c153-a939-5e8b-a56d-8d5553abea00": [
        "/article/conversion-rate-optimization-case-study/"
      ],
      "80f02e41-0a1a-5701-8cdc-91e87d9343b1": [
        "/article/smashingconf-barcelona-2016-day-2/"
      ],
      "417f3349-660e-5809-af1a-55b88ead378a": [
        "/article/smashingconf-barcelona-2016-day-1/"
      ],
      "c4113acb-14ee-5322-96f2-dba851e3d5cf": [
        "/article/why-ive-started-writing/"
      ],
      "ebd18c81-668f-5e91-ba50-03627c446914": [],
      "23157a6d-2a25-5d76-b2dc-0c9967276363": [],
      "a8bbdf14-408c-5ed4-9d4b-10247be9a35f": [],
      "a3694107-b7a6-52c5-ad60-d043ec113ee3": [],
      "1b1cf993-a06d-5c41-81df-8bfdbf424d22": [],
      "984f251d-4435-56c8-9366-c82e7d949805": [],
      "c16d61f3-9f23-5a5a-9347-ae56956383c9": [],
      "0011e7ef-8b47-59d9-9af6-d35c7ad75ab7": [],
      "635ef4f9-e070-5a78-83db-377e31e70511": [],
      "5dcc1451-d2d6-5467-8e10-2b4a6d684de6": [],
      "799a225e-8fa2-5b39-8afd-0e98f0fee423": [],
      "02d18396-f186-5785-941b-634e5b36f096": [],
      "7a5a9d6d-4b46-5d78-85d2-28c35f37c4da": [],
      "b070e167-0c0f-5084-9b74-65939791d129": [],
      "5545757b-696a-59fc-966a-56f07d8cea19": [],
      "SitePage /dev-404-page/": []
    },
    "connections": {
      "MarkdownRemark": [
        null,
        "/",
        "/tags/",
        "/tags/a-btest/",
        "/tags/ja-mstack/",
        "/tags/web-perf/",
        "/tags/static-websites/",
        "/tags/cro/",
        "/tags/css/",
        "/tags/css-grid/",
        "/tags/mobile/",
        "/tags/headless-cms/",
        "/tags/static-site-generators/",
        "/tags/pwa/",
        "/tags/service-workers/",
        "/tags/web-app-manifest/",
        "/tags/exit-intent/",
        "/tags/modals/",
        "/tags/ab-test/",
        "/tags/code/",
        "/tags/optimization/",
        "/tags/perceived-performance/",
        "/tags/gdd/",
        "/tags/case-study/",
        "/articles/",
        null
      ],
      "File": [
        null
      ],
      "SitePage": [
        null
      ]
    }
  },
  "jsonDataPaths": {
    "tags-275": "105/path---tags-275-fc0-GpM3WzQMQVpUkOG7adOrltUuDOA",
    "sq--src-components-layout-js": 755544856,
    "article-server-side-split-testing-f1f": "390/path---article-server-side-split-testing-f-1-f-432-uT1w8TwEm3OY6wxMVgGmyvNNQTQ",
    "sq--src-components-image-js": 2011440971,
    "article-css-grid-at-scale-64d": "756/path---article-css-grid-at-scale-64-d-658-0CrOIsujd2mOl38ZPgViA6u1L4",
    "article-iphone-x-notch-1ef": "54/path---article-iphone-x-notch-1-ef-9a2-SjVpYoPox3CA1FVvi8fa8LuQ",
    "article-static-websites-and-jamstack-850": "116/path---article-static-websites-and-jamstack-850-d7b-jehtLlQdCEfcywBOykaHG2paVw",
    "article-ab-testing-lessons-learned-e09": "337/path---article-ab-testing-lessons-learned-e-09-06d-3X2t1pVmWh8z4PME0jYluH1TvWU",
    "article-progressive-web-apps-969": "576/path---article-progressive-web-apps-969-754-GV62RFOIcI1GeBLTwQruqQxGIMQ",
    "article-exit-intent-popups-1b6": "387/path---article-exit-intent-popups-1-b-6-750-CT0byzGVS7MD4VEH9P0sT7k42xY",
    "article-hubspot-inbound-2016-designers-perspective-fe3": "190/path---article-hubspot-inbound-2016-designers-perspective-fe-3-857-201pWc3YWyxbkRUJoXkqOBQU",
    "article-baseline-for-fast-loading-websites-1b2": "537/path---article-baseline-for-fast-loading-websites-1-b-2-743-bp0MENRpEqIPSRodgXJZePrGmTc",
    "article-conversion-rate-optimization-case-study-310": "207/path---article-conversion-rate-optimization-case-study-310-bb7-CZ7krzYTe9NGacV9txb8BE9Vo",
    "article-smashingconf-barcelona-2016-day-2-e68": "642/path---article-smashingconf-barcelona-2016-day-2-e-68-07a-L1hqSPxcaBlCpkQD70mtkeGCH4",
    "tags-a-btest-7f5": "174/path---tags-a-btest-7-f-5-e5d-kXna9dr3aoDFhDBvibPYE9d3P4",
    "tags-ja-mstack-4e6": "770/path---tags-ja-mstack-4-e-6-1f2-EVANJna4YyeEt4RpixxGkjcyjMs",
    "article-smashingconf-barcelona-2016-day-1-c75": "612/path---article-smashingconf-barcelona-2016-day-1-c-75-318-rzoUG7iPAU2t9eSLhxKV8iRFjGw",
    "article-why-ive-started-writing-4a9": "836/path---article-why-ive-started-writing-4-a-9-d06-apkMFuwNMahxpcf2g9sfLSuJVQ",
    "tags-web-perf-56d": "696/path---tags-web-perf-56-d-573-P0COCYDG6fySztcFpZKHRA4lPV8",
    "tags-static-websites-8f0": "654/path---tags-static-websites-8-f-0-27f-oRYLNlG4b4nHpWsbJfU3VPsSXI",
    "tags-cro-b1c": "640/path---tags-cro-b-1-c-f0b-iI852NS1MPwPkxOg3bsoRAl8uVY",
    "tags-css-51e": "525/path---tags-css-51-e-bf3-Q0BUiDFtL8wlESpJOtTqrRLTU8",
    "tags-css-grid-ed7": "925/path---tags-css-grid-ed-7-a7f-rxoVIzM04umimrH2j3GTaco8yO4",
    "tags-mobile-111": "135/path---tags-mobile-111-e9d-0ViUCcjtcSjVKIBymp92BUGWzvY",
    "tags-headless-cms-f03": "502/path---tags-headless-cms-f-03-185-PlaA2gFIb1tvAYM8IJmhdlmGJY",
    "tags-static-site-generators-c46": "271/path---tags-static-site-generators-c-46-805-8wP7xBXLcTuIC1WVhMd2KNU6wY",
    "tags-pwa-c99": "929/path---tags-pwa-c-99-294-RBYGlzOElCQkvkDYOpEIG0KSrY",
    "tags-service-workers-72e": "839/path---tags-service-workers-72-e-906-7sNaKfztt6HbHjkStHZAtZQVM",
    "tags-web-app-manifest-79d": "180/path---tags-web-app-manifest-79-d-760-ekrxW4MNiVkSv0bp5YiGDx1LgC4",
    "tags-exit-intent-304": "10/path---tags-exit-intent-304-4b5-b9hbKuxBH6QCrMFdiCNTxcxlqQM",
    "tags-modals-2d2": "3/path---tags-modals-2-d-2-389-zlfIQ0viIEs41zpEA8Dz5DoI",
    "tags-ab-test-703": "834/path---tags-ab-test-703-d3b-cVnKugvcFM6js8tshpw9CNAHYYY",
    "tags-code-32f": "566/path---tags-code-32-f-860-fXoq2jAVipwMpia9PzdddRZrGk",
    "tags-optimization-097": "23/path---tags-optimization-097-dca-hJVWxsehLFZ6c9yo3gK4wTeOI",
    "tags-perceived-performance-c6f": "549/path---tags-perceived-performance-c-6-f-0ae-FxzoZEjmZY7vY2Q1TN6ohtGNZ4",
    "tags-gdd-311": "319/path---tags-gdd-311-1e0-khaSDXFpI6pXpDoiGuBOWZyStbE",
    "tags-case-study-d77": "541/path---tags-case-study-d-77-01d-0Qrr7sJXETGvQq2kcmYeyYiGvg",
    "dev-404-page-5f9": "920/path---dev-404-page-5-f-9-fab-NZuapzHg3X9TaN1iIixfv1W23E",
    "404-22d": "44/path---404-22-d-bce-NZuapzHg3X9TaN1iIixfv1W23E",
    "about-f34": "125/path---about-f-34-4c2-NZuapzHg3X9TaN1iIixfv1W23E",
    "articles-18f": "648/path---articles-18-f-849-DuHwmqmbCKHICzcpxCLRgo7CG0",
    "index": "314/path---index-6a9-Viu92HtSJatuTSaTPkhxTPe7c",
    "page-2-fbc": "53/path---page-2-fbc-5a8-NZuapzHg3X9TaN1iIixfv1W23E",
    "404-html-516": "164/path---404-html-516-62a-NZuapzHg3X9TaN1iIixfv1W23E"
  },
  "components": {
    "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js": {
      "query": "query BlogPostByPath(\n  $path: String!\n) {\n  markdownRemark(frontmatter: {path: {eq: $path}}) {\n    html\n    frontmatter {\n      date(formatString: \"MMMM DD, YYYY\")\n      path\n      title\n      time\n      tags\n    }\n  }\n}\n",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/articleTemplate.js"
    },
    "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js": {
      "query": "query usersJgaviriaDocumentsDevelopmentWwwJulianIsSrcTemplatesTagsJs1926486196(\n  $tag: String\n) {\n  allMarkdownRemark(limit: 2000, sort: {fields: [frontmatter___date], order: DESC}, filter: {frontmatter: {tags: {in: [$tag]}}}) {\n    totalCount\n    edges {\n      node {\n        frontmatter {\n          title\n          path\n        }\n      }\n    }\n  }\n}\n",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/templates/tags.js"
    },
    "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/404.js": {
      "query": "",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/404.js"
    },
    "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/about.js": {
      "query": "",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/about.js"
    },
    "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/articles.js": {
      "query": "query usersJgaviriaDocumentsDevelopmentWwwJulianIsSrcPagesArticlesJs290883595 {\n  allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC}) {\n    totalCount\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          date(formatString: \"MMM DD YYYY\")\n          description\n          icon\n          path\n        }\n        excerpt\n      }\n    }\n  }\n}\n",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/articles.js"
    },
    "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/index.js": {
      "query": "query usersJgaviriaDocumentsDevelopmentWwwJulianIsSrcPagesIndexJs1165331465 {\n  allMarkdownRemark(limit: 6, sort: {fields: [frontmatter___date], order: DESC}) {\n    totalCount\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          date(formatString: \"MMM DD YYYY\")\n          description\n          icon\n          path\n        }\n        excerpt\n      }\n    }\n  }\n}\n",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/index.js"
    },
    "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/page-2.js": {
      "query": "",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/page-2.js"
    },
    "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/tags.js": {
      "query": "query usersJgaviriaDocumentsDevelopmentWwwJulianIsSrcPagesTagsJs3450235017 {\n  site {\n    siteMetadata {\n      title\n    }\n  }\n  allMarkdownRemark(limit: 2000) {\n    group(field: frontmatter___tags) {\n      fieldValue\n      totalCount\n    }\n  }\n}\n",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/pages/tags.js"
    },
    "/Users/jgaviria/Documents/Development/www.julian.is/.cache/dev-404-page.js": {
      "query": "",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/.cache/dev-404-page.js"
    }
  },
  "staticQueryComponents": {
    "sq--src-components-image-js": {
      "name": "usersJgaviriaDocumentsDevelopmentWwwJulianIsSrcComponentsImageJs2011440971",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/components/image.js",
      "id": "sq--src-components-image-js",
      "jsonName": "sq--src-components-image-js",
      "query": "query usersJgaviriaDocumentsDevelopmentWwwJulianIsSrcComponentsImageJs2011440971 {\n  placeholderImage: file(relativePath: {eq: \"gatsby-astronaut.png\"}) {\n    childImageSharp {\n      fluid(maxWidth: 300) {\n        ...GatsbyImageSharpFluid\n      }\n    }\n  }\n}\n\nfragment GatsbyImageSharpFluid on ImageSharpFluid {\n  base64\n  aspectRatio\n  src\n  srcSet\n  sizes\n}\n",
      "hash": 2011440971
    },
    "sq--src-components-layout-js": {
      "name": "SiteTitleQuery",
      "componentPath": "/Users/jgaviria/Documents/Development/www.julian.is/src/components/layout.js",
      "id": "sq--src-components-layout-js",
      "jsonName": "sq--src-components-layout-js",
      "query": "query SiteTitleQuery {\n  site {\n    siteMetadata {\n      title\n    }\n  }\n}\n",
      "hash": 755544856
    }
  }
}